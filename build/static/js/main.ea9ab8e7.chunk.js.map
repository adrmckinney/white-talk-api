{"version":3,"sources":["api.js","Home.js","components/Header.js","components/functions.js","components/NavBtns.js","components/alerts/RegSuccessfulAlert.js","components/MobileNavBtns.js","components/MobileNavMenu.js","components/Errors.js","components/ForgotPasswordRequest.js","components/LoginModal.js","components/createSessionForm.js/SessionTitle.js","components/createSessionForm.js/SessionDescription.js","components/createSessionForm.js/SessionDates.js","components/createSessionForm.js/SessionStatus.js","components/createSessionForm.js/SessionTime.js","components/createSessionForm.js/NumberOfRegistrants.js","components/CreateSession.js","components/registerAdminForm/AdminName.js","components/registerAdminForm/AdminEmail.js","components/registerAdminForm/AdminUsername.js","components/alerts/PasswordAlert.js","components/alerts/PasswordMatchAlert.js","components/UsePasswordValidation.js","components/registerAdminForm/AdminPassword.js","components/Register.js","components/viewForms/ViewAdminRegForm.js","components/viewForms/ViewCreateSessionForm.js","components/alerts/ResetPasswordUsernameEmailAlert.js","components/ViewForm.js","components/Nav.js","components/BookStudy.js","components/Divider.js","components/RegistrationMessage.js","components/alerts/DeleteAlert.js","components/sessionForms/Comments.js","components/sessionForms/Email.js","components/sessionForms/Name.js","components/sessionForms/Pronouns.js","components/sessionForms/SessionToRegister.js","components/sessionForms/ConfirmationStatus.js","components/sessionForms/SessionRegister.js","components/UpcomingSessions.js","components/Sessions.js","components/Connect.js","components/SelectionElement.js","components/dropdownMenus/StaticMenu.js","components/ViewSessionRegistrants.js","components/PasswordResetConfirm.js","components/UsernameResetConfirm.js","App.js","reportWebVitals.js","index.js"],"names":["url","axios","create","baseURL","process","login","username","password","post","then","res","data","catch","error","console","log","response","non_field_errors","Error","join","requestChangePassword","email","getUser","token","get","headers","Authorization","listSessions","Home","className","Header","path","useLocation","pathname","formatSelectedSession","session","title","format","start_date","end_date","handleFormFilter","name","value","setFilterFunction","pageClickEvent","useRefVariable","stateVariable","setStateFunction","clickEvent","e","current","contains","target","window","addEventListener","removeEventListener","sortSessions","sessions","slice","sort","a","b","Date","NavBtns","isLoggedIn","to","RegSuccessfulAlert","showRegSuccessfulAlert","setShowRegSuccessfulAlert","dropdownRef","useRef","useEffect","ref","xmlns","viewBox","fill","aria-hidden","fillRule","d","clipRule","onClick","MobileNavBtns","MobileNavMenu","setToken","setUsername","setShowMenu","showMenu","setIsSigningIn","setIsCreatingSession","role","Errors","errors","setErrors","errorRef","ForgotPasswordRequest","setIsForgotPassword","useState","open","setOpen","setEmail","cancelButtonRef","isLoading","setIsLoading","handleForgotPassword","Root","show","as","Fragment","static","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","htmlFor","type","id","placeholder","onChange","disabled","LoginModal","showModal","setShowModal","setAuth","setPassword","isForgotPassword","isloading","setIsloading","onSubmit","preventDefault","auth_token","message","aria-modal","aria-labelledby","autoComplete","required","SessionTitle","handleFilterSession","filterInput","SessionDescription","rows","description","SessionDates","selected","placeholderText","SessionStatus","session_status","aria-pressed","SessionTime","start_time","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","end_time","NumberOfRegistrants","number_of_registrants","CreateSession","isEditing","setIsEditing","sessionToEdit","handleEditSession","setSessions","useReducer","state","newState","setFilterInput","convertDate","date","moment","toDate","handleSubmit","pk","sessionData","createSession","AdminName","filterAdminRegister","setFilterAdminRegister","loginProfile","first_name","last_name","AdminEmail","AdminUsername","PasswordAlert","validLength","hasNumber","upperCase","lowerCase","specialChar","falseCount","setEnableBtn","match","UsePasswordValidation","confirmPassword","setValidLength","setHasNumber","setUpperCase","setLowerCase","setSpecialChar","setMatch","filter","length","toLowerCase","toUpperCase","test","AdminPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","passwordBlur","setPasswordBlur","passwordMatchBlur","setPasswordMatchBlur","re_password","onBlur","handlePasswordAlert","handlePasswordMatchAlert","Register","setIsRegistering","setIsEditingAdmin","enableBtn","put","updateAdmin","concat","push","register","ViewAdminRegForm","setFormToView","setLoginProfile","handleRequestChangeUsername","handleRequestChangePassword","isLoadingUsername","ViewCreateSessionForm","sessionToView","history","useHistory","goBack","ResetPasswordUsernameEmailAlert","isEmailingReset","setIsEmailingReset","ViewForm","formToView","setIsLoadingUsername","requestChangeUsername","Nav","loggedInName","showLoginModal","setShowLoginModal","setShowCreateSessionModal","setShowRegistrationModal","isSigningIn","isRegistering","isEditingAdmin","isCreatingSession","handleLogout","logout","aria-controls","aria-expanded","stroke","strokeLinecap","strokeLinejoin","strokeWidth","aria-haspopup","aria-orientation","BookStudy","Divider","RegistrationMessage","setRegistered","DeleteAlert","isDeleting","setIsDeleting","handleDelete","dataToDelete","handleClearAllActionState","Comments","comment","Email","Name","Pronouns","pronouns","SessionToRegister","sessionToRegister","handleSessionToEdit","showSessions","setShowSessions","selectedValue","setSelectedValue","tabIndex","aria-activedescendant","filterSessions","map","idx","data-idx","ConfirmationStatus","confirm","SessionRegister","setSessionToRegister","registrantToEdit","handleRegistrantUpdate","setRegistrantsToRender","regData","UpcomingSessions","setSessionToView","sessionToDelete","setSessionToDelete","setSessionToEdit","useCallback","input","updateSession","forEach","session_registrants","delete","deleteSession","renderSessionStatus","scope","Sessions","registered","Connect","SelectionElement","dropdownSelectorMode","handleAllEmails","setSelectDisplay","StaticMenu","setActionItem","selectedAction","setSelectedAction","showActions","setShowActions","item","ViewSessionRegistrants","setDropdownSelectorMode","registrantsToRender","allEmails","setAllEmails","emails","setEmails","registrantToDelete","setRegistrantToDelete","setRegistrantToEdit","sessionToUpdate","setSessionToUpdate","registrants","handleRefreshAfterEdit","deleteRegistrant","updateRegistrant","confirmationStatuses","reg","confirmed","status","getConfirmationCount","href","rel","registrant","includes","em","newEmails","handleEmails","checked","handleEditState","handleDeleteState","PasswordResetConfirm","setConfirmPassword","uid","useParams","urlToken","handleConfirmChangePassword","new_password","re_new_password","confirmChangePassword","UsernameResetConfirm","handleConfirmChangeUsername","new_username","confirmChangeUsername","useUsername","createPersistedState","useToken","App","setLoggedInName","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea9ab8e7.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = axios.create({\n  // baseURL: process.env.REACT_APP_DEPLOYED_API_URL\n  baseURL: process.env.REACT_APP_LOCAL_API_URL\n})\n\nexport const register = (filterAdminRegister) => {\n  return url\n    .post('api/auth/users/', filterAdminRegister)\n    .then(res => {\n      return login(filterAdminRegister.username, filterAdminRegister.password)\n    })\n    .catch(error => {\n      let errors = []\n      if (error.response) {\n        const data = error.response.data\n        if (data.username) {\n          errors = errors.concat(data.username)\n        }\n        if (data.password) {\n          errors = errors.concat(data.password)\n        }\n      }\n\n      if (errors.length === 0) {\n        errors.push('There was a problem registering.')\n      }\n      const err = new Error(errors[0])\n      throw err\n    })\n}\n\nexport const login = (username, password) => {\n  return url\n    .post('api/auth/token/login/', {\n      username,\n      password\n    })\n    .then(res => res.data)\n    .catch(error => {\n      console.log({ error })\n      if (error.response) {\n        if (error.response.data.non_field_errors) {\n          throw new Error(error.response.data.non_field_errors.join(' '))\n        }\n      }\n      throw new Error('Something went wrong.')\n    })\n}\n\nexport const logout = (token) => {\n  return url\n    .post('api/auth/token/logout/', token,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const updateAdmin = (token, filterAdminRegister, pk) => {\n  console.log('filterAdminRegister', filterAdminRegister)\n  return url\n    .put(`api/auth/users/${pk}/`, filterAdminRegister,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => {\n      console.log('res', res)\n      return res.data\n    })\n}\n\nexport const requestChangePassword = (email) => {\n  return url\n    .post('api/auth/users/reset_password/',\n      {\n        email: email\n      }\n    )\n    .then(res => res.data)\n}\n\nexport const confirmChangePassword = (uid, urlToken, password, confirmPassword) => {\n  return url\n    .post('api/auth/users/reset_password_confirm/',\n      {\n        new_password: password,\n        re_new_password: confirmPassword,\n        uid,\n        token: urlToken\n      }\n    )\n    .then(res => res.data)\n    // .catch(error => {\n    //   let errors = []\n    //   if (error.response) {\n    //     const data = error.response.data\n    //     if (data.password) {\n    //       errors = errors.concat(data.password)\n    //     }\n    //   }\n\n  //   if (errors.length === 0) {\n  //     errors.push('There was a problem registering.')\n  //   }\n  //   const err = new Error(errors[0])\n  //   throw err\n  // })\n}\n\nexport const requestChangeUsername = (email) => {\n  return url\n    .post('api/auth/users/reset_username/',\n      {\n        email: email\n      }\n    )\n    .then(res => res.data)\n}\n\nexport const confirmChangeUsername = (uid, token, username) => {\n  return url\n    .post('api/auth/users/reset_username_confirm/',\n      {\n        uid,\n        token,\n        new_username: username\n      }\n    )\n    .then(res => res.data)\n}\n\n// ***************************\n// *** All things SESSIONS ***\n// ***************************\n\nexport const getUser = (token) => {\n  return url\n    .get('api/users/me/',\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const sessionRegister = (regData) => {\n  return url\n    .post('api/session-register/', regData)\n    .then(res => res.data)\n    .catch(error => {\n      console.log(error.response.data)\n      if (error.response) {\n        if (error.response.data.non_field_errors) {\n          throw new Error(error.response.data.non_field_errors.join(' '))\n        }\n      }\n      throw new Error('Something went wrong.')\n    })\n}\n\nexport const listSessions = () => {\n  return url\n    .get('api/sessions/')\n    .then(res => res.data)\n}\n\nexport const createSession = (token, sessionData) => {\n  console.log('create api ran')\n  return url\n    .post('api/create-session/', sessionData,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const deleteSession = (token, pk) => {\n  return url\n    .delete(`api/delete-session/${pk}/`,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const updateSession = (token, pk, input) => {\n  console.log('update api ran')\n  return url\n    .put(`api/update-session/${pk}/`, input,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const deleteRegistrant = (token, pk) => {\n  return url\n    .delete(`api/delete-registrant/${pk}/`,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const updateRegistrant = (token, pk, input) => {\n  return url\n    .put(`api/update-registrant/${pk}/`, input,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n","\nconst Home = () => {\n  return (\n    <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'>\n      <div className='bg-lavenderBlue rounded-lg shadow px-5 py-6 sm:px-6'>\n        <div className='h-96 border-4 border-bluePurple rounded-lg flex flex-col justify-center'>\n          <p className='text-2xl mx-10 font-serif text-coolGray-700 leading-loose'>We come together to encourage discussions of exploring white identity in the context of racism in America. With that foundation we learn about the characteristics of white supremacy culture and lean into antidotes as we strengthen an anti-racist community. The ultimate goal is to help us fully understand our stakes in dismantling racism and why it is important to be invested in this ongoing work.</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import { useLocation } from 'react-router-dom'\nconst Header = () => {\n  const path = useLocation()\n\n  const renderLocation = () => {\n    if (path.pathname === '/') {\n      return (\n        <div className='flex'>\n          <p>Welcome to&nbsp;</p>\n          <p className='text-5xl'>Racial Equity white Talk</p>\n        </div>\n      )\n    } else if (path.pathname === '/book-study') {\n      return 'Book Study'\n    } else if (path.pathname === '/sessions') {\n      return 'Sessions'\n    } else if (path.pathname === '/connect') {\n      return 'Connect'\n    } else if (path.pathname === '/view-session-registrants') {\n      return 'Session Registrants'\n    }\n  }\n\n  return (\n    <header className='pt-32 pb-10'>\n      <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>\n        <h1 className='text-3xl font-bold text-isabelline'>\n          {renderLocation()}\n        </h1>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import Moment from 'react-moment'\n\nexport const formatSelectedSession = (session) => {\n  return (\n    <span\n      className='font-normal space-x-2 truncate flex'\n    >\n      <p>{session.title}</p>\n      <span className='flex space-x-1'>\n        <Moment format='MM/DD/YYYY'>{session.start_date}</Moment>\n        <p>-</p>\n        <Moment format='MM/DD/YYYY'>{session.end_date}</Moment>\n      </span>\n    </span>\n  )\n}\n\nexport const handleFormFilter = (name, value, setFilterFunction) => {\n  return setFilterFunction({ [name]: value })\n}\n\nexport const pageClickEvent = (useRefVariable, stateVariable, setStateFunction) => {\n  const clickEvent = (e) => {\n    if (useRefVariable.current !== null && !useRefVariable.current.contains(e.target)) {\n      setStateFunction(!stateVariable)\n    }\n  }\n\n  if (stateVariable) {\n    window.addEventListener('click', clickEvent)\n  }\n  return () => {\n    window.removeEventListener('click', clickEvent)\n  }\n}\n\nexport const sortSessions = (sessions) => {\n  return sessions.slice().sort((a, b) => new Date(b.start_date) - new Date(a.start_date))\n}\n","import { Link } from 'react-router-dom'\n\nconst NavBtns = ({ isLoggedIn }) => {\n  return (\n    <div className='flex space-x-4'>\n      {/* <!-- Current: \"bg-indigo-700 text-white\", Default: \"text-white hover:bg-indigo-500 hover:bg-opacity-75\" --> */}\n\n      <Link to='/' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n        Home\n      </Link>\n\n      <Link to='/sessions' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n        Sessions\n      </Link>\n\n      {/* <Link to='/connect' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n        Connect\n      </Link> */}\n\n      {/* <Link to='/book-study' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n        Book Study\n      </Link> */}\n\n      {isLoggedIn &&\n        <Link to='/view-session-registrants' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n          Session Registrants\n        </Link>}\n    </div>\n  )\n}\n\nexport default NavBtns\n","import { useRef, useEffect } from 'react'\nimport { pageClickEvent } from '../functions'\n\nconst RegSuccessfulAlert = ({ showRegSuccessfulAlert, setShowRegSuccessfulAlert }) => {\n  const dropdownRef = useRef(null)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showRegSuccessfulAlert, setShowRegSuccessfulAlert)\n  }, [showRegSuccessfulAlert, setShowRegSuccessfulAlert])\n\n  return (\n    <>\n      <div ref={dropdownRef} className='rounded-md bg-green-50 p-4'>\n        <div className='flex'>\n          <div className='flex-shrink-0'>\n            {/* <!-- Heroicon name: solid/check-circle --> */}\n            <svg className='h-5 w-5 text-green-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z' clipRule='evenodd' />\n            </svg>\n          </div>\n          <div className='ml-3'>\n            <p className='text-sm font-medium text-green-800'>\n              Registration was successful\n            </p>\n          </div>\n          <div className='ml-auto pl-3'>\n            <div className='-mx-1.5 -my-1.5'>\n              <button\n                className='inline-flex bg-green-50 rounded-md p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600'\n                onClick={() => setShowRegSuccessfulAlert(false)}\n              >\n                <span className='sr-only'>Dismiss</span>\n                {/* <!-- Heroicon name: solid/x --> */}\n                <svg className='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n                  <path fillRule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clipRule='evenodd' />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default RegSuccessfulAlert\n","import { Link } from 'react-router-dom'\n\nconst MobileNavBtns = ({ isLoggedIn }) => {\n  return (\n    <div className='px-2 pt-2 pb-3 space-y-1'>\n      {/* <!-- Current: \"bg-indigo-700 text-white\", Default: \"text-white hover:bg-indigo-500 hover:bg-opacity-75\" --> */}\n\n      <Link to='/' className='text-white hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Home\n      </Link>\n\n      <Link to='/sessions' className='text-white hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Sessions\n      </Link>\n\n      {/* <Link to='#' className='text-white hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Connect\n      </Link> */}\n\n      {/* <Link to='/book-study' className='text-white hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Book Study\n      </Link> */}\n\n      {isLoggedIn &&\n        <Link to='/view-session-registrants' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n          Session Registrants\n        </Link>}\n\n    </div>\n  )\n}\n\nexport default MobileNavBtns\n","import { Link } from 'react-router-dom'\n\nconst MobileNavMenu = ({ setToken, setUsername, isLoggedIn, showMenu, setShowMenu, username, setIsSigningIn, setIsCreatingSession }) => {\n  return (\n    <div className='pt-4 pb-3 border-t border-indigo-700'>\n      <div className='px-5 flex items-center'>\n        {/* <div className='flex-shrink-0'>\n          <img className='rounded-full h-10 w-10' src='https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixqx=F3sxs144tE&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80' alt='' />\n        </div> */}\n        <div className='ml-3'>\n          <div className='text-base font-medium text-white'>{username}</div>\n        </div>\n      </div>\n      <div className='mt-3 px-2 space-y-1'>\n        <button\n          className='block rounded-md py-2 px-3 text-base font-medium text-white hover:bg-indigo-500 hover:bg-opacity-75'\n          role='menuitem'\n          onClick={() => {\n            setShowMenu(false)\n            setIsCreatingSession(true)\n          }}\n        >\n          Create New Session\n        </button>\n\n        <Link to='#' className='block rounded-md py-2 px-3 text-base font-medium text-white hover:bg-indigo-500 hover:bg-opacity-75'>\n          Your Profile\n        </Link>\n\n        <Link to='#' className='block rounded-md py-2 px-3 text-base font-medium text-white hover:bg-indigo-500 hover:bg-opacity-75'>\n          Settings\n        </Link>\n\n        {isLoggedIn\n          ? (\n            <Link\n              to='/'\n              className='block rounded-md py-2 px-3 text-base font-medium text-white hover:bg-indigo-500 hover:bg-opacity-75'\n              onClick={() => {\n                setToken(null)\n                setUsername('')\n                setShowMenu(false)\n              }}\n            >\n              Sign out\n            </Link>\n            )\n          : (\n            <button\n              className='block rounded-md py-2 px-3 text-base font-medium text-white hover:bg-indigo-500 hover:bg-opacity-75'\n              role='menuitem'\n              onClick={() => {\n                setShowMenu(false)\n                setIsSigningIn(true)\n              }}\n            >\n              Sign in\n            </button>)}\n\n      </div>\n    </div>\n  )\n}\n\nexport default MobileNavMenu\n","import { useRef, useEffect } from 'react'\nimport { pageClickEvent } from './functions'\n\nconst Errors = ({ errors, setErrors }) => {\n  const errorRef = useRef(null)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(errorRef, errors, setErrors)\n  }, [errors, setErrors])\n\n  return (\n    <div ref={errorRef}>\n      <div className='rounded-md bg-red-50 p-4'>\n        <div className='flex'>\n          <div className='flex-shrink-0'>\n            {/* <!-- Heroicon name: solid/x-circle --> */}\n            <button\n              onClick={() => setErrors('')}\n            >\n              <svg className='h-5 w-5 text-red-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n                <path fillRule='evenodd' d='M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z' clipRule='evenodd' />\n              </svg>\n            </button>\n          </div>\n          <div className='ml-3'>\n            <h3 className='text-sm font-medium text-red-800'>\n              Error\n            </h3>\n            <div className='mt-2 text-sm text-red-700'>\n              <ul className='list-disc pl-5 space-y-1'>\n                <li>\n                  {errors}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Errors\n","import { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { RefreshIcon, ShieldCheckIcon } from '@heroicons/react/outline'\nimport { requestChangePassword } from '../api'\n\nexport default function ForgotPasswordRequest ({ setIsForgotPassword }) {\n  const [open, setOpen] = useState(true)\n  const [email, setEmail] = useState('')\n  const cancelButtonRef = useRef()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleForgotPassword = (email) => {\n    setIsLoading(true)\n    requestChangePassword(email)\n      .then(data => {\n        setIsForgotPassword(false)\n        setIsLoading(false)\n        setOpen(false)\n      })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100'>\n                  <ShieldCheckIcon className='h-6 w-6 text-green-600' aria-hidden='true' />\n                </div>\n                <div className='mt-3 text-center sm:mt-5'>\n                  <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n                    Change Password Request\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      To reset your password, please enter your email associated with this account. You will receive an email with a link to change your password.\n                    </p>\n                  </div>\n                </div>\n                <label\n                  htmlFor='email'\n                  className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n                >\n                  Email\n                </label>\n                <div className='mt-1 relative rounded-md shadow-sm'>\n                  <div className='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'>\n                    <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n                      <path d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z' />\n                      <path d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n                    </svg>\n                  </div>\n                  <input\n                    type='email'\n                    name='email'\n                    id='email'\n                    className='focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md text-sm sm:text-lg border-gray-300 border pl-10'\n                    placeholder='you@example.com'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                {isLoading\n                  ? <button\n                      type='button'\n                      disabled\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleForgotPassword(email)\n                      }}\n                    >\n                    <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                    Processing\n                    </button>\n                  : <button\n                      type='button'\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleForgotPassword(email)\n                      }}\n                    >\n                    Send Email\n                    </button>}\n\n                <button\n                  type='button'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                  onClick={() => {\n                    setIsForgotPassword(false)\n                    setOpen(false)\n                  }}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { login } from '../api'\nimport Errors from './Errors'\nimport ForgotPasswordRequest from './ForgotPasswordRequest'\nimport { RefreshIcon } from '@heroicons/react/outline'\n\nconst LoginModal = ({ showModal, setShowModal, setAuth, setIsSigningIn }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState('')\n  const [isForgotPassword, setIsForgotPassword] = useState(false)\n  const [isloading, setIsloading] = useState(false)\n\n  const handleLogin = (e) => {\n    setIsloading(true)\n    e.preventDefault()\n    login(username, password)\n      .then(data => {\n        if (data && data.auth_token) {\n          setAuth(username, data.auth_token)\n          setShowModal('')\n          setIsloading(false)\n          setIsSigningIn(false)\n        }\n      })\n      .catch(error => {\n        setErrors(error.message)\n      })\n  }\n\n  if (isForgotPassword) {\n    return (\n      <ForgotPasswordRequest setIsForgotPassword={setIsForgotPassword} />\n    )\n  }\n\n  return (\n    <div className='fixed z-20 inset-0 overflow-y-auto'>\n      <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n        {/* Background overlay, show/hide based on modal state. */}\n        <Transition\n          show={showModal === 'login-form'}\n          enter='ease-out duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in duration-200'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n            <div className='absolute inset-0 bg-gray-500 opacity-75' />\n          </div>\n        </Transition>\n        {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n        <span className='inline-block align-middle h-screen w-auto sm:w-1/2 md:w-1/3' aria-hidden='true'>&#8203;\n\n          {/* Modal panel, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'login-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <form\n              className='mt-8 space-y-6'\n              onSubmit={handleLogin}\n            >\n              <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                <div>\n                  <div className='mt-2 mb-5 text-center'>\n                    <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                      Admin Login\n                    </h3>\n                  </div>\n\n                  {errors && (\n                    <div>\n                      <Errors errors={errors} setErrors={setErrors} />\n                    </div>\n                  )}\n                  <input type='hidden' name='remember' value='true' />\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    <div>\n                      <label htmlFor='email-address' className='sr-only'>Username</label>\n                      <input\n                        id='email-address'\n                        name='email'\n                        type='text'\n                        autoComplete='email'\n                        required\n                        className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                        placeholder='Username'\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor='password' className='sr-only'>Password</label>\n                      <input\n                        id='password'\n                        name='password'\n                        type='password'\n                        autoComplete='current-password'\n                        required className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                        placeholder='Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='flex items-center justify-between mt-2'>\n                    {/* <div className='flex items-center'>\n                      <input\n                        id='remember_me'\n                        name='remember_me'\n                        type='checkbox'\n                        className='h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded'\n                      />\n                      <label htmlFor='remember_me' className='ml-2 block text-sm text-gray-900'>\n                        Remember me\n                      </label>\n                    </div> */}\n\n                    <div className='text-sm'>\n                      <button\n                        type='button'\n                        className='font-medium text-indigo-600 hover:text-indigo-500'\n                        onClick={() => setIsForgotPassword(true)}\n                      >\n                        Forgot your password?\n                      </button>\n                    </div>\n                  </div>\n\n                </div>\n                <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                  {isloading\n                    ? <button type='submit' disabled className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                      Processing\n                    </button>\n                    : <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      Login\n                    </button>}\n\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                    onClick={() => {\n                      setIsSigningIn(false)\n                      setShowModal('')\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition>\n        </span>\n      </div>\n    </div>\n\n  )\n}\n\nexport default LoginModal\n","\nconst SessionTitle = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n        htmlFor='title'\n      >\n        Title\n      </label>\n      <input\n        className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n        type='text'\n        name='title'\n        id='title'\n        value={filterInput.title}\n        // onChange={e => setTitle(e.target.value)}\n        onChange={(e) => handleFilterSession('title', e.target.value)}\n      />\n    </>\n  )\n}\n\nexport default SessionTitle\n","\nconst SessionDescription = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        htmlFor='description'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n      >\n        Description\n      </label>\n      <div className='mt-1'>\n        <textarea\n          className='shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md'\n          name='description'\n          id='description'\n          rows='3'\n          value={filterInput.description}\n        //   onChange={e => setDescription(e.target.value)}\n          onChange={(e) => handleFilterSession('description', e.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default SessionDescription\n","import DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst SessionDates = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col space-y-2 items-center text-sm sm:text-lg font-medium text-gray-700'>\n        <h1>Dates</h1>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='startDate'\n          >\n            Start Date\n          </label> */}\n          <DatePicker\n            selected={filterInput.start_date}\n            id='startDate'\n            autoComplete='off'\n            placeholderText='Select a Start Date'\n            onChange={e => handleFilterSession('start_date', e)}\n          />\n        </div>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='endDate'\n          >\n            End Date\n          </label> */}\n          <DatePicker\n            selected={filterInput.end_date}\n            id='endDate'\n            autoComplete='off'\n            placeholderText='Select an End Date'\n            onChange={e => handleFilterSession('end_date', e)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SessionDates\n","\nconst SessionStatus = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col h-full w-full items-center justify-between'>\n        <span className='flex space-x-2 items-center'>\n          <h1 className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'> Session Status:</h1>\n          <span className={`${filterInput.session_status ? 'bg-green-300 rounded-lg' : 'bg-red-300 rounded-lg'} px-1 py-0.5 text-center`}>{filterInput.session_status ? 'Open' : 'Closed'}</span>\n        </span>\n\n        <button\n          type='button'\n          className='bg-gray-200 relative inline-flex flex-shrink-0 h-6 w-40 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n          aria-pressed='false'\n          aria-labelledby='session-status'\n          value={filterInput.session_status}\n          onClick={e => handleFilterSession('session_status', e.target.value === 'false')}\n        >\n          <span className='sr-only'>Use setting</span>\n          <span\n            aria-hidden='true'\n            className={`${filterInput.session_status ? 'translate-x-32' : 'translate-x-0'} pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-500`}\n          />\n        </button>\n\n      </div>\n    </>\n  )\n}\n\nexport default SessionStatus\n","import DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst SessionTime = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col space-y-2 items-center text-sm sm:text-lg font-medium text-gray-700'>\n        <h1>Times</h1>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='startDate'\n          >\n            Start Time\n          </label> */}\n\n          <DatePicker\n            selected={filterInput.start_time}\n            name='start_time'\n            showTimeSelect\n            autoComplete='off'\n            showTimeSelectOnly\n            timeIntervals={15}\n            timeCaption='Time'\n            dateFormat='h:mm aa'\n            placeholderText='Select a Start Time'\n            onChange={e => handleFilterSession('start_time', e)}\n          />\n\n        </div>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='endDate'\n          >\n            End Time\n          </label> */}\n          <DatePicker\n            selected={filterInput.end_time}\n            name='end_time'\n            showTimeSelect\n            autoComplete='off'\n            showTimeSelectOnly\n            timeIntervals={15}\n            timeCaption='Time'\n            dateFormat='h:mm aa'\n            placeholderText='Select an End Time'\n            onChange={e => handleFilterSession('end_time', e)}\n          />\n        </div>\n      </div>\n      <div />\n    </>\n  )\n}\n\nexport default SessionTime\n","\nconst NumberOfRegistrants = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n        htmlFor='number_of_registrants'\n      >\n        Max number of registrants\n      </label>\n      <input\n        className='appearance-none relative block w-3/4 px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n        type='number'\n        name='number_of_registrants'\n        id='number_of_registrants'\n        value={filterInput.number_of_registrants}\n        onChange={(e) => handleFilterSession('number_of_registrants', e.target.value)}\n      />\n    </>\n  )\n}\n\nexport default NumberOfRegistrants\n","import { useReducer, useEffect } from 'react'\nimport { Transition } from '@headlessui/react'\nimport moment from 'moment'\nimport { createSession, listSessions } from '../api'\nimport SessionTitle from './createSessionForm.js/SessionTitle'\nimport SessionDescription from './createSessionForm.js/SessionDescription'\nimport SessionDates from './createSessionForm.js/SessionDates'\nimport SessionStatus from './createSessionForm.js/SessionStatus'\nimport SessionTime from './createSessionForm.js/SessionTime'\nimport NumberOfRegistrants from './createSessionForm.js/NumberOfRegistrants'\nimport { RefreshIcon } from '@heroicons/react/outline'\n\nconst CreateSession = ({ token, showModal, setShowModal, isEditing, setIsEditing, sessionToEdit, handleEditSession, setIsCreatingSession, setSessions, isLoading, setIsLoading }) => {\n  const [filterInput, setFilterInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      title: '',\n      start_date: '',\n      end_date: '',\n      start_time: '',\n      end_time: '',\n      description: '',\n      session_status: false,\n      number_of_registrants: 8\n    }\n  )\n\n  const handleFilterSession = (name, value) => {\n    setFilterInput({ [name]: value })\n  }\n\n  useEffect(() => {\n    if (isEditing === 'edit-session' && sessionToEdit) {\n      // for the existing dates to populate the datepicker fields that have to\n      // run through this function that formats them correctly.\n      const convertDate = (date) => {\n        return moment(date)\n      }\n\n      setFilterInput({\n        title: sessionToEdit.title,\n        start_date: convertDate(sessionToEdit.start_date).toDate(),\n        end_date: convertDate(sessionToEdit.end_date).toDate(),\n        start_time: convertDate(sessionToEdit.start_time).toDate(),\n        end_time: convertDate(sessionToEdit.end_time).toDate(),\n        description: sessionToEdit.description,\n        session_status: sessionToEdit.session_status,\n        number_of_registrants: sessionToEdit.number_of_registrants\n      })\n    }\n  }, [isEditing, sessionToEdit])\n\n  // DEBUGGER STATION\n  // console.log('sessionToEdit', sessionToEdit.pk)\n  // console.log('filterInput', filterInput)\n  // console.log('isEditing', isEditing)\n  // console.log('showModal', showModal)\n  // console.log('isLoading', isLoading)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    if (isEditing === 'edit-session') {\n      handleEditSession(token, sessionToEdit.pk, filterInput)\n    } else {\n      createSession(token, filterInput)\n        .then(data => {\n          setShowModal('')\n          setIsCreatingSession(false)\n          listSessions()\n            .then(data => setSessions(data))\n          setIsLoading(true)\n        })\n    }\n  }\n\n  return (\n    <>\n      <div className='fixed z-20 inset-0 overflow-y-auto'>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n          {/* Background overlay, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'create-session-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n              <div className='absolute inset-0 bg-gray-500 opacity-75' />\n            </div>\n          </Transition>\n          {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n          <span className='sm:inline-block sm:align-middle sm:h-screen w-full' aria-hidden='true'>&#8203;\n\n            {/* Modal panel, show/hide based on modal state. */}\n            <Transition\n              show={showModal === 'create-session-form'}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n              enterTo='opacity-100 translate-y-0 sm:scale-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n              leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            >\n              <form onSubmit={e => {\n                e.preventDefault()\n                handleSubmit(e)\n              }}\n              >\n                <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                  <div>\n                    <div className='mt-2 mb-5 text-center'>\n                      <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                        {isEditing ? 'Update Session' : 'Create a new session'}\n                      </h3>\n                    </div>\n                    <span className='flex flex-col space-y-8'>\n                      <div>\n                        <SessionTitle handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                      </div>\n                      <span className='flex justify-between'>\n                        <div>\n                          <SessionDates handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                        <div>\n                          <SessionTime handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                      </span>\n                      <span className='flex justify-between'>\n                        <div>\n                          <NumberOfRegistrants handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                        <div>\n                          <SessionStatus handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                      </span>\n                      <div>\n                        <SessionDescription handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                      </div>\n                    </span>\n                  </div>\n                  <span className=''>\n                    <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                      {isLoading\n                        ? <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                          <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                          Processing\n                          </button>\n                        : <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                          {isEditing === 'edit-session'\n                            ? 'Update'\n                            : 'Create'}\n                          </button>}\n                      <button\n                        type='button'\n                        className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                        onClick={() => {\n                          if (isEditing) {\n                            setIsEditing('')\n                          } else {\n                            setShowModal('')\n                            setIsCreatingSession(false)\n                          }\n                        }}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </span>\n                </div>\n              </form>\n            </Transition>\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CreateSession\n","import { handleFormFilter } from '../functions'\n\nconst AdminName = ({ filterAdminRegister, setFilterAdminRegister, loginProfile }) => {\n  return (\n    <>\n      <div className='flex space-x-4'>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='first_name'\n          >\n            First Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n            type='text'\n            name='first_name'\n            id='name'\n            placeholder='First name'\n            value={filterAdminRegister.first_name}\n            onChange={e => handleFormFilter('first_name', e.target.value, setFilterAdminRegister)}\n          />\n        </div>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='last_name'\n          >\n            Last Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n            type='text'\n            name='name'\n            placeholder='Last name'\n            id='last_name'\n            value={filterAdminRegister.last_name}\n            onChange={e => handleFormFilter('last_name', e.target.value, setFilterAdminRegister)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AdminName\n","import { handleFormFilter } from '../functions'\n\nconst AdminEmail = ({ filterAdminRegister, setFilterAdminRegister }) => {\n  return (\n    <>\n      <label\n        htmlFor='email'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n      >\n        Email\n      </label>\n      <div className='mt-1 relative rounded-md shadow-sm'>\n        <div className='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'>\n          <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n            <path d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z' />\n            <path d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n          </svg>\n        </div>\n        <input\n          type='email'\n          name='email'\n          id='email'\n          className='focus:ring-darkerPurple focus:darkerPurple flex-1 block w-full rounded-md text-sm sm:text-sm border-gray-300 border pl-10'\n          placeholder='you@example.com'\n          value={filterAdminRegister.email}\n          onChange={(e) => handleFormFilter('email', e.target.value, setFilterAdminRegister)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default AdminEmail\n","import { handleFormFilter } from '../functions'\n\nconst AdminUsername = ({ filterAdminRegister, setFilterAdminRegister }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='first_name'\n      >\n        Username\n      </label>\n      <input\n        id='username'\n        name='username'\n        type='text'\n        autoComplete='username'\n        required\n        className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n        placeholder='Username'\n        value={filterAdminRegister.username}\n        onChange={(e) => handleFormFilter('username', e.target.value, setFilterAdminRegister)}\n      />\n    </>\n  )\n}\n\nexport default AdminUsername\n","import { XCircleIcon } from '@heroicons/react/solid'\n\nexport default function PasswordAlert ({ validLength, hasNumber, upperCase, lowerCase, specialChar, falseCount, setEnableBtn }) {\n  return (\n    <div className='rounded-md bg-red-50 p-4'>\n      <div className='flex flex-col'>\n        {!validLength &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must be at least 8 characters</h3>\n            </div>\n          </span>}\n        {!hasNumber &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one number</h3>\n            </div>\n          </span>}\n        {!upperCase &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one capital letter</h3>\n            </div>\n          </span>}\n        {!lowerCase &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one lower case letter</h3>\n            </div>\n          </span>}\n        {!specialChar &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one special character (! @ # $ % ^ & * ( ) _ +)</h3>\n            </div>\n          </span>}\n      </div>\n    </div>\n  )\n}\n","import { XCircleIcon } from '@heroicons/react/solid'\n\nexport default function PasswordAlert ({ match }) {\n  return (\n    <div className='rounded-md bg-red-50 p-4 mt-2'>\n      <div className='flex'>\n        <div className='flex-shrink-0'>\n          <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n        </div>\n        <div className='ml-3'>\n          <h3 className='text-sm font-medium text-red-800'>Your passwords must match</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst UsePasswordValidation = ({ password, confirmPassword }) => {\n  const [validLength, setValidLength] = useState(false)\n  const [hasNumber, setHasNumber] = useState(false)\n  const [upperCase, setUpperCase] = useState(false)\n  const [lowerCase, setLowerCase] = useState(false)\n  const [specialChar, setSpecialChar] = useState(false)\n  const [match, setMatch] = useState(false)\n  const value = [validLength, hasNumber, upperCase, lowerCase, specialChar]\n  const count = value.filter((value) => value).length\n  const falseCount = 5 - count\n  console.log('VALUE', value)\n  console.log('count', falseCount)\n\n  useEffect(() => {\n    setValidLength(password.length >= 8)\n    setUpperCase(password.toLowerCase() !== password)\n    setLowerCase(password.toUpperCase() !== password)\n    setHasNumber(/\\d/.test(password))\n    setSpecialChar(/[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(password))\n    setMatch(password && password === confirmPassword)\n  }, [password, confirmPassword])\n\n  return [validLength, hasNumber, upperCase, lowerCase, match, specialChar, falseCount]\n}\n\nexport default UsePasswordValidation\n","import { EyeIcon, EyeOffIcon } from '@heroicons/react/outline'\nimport { useState, useEffect } from 'react'\nimport PasswordAlert from '../alerts/PasswordAlert'\nimport PasswordMatchAlert from '../alerts/PasswordMatchAlert'\nimport { handleFormFilter } from '../functions'\nimport UsePasswordValidation from '../UsePasswordValidation'\n\nconst AdminPassword = ({ filterAdminRegister, setFilterAdminRegister, setEnableBtn }) => {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [passwordBlur, setPasswordBlur] = useState(false)\n  const [passwordMatchBlur, setPasswordMatchBlur] = useState(false)\n\n  const [validLength, hasNumber, upperCase, lowerCase, match, specialChar, falseCount] = UsePasswordValidation({\n    password: filterAdminRegister.password,\n    confirmPassword: filterAdminRegister.re_password\n  })\n\n  useEffect(() => {\n    setEnableBtn(falseCount)\n  }, [falseCount, setEnableBtn])\n\n  const handlePasswordAlert = () => {\n    if (passwordBlur) {\n      return (\n        <span>\n          <PasswordAlert validLength={validLength} hasNumber={hasNumber} upperCase={upperCase} lowerCase={lowerCase} specialChar={specialChar} falseCount={falseCount} setEnableBtn={setEnableBtn} />\n        </span>\n      )\n    }\n  }\n\n  const handlePasswordMatchAlert = () => {\n    if (passwordMatchBlur) {\n      return (\n        <PasswordMatchAlert match={match} />\n      )\n    }\n  }\n\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='password'\n      >\n        Password\n      </label>\n      <span className='flex'>\n        <input\n          id='password'\n          name='password'\n          onBlur={e => setPasswordBlur(true)}\n          type={`${showPassword ? 'text' : 'password'}`}\n          autoComplete='current-password'\n          required className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n          placeholder='Password'\n          value={filterAdminRegister.password}\n          onChange={(e) => handleFormFilter('password', e.target.value, setFilterAdminRegister)}\n        />\n        <button\n          type='button'\n          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n          onClick={() => setShowPassword(!showPassword)}\n        >\n          {showPassword\n            ? <EyeOffIcon className='w-4 h-4' />\n            : <EyeIcon className='w-4 h-4' />}\n        </button>\n      </span>\n\n      {falseCount > 0 && <span>{handlePasswordAlert()}</span>}\n\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='confirm password'\n      >\n        Re-type Password\n      </label>\n      <span className='flex'>\n        <input\n          id='confirm password'\n          name='re_password'\n          onBlur={e => setPasswordMatchBlur(true)}\n          type={`${showConfirmPassword ? 'text' : 'password'}`}\n          required\n          className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n          placeholder='Confirm Password'\n          value={filterAdminRegister.re_password}\n          onChange={(e) => {\n            handleFormFilter(e.target.name, e.target.value, setFilterAdminRegister)\n          }}\n        />\n        <button\n          type='button'\n          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n        >\n          {showConfirmPassword\n            ? <EyeOffIcon className='w-4 h-4' />\n            : <EyeIcon className='w-4 h-4' />}\n        </button>\n      </span>\n      {!match && handlePasswordMatchAlert()}\n    </>\n  )\n}\n\nexport default AdminPassword\n","import { useEffect, useReducer, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { register, updateAdmin } from '../api'\nimport Errors from './Errors'\nimport AdminName from './registerAdminForm/AdminName'\nimport AdminEmail from './registerAdminForm/AdminEmail'\nimport AdminUsername from './registerAdminForm/AdminUsername'\nimport AdminPassword from './registerAdminForm/AdminPassword'\n\nconst Register = ({ token, isEditing, setIsEditing, showModal, setShowModal, loginProfile, setIsRegistering, setIsEditingAdmin }) => {\n  const [errors, setErrors] = useState('')\n  const [enableBtn, setEnableBtn] = useState(0)\n\n  const [filterAdminRegister, setFilterAdminRegister] = useReducer(\n    (name, value) => ({ ...name, ...value }),\n    {\n      first_name: '',\n      last_name: '',\n      username: '',\n      email: '',\n      password: '',\n      re_password: ''\n    }\n  )\n\n  useEffect(() => {\n    if (isEditing === 'register' && loginProfile.id) {\n      setFilterAdminRegister({\n        first_name: loginProfile.first_name,\n        last_name: loginProfile.last_name,\n        email: loginProfile.email\n      })\n    }\n  }, [isEditing, loginProfile])\n\n  // DEBUGGER STATION\n  // console.log('isEditing REGISTER', isEditing)\n  // console.log('showModal REGISTER', showModal)\n  // console.log('loginProfile', loginProfile)\n  // console.log('filterAdminRegister', filterAdminRegister)\n\n  console.log('enableBtn', enableBtn)\n\n  const handleRegister = (e) => {\n    e.preventDefault()\n    if (isEditing === 'register') {\n      updateAdmin(token, filterAdminRegister, loginProfile.id)\n        .then(data => {\n          console.log('data', data)\n          setShowModal('')\n          setIsEditing('')\n        })\n    } else {\n      register(filterAdminRegister)\n        .then(data => {\n          setShowModal('')\n          setIsRegistering(false)\n        })\n        .catch(error => {\n          console.log('error', error)\n          setErrors(error.message)\n        })\n    }\n  }\n\n  return (\n    <div className='fixed z-20 inset-0 overflow-y-auto'>\n      <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n        {/* Background overlay, show/hide based on modal state. */}\n        <Transition\n          show={showModal === 'admin-registration-form'}\n          enter='ease-out duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in duration-200'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n            <div className='absolute inset-0 bg-gray-500 opacity-75' />\n          </div>\n        </Transition>\n        {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n        <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>&#8203;\n\n          {/* Modal panel, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'admin-registration-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <form\n              className='mt-8 space-y-6'\n              onSubmit={handleRegister}\n            >\n              <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                <div>\n                  <div className='mt-2 mb-5 text-center'>\n                    <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                      {isEditing === 'register'\n                        ? 'Update Admin Info'\n                        : 'Register New Admin'}\n                    </h3>\n                  </div>\n\n                  {errors && (\n                    <div>\n                      <Errors errors={errors} setErrors={setErrors} />\n                    </div>\n                  )}\n                  <input type='hidden' name='remember' value='true' />\n                  <div className='rounded-md shadow-sm space-y-4'>\n                    <div>\n                      <AdminName filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} loginProfile={loginProfile} />\n                    </div>\n                    <div>\n                      <AdminEmail filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} />\n                    </div>\n                    {isEditing !== 'register' &&\n                      <div>\n                        <AdminUsername filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} />\n                      </div>}\n                    {isEditing !== 'register' &&\n                      <div>\n                        <AdminPassword filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} setEnableBtn={setEnableBtn} />\n                      </div>}\n                  </div>\n                </div>\n                <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                  <button\n                    type='submit'\n                    disabled={enableBtn > 0}\n                    className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-darkerPurple text-base font-medium text-white hover:bg-mediumPurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                  >\n                    {isEditing === 'register'\n                      ? 'Update'\n                      : 'Register'}\n                  </button>\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                    onClick={() => {\n                      if (isEditing) {\n                        setIsEditing('')\n                        setShowModal('')\n                        setIsEditingAdmin(false)\n                      } else {\n                        setIsRegistering(false)\n                        setShowModal('')\n                      }\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import { RefreshIcon } from '@heroicons/react/outline'\nimport { useEffect } from 'react'\nimport { getUser } from '../../api'\n\nconst ViewAdminRegForm = ({ token, showModal, setShowModal, setFormToView, isEditing, setIsEditing, loginProfile, setLoginProfile, setIsEditingAdmin, handleRequestChangeUsername, handleRequestChangePassword, isLoading, isLoadingUsername }) => {\n  // console.log('showModal', showModal)\n\n  useEffect(() => {\n    getUser(token)\n      .then(data => setLoginProfile(data))\n  }, [token, setLoginProfile])\n\n  //   const handleEmailField = () => {\n  // if (isEditing) {\n\n  // }\n  //   }\n\n  return (\n    <>\n      <div>\n        <div className='mt-2 mb-5 text-center'>\n          <h3 className='text-lg leading-6 font-medium text-coolGray-900' id='modal-headline'>\n            View Admin Registration Profile\n          </h3>\n        </div>\n        <div className='rounded-md shadow-sm space-y-4'>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Name</div>\n              <div\n                className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >\n                <p>\n                  {loginProfile.first_name}\n                </p>\n                <p>\n                  {loginProfile.last_name}\n                </p>\n              </div>\n            </span>\n            <button\n              type='button'\n              className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n              onClick={() => setIsEditing('register')}\n            >\n              Edit Name\n            </button>\n          </div>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Email</div>\n              <div\n                required className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >{loginProfile.email}\n              </div>\n            </span>\n            <button\n              type='button'\n              className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n              onClick={() => setIsEditing('register')}\n            >\n              Edit Email\n            </button>\n          </div>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Username</div>\n              <div\n                className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >{loginProfile.username}\n              </div>\n            </span>\n            {isLoadingUsername\n              ? <button\n                  type='button'\n                  disabled\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                >\n                <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                Processing\n              </button>\n              : <button\n                  type='button'\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                  onClick={() => {\n                    handleRequestChangeUsername(loginProfile.email)\n                  }}\n                >\n                Edit Username\n              </button>}\n\n          </div>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Password</div>\n              <div\n                className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >**********\n              </div>\n            </span>\n            {isLoading\n              ? <button\n                  type='button'\n                  disabled\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                >\n                <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                Processing\n              </button>\n              : <button\n                  type='submit'\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                  onClick={() => {\n                    handleRequestChangePassword(loginProfile.email)\n                  }}\n                >\n                Change Password\n              </button>}\n\n          </div>\n        </div>\n      </div>\n      <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n        <button\n          type='button'\n          className='mt-3 w-full col-span-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n          onClick={() => {\n            setShowModal('')\n            setIsEditing('')\n            setFormToView('')\n            setIsEditingAdmin(false)\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default ViewAdminRegForm\n","import { useHistory } from 'react-router-dom'\nimport Moment from 'react-moment'\n\nconst ViewCreateSessionForm = ({ token, setShowModal, sessionToView, setFormToView, setIsEditing }) => {\n  console.log('sessionToView', sessionToView)\n  const history = useHistory()\n\n  return (\n    <>\n      <div>\n        <div className='mt-2 mb-5 text-center'>\n          <h3 className='text-lg leading-6 font-medium text-coolGray-900' id='modal-headline'>\n            Selected Session\n          </h3>\n        </div>\n        <div className='rounded-md shadow-sm space-y-4'>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Title</div>\n            <div\n              className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >\n              <p>\n                {sessionToView.title}\n              </p>\n            </div>\n          </div>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Dates</div>\n            <div\n              className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >\n              <span className='flex space-x-1'>\n                <Moment format='MM/DD/YYYY'>{sessionToView.start_date}</Moment>\n                <p>-</p>\n                <Moment format='MM/DD/YYYY'>{sessionToView.end_date}</Moment>\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Description</div>\n            <div\n              required className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >{sessionToView.description}\n            </div>\n          </div>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Session Status</div>\n            <div\n              className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >{sessionToView.session_status\n              ? 'Open'\n              : 'Closed'}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n        <button\n          type='submit'\n          className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2\n                    sm:text-sm'\n          onClick={() => {\n            setIsEditing('create-session')\n          }}\n        >\n          Edit\n        </button>\n        <button\n          type='button'\n          className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n          onClick={() => {\n            history.goBack()\n            setShowModal('')\n            setIsEditing('')\n            setFormToView('')\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default ViewCreateSessionForm\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { CheckIcon } from '@heroicons/react/outline'\n\nexport default function ResetPasswordUsernameEmailAlert ({ isEmailingReset, setIsEmailingReset }) {\n  const [open, setOpen] = useState(true)\n\n  const cancelButtonRef = useRef()\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-40 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100'>\n                  <CheckIcon className='h-6 w-6 text-green-600' aria-hidden='true' />\n                </div>\n                <div className='mt-3 text-center sm:mt-5'>\n                  <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n                    Email Sent\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      {`Please check you inbox for an email with direction to reset your ${isEmailingReset === 'password-reset' ? 'password' : 'username'}.`}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6'>\n                <button\n                  type='button'\n                  className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                  onClick={() => {\n                    setIsEmailingReset(false)\n                    setOpen(false)\n                  }}\n                >\n                  Return to Home\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { Transition } from '@headlessui/react'\nimport { useState } from 'react'\nimport Register from './Register'\nimport ViewAdminRegForm from './viewForms/ViewAdminRegForm'\nimport ViewCreateSessionForm from './viewForms/ViewCreateSessionForm'\nimport CreateSession from './CreateSession'\nimport { requestChangePassword, requestChangeUsername } from '../api'\nimport ResetPasswordUsernameEmailAlert from './alerts/ResetPasswordUsernameEmailAlert'\n\nconst ViewForm = ({ token, showModal, setShowModal, formToView, setFormToView, sessionToView, setIsEditingAdmin }) => {\n  const [isEditing, setIsEditing] = useState('')\n  const [loginProfile, setLoginProfile] = useState([])\n  const [isEmailingReset, setIsEmailingReset] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [isLoadingUsername, setIsLoadingUsername] = useState(false)\n\n  // DEBUGGER STATION\n  console.log('showModal', showModal)\n  console.log('formToView', formToView)\n  console.log('isEditing', isEditing)\n\n  //   Function to handle which form is to be rendered inside modal ViewForm\n  const handleFormSelection = () => {\n    if (formToView === 'admin-reg-form') {\n      return (\n        <ViewAdminRegForm token={token} isEditing={isEditing} setIsEditing={setIsEditing} showModal={showModal} setShowModal={setShowModal} setFormToView={setFormToView} loginProfile={loginProfile} setLoginProfile={setLoginProfile} setIsEditingAdmin={setIsEditingAdmin} handleRequestChangeUsername={handleRequestChangeUsername} handleRequestChangePassword={handleRequestChangePassword} isLoading={isLoading} isLoadingUsername={isLoadingUsername} />\n      )\n    } else if (formToView === 'create-session-form') {\n      return (\n        <ViewCreateSessionForm token={token} setIsEditing={setIsEditing} setShowModal={setShowModal} sessionToView={sessionToView} setFormToView={setFormToView} />\n      )\n    } else if (formToView === 'register') {\n      // return (\n      //   <Register token={token} showModal='admin-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n      // )\n    }\n  }\n\n  // isEditing CONDITIONALS: I originally had this inside the view form components but\n  // the modal would not render when isEditing. Placed at this component level it works\n  if (loginProfile && isEditing === 'register') {\n    return (\n      <Register\n        token={token}\n        loginProfile={loginProfile}\n        isEditing='register'\n        setIsEditing={setIsEditing}\n        showModal='admin-registration-form'\n        setShowModal={setShowModal}\n        setIsEditingAdmin={setIsEditingAdmin}\n      />\n    )\n  }\n\n  if (sessionToView && isEditing === 'create-session') {\n    return (\n      <CreateSession\n        token={token}\n        sessionToEdit={sessionToView}\n        isEditing={isEditing}\n        setIsEditing={setIsEditing}\n        showModal='create-session-form'\n      />\n    )\n  }\n  // if (sessionToView && isEditing === 'edit-registrant') {\n  //   return (\n  //     <ViewSessionRegistrant\n  //       token={token}\n  //       sessionToEdit={sessionToView}\n  //       isEditing={isEditing}\n  //       setIsEditing={setIsEditing}\n  //       showModal='create-session-form'\n  //     />\n  //   )\n  // }\n  // ^^^^^ isEditing CONDITIONALS ^^^^^\n\n  if (isEmailingReset) {\n    return (\n      <ResetPasswordUsernameEmailAlert isEmailingReset={isEmailingReset} setIsEmailingReset={setIsEmailingReset} />\n    )\n  }\n\n  const handleRequestChangeUsername = (email) => {\n    setIsLoadingUsername(true)\n    setShowModal('')\n    setFormToView('')\n    requestChangeUsername(email)\n      .then(data => {\n        setIsLoadingUsername(false)\n        setIsEmailingReset('username-reset')\n      })\n  }\n\n  const handleRequestChangePassword = (email) => {\n    setIsLoading(true)\n    setShowModal('')\n    setFormToView('')\n    requestChangePassword(email)\n      .then(data => {\n        setIsLoading(false)\n        setIsEmailingReset('password-reset')\n      })\n  }\n\n  return (\n    <>\n      <div className='fixed z-20 inset-0 overflow-y-auto'>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n          {/* Background overlay, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'view-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n              <div className='absolute inset-0 bg-gray-500 opacity-75' />\n            </div>\n          </Transition>\n          {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen sm:w-1/2' aria-hidden='true'>&#8203;\n\n            {/* Modal panel, show/hide based on modal state. */}\n            <Transition\n              show={showModal === 'view-form'}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n              enterTo='opacity-100 translate-y-0 sm:scale-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n              leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            >\n              <div\n                className='mt-8 space-y-6'\n              >\n                <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                  {handleFormSelection()}\n                </div>\n              </div>\n            </Transition>\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewForm\n","import { useEffect, useState, useRef } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Transition } from '@headlessui/react'\nimport { pageClickEvent } from './functions'\nimport NavBtns from './NavBtns'\nimport RegSuccessfulAlert from './alerts/RegSuccessfulAlert'\nimport MobileNavBtns from './MobileNavBtns'\nimport MobileNavMenu from './MobileNavMenu'\nimport LoginModal from './LoginModal'\nimport CreateSession from './CreateSession'\nimport Register from './Register'\nimport ViewForm from './ViewForm'\nimport { logout } from '../api'\n\n// import Search from './Search'\n\nconst Nav = ({ token, setToken, username, setUsername, isLoggedIn, setAuth, showModal, setShowModal, showLoginModal, setShowLoginModal, setShowCreateSessionModal, setShowRegistrationModal, loggedInName, showRegSuccessfulAlert, setShowRegSuccessfulAlert, setFormToView, setSessions }) => {\n  const [showMenu, setShowMenu] = useState(false)\n  const [isSigningIn, setIsSigningIn] = useState(false)\n  const [isRegistering, setIsRegistering] = useState(false)\n  const [isEditingAdmin, setIsEditingAdmin] = useState(false)\n  const [isCreatingSession, setIsCreatingSession] = useState(false)\n  const dropdownRef = useRef(null)\n  const history = useHistory('')\n\n  // DEBUGGER STATION\n  // console.log('isRegistering', isRegistering)\n  // console.log('isCreatingSession', isCreatingSession)\n  // console.log('isSigningIn', isSigningIn)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showMenu, setShowMenu)\n  }, [showMenu])\n\n  if (isSigningIn) {\n    return (\n      <LoginModal setAuth={setAuth} showModal='login-form' setShowModal={setShowModal} setIsSigningIn={setIsSigningIn} />\n    )\n  }\n\n  if (isRegistering) {\n    return (\n      <Register token={token} showModal='admin-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n    )\n  }\n\n  if (isCreatingSession) {\n    return (\n      <CreateSession token={token} showModal='create-session-form' setShowModal={setShowModal} setIsCreatingSession={setIsCreatingSession} setSessions={setSessions} />\n    )\n  }\n\n  if (isEditingAdmin) {\n    return (\n      <ViewForm token={token} isLoggedIn={isLoggedIn} showModal='view-form' setShowModal={setShowModal} formToView='admin-reg-form' setFormToView={setFormToView} setIsEditingAdmin={setIsEditingAdmin} />\n    )\n  }\n\n  const handleLogout = () => {\n    logout(token)\n      .then(data => {\n        setToken(null)\n        setUsername('')\n        setShowMenu(false)\n        history.push('/')\n      })\n  }\n\n  return (\n    <nav className='bg-mediumPurple border-b border-indigo-300 border-opacity-25 lg:border-none fixed top-0 z-10 w-full'>\n      <div className='max-w-7xl mx-auto px-2 sm:px-4 lg:px-8'>\n        <div className='relative h-16 flex items-center justify-between lg:border-b lg:border-indigo-400 lg:border-opacity-25'>\n          <div className='px-2 flex items-center lg:px-0'>\n            {/* <div className='flex-shrink-0'>\n              <img className='block h-8 w-8' src='https://tailwindui.com/img/logos/workflow-mark-indigo-300.svg' alt='Workflow' />\n            </div> */}\n            <div className='hidden lg:block lg:ml-10'>\n              <NavBtns isLoggedIn={isLoggedIn} />\n            </div>\n          </div>\n          {/* <Search /> */}\n          <div className='flex lg:hidden'>\n            {/* <!-- Mobile menu button --> */}\n            <button\n              type='button'\n              className='bg-indigo-600 p-2 rounded-md inline-flex items-center justify-center text-indigo-200 hover:text-white hover:bg-indigo-500 hover:bg-opacity-75 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white'\n              aria-controls='mobile-menu'\n              aria-expanded='false'\n              onClick={() => setShowMenu(showMenu => !showMenu)}\n            >\n              <span className='sr-only'>Open main menu</span>\n\n              {/* Heroicon name: outline/menu */}\n\n              <svg className={`${showMenu ? 'hidden' : 'block'} h-6 w-6`} xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'>\n                <path strokeLinecap='round' strokeLinejoin='round' strokeWidth='2' d='M4 6h16M4 12h16M4 18h16' />\n              </svg>\n              {/* Heroicon name: outline/x */}\n              <svg className={`${showMenu ? 'block' : 'hidden'} h-6 w-6`} xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'>\n                <path strokeLinecap='round' strokeLinejoin='round' strokeWidth='2' d='M6 18L18 6M6 6l12 12' />\n              </svg>\n            </button>\n          </div>\n          <div className='hidden lg:block lg:ml-4'>\n            <div className='flex items-center'>\n\n              {/* <!-- Profile dropdown --> */}\n              <div className='ml-3 relative flex-shrink-0'>\n                <div>\n                  <button\n                    type='button'\n                    className='bg-none rounded-full flex text-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white'\n                    id='user-menu'\n                    aria-expanded='false'\n                    aria-haspopup='true'\n                    onClick={() => setShowMenu(showMenu => !showMenu)}\n                  >\n                    {isLoggedIn\n                      ? `Hello ${loggedInName}`\n                      : 'admin login'}\n\n                  </button>\n                </div>\n\n                {/* Dropdown menu, show/hide based on menu state. */}\n                <Transition\n                  show={showMenu}\n                  enter='transition ease-out duration-100'\n                  enterFrom='transform opacity-0 scale-95'\n                  enterTo='transform opacity-100 scale-100'\n                  leave='transition ease-in duration-75'\n                  leaveFrom='transform opacity-100 scale-100'\n                  leaveTo='transform opacity-0 scale-95'\n                >\n                  <div\n                    className='origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 flex flex-col'\n                    role='menu'\n                    aria-orientation='vertical'\n                    aria-labelledby='user-menu'\n                    ref={dropdownRef}\n                  >\n                    {token &&\n                      <>\n                        <button\n                          className='block py-2 px-4 text-sm text-left text-gray-700 hover:bg-gray-100'\n                          role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsCreatingSession(true)\n                          }}\n                        >\n                          Create New Session\n                        </button>\n\n                        <button\n                          type='button'\n                          className='block py-2 px-4 text-sm text-left text-gray-700 hover:bg-gray-100'\n                          role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsRegistering(true)\n                          }}\n                        >\n                          Register New Admin\n                        </button>\n\n                        <button\n                          className='block py-2 px-4 text-sm text-left text-gray-700 hover:bg-gray-100'\n                          role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsEditingAdmin(true)\n                          }}\n                        >\n                          Update User Settings\n                        </button>\n                      </>}\n                    {isLoggedIn\n                      ? (\n                        <Link\n                          to='/'\n                          className='block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100' role='menuitem'\n                          onClick={() => {\n                            handleLogout()\n                            // setToken(null)\n                            // setUsername('')\n                            // setShowMenu(false)\n                            // history.push('/')\n                          }}\n                        >\n                          Sign out\n                        </Link>\n                        )\n                      : (\n                        <button\n                          className='block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100' role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsSigningIn(true)\n                          }}\n                        >\n                          Sign in\n                        </button>)}\n                  </div>\n                </Transition>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {showRegSuccessfulAlert &&\n        <RegSuccessfulAlert showRegSuccessfulAlert={showRegSuccessfulAlert} setShowRegSuccessfulAlert={setShowRegSuccessfulAlert} />}\n\n      {/* <!-- Mobile menu, show/hide based on menu state. --> */}\n      <div className='lg:hidden' id='mobile-menu'>\n        {showMenu &&\n          <>\n            <MobileNavBtns isLoggedIn={isLoggedIn} />\n            <MobileNavMenu showMenu={showMenu} setIsSigningIn={setIsSigningIn} setToken={setToken} setUsername={setUsername} setShowMenu={setShowMenu} isLoggedIn={isLoggedIn} username={username} setIsCreatingSession={setIsCreatingSession} />\n          </>}\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav\n","\nconst BookStudy = () => {\n  return (\n    <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'>\n      <div className='bg-mellowApricot rounded-lg shadow px-5 py-6 sm:px-6'>\n        <div className='h-96 border-4 border-dashed border-gray-200 rounded-lg'>\n          Book Study Stuff\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BookStudy\n","\nconst Divider = () => {\n  return (\n    <>\n      <div className='bg-green-200 h-20 transform -skew-y-2 border-t-4 border-coolGray-500' />\n    </>\n  )\n}\n\nexport default Divider\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { CheckIcon } from '@heroicons/react/outline'\n\nexport default function RegistrationMessage ({ setRegistered }) {\n  const [open, setOpen] = useState(true)\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as='div' static className='fixed z-10 inset-0 overflow-y-auto' open={open} onClose={setOpen}>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6'>\n              <div>\n                <div className='mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100'>\n                  <CheckIcon className='h-6 w-6 text-green-600' aria-hidden='true' />\n                </div>\n                <div className='mt-3 text-center sm:mt-5'>\n                  <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n                    Thanks for signing up\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      Someone will be reaching out to you soon regarding your interest in this upcoming session.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6'>\n                <button\n                  type='button'\n                  className='inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm'\n                  onClick={() => {\n                    setRegistered(false)\n                    setOpen(false)\n                  }}\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport Moment from 'react-moment'\n\nexport default function DeleteAlert ({ isDeleting, setIsDeleting, handleDelete, dataToDelete, handleClearAllActionState }) {\n  const [open, setOpen] = useState(true)\n  const cancelButtonRef = useRef()\n\n  const handleMessage = () => {\n    if (dataToDelete.length === 0) {\n      return (\n        <p className='text-sm text-gray-500'>\n          There is nothing selected to delete. If a box is checked, please unckeck and check again.\n        </p>\n      )\n    } else {\n      return (\n        <p className='text-sm text-gray-500'>\n          Are you sure you want to delete <strong>{dataToDelete.first_name} {dataToDelete.last_name}</strong> from this session? This action cannot be undone.\n        </p>\n      )\n    }\n  }\n\n  const handleAlertContent = () => {\n    if (isDeleting === 'delete-session') {\n      return (\n        <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n          <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n            Delete Session\n          </Dialog.Title>\n          <div className='mt-2'>\n            <p className='text-sm text-gray-500'>\n              <p className='text-sm text-gray-500'>\n                Are you sure you want to delete the session <strong>{dataToDelete.title} <Moment format='MM/DD/YYYY'>{dataToDelete.start_date}</Moment>-<Moment format='MM/DD/YYYY'>{dataToDelete.end_date}</Moment></strong>? This action cannot be undone.\n              </p>\n            </p>\n          </div>\n        </div>\n      )\n    } else if (isDeleting === 'delete-registrant') {\n      return (\n        <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n          <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n            Delete Registrant\n          </Dialog.Title>\n          <div className='mt-2'>\n            {handleMessage()}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon className='h-6 w-6 text-red-600' aria-hidden='true' />\n                </div>\n                {handleAlertContent()}\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <button\n                  type='button'\n                  className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\n                  onClick={() => {\n                    handleDelete(dataToDelete.pk)\n                    setIsDeleting('')\n                    setOpen(false)\n                  }}\n                >\n                  Delete\n                </button>\n                <button\n                  type='button'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => {\n                    setOpen(false)\n                    if (isDeleting === 'delete-registrant') {\n                      handleClearAllActionState()\n                    }\n                    setIsDeleting('')\n                  }}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { handleFormFilter } from '../functions'\n\nconst Comments = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <label\n        htmlFor='comment'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n      >\n        Comment\n      </label>\n      <div className='mt-1'>\n        <textarea\n          className='shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md'\n          name='comment'\n          id='comment'\n          rows='3'\n          value={filterInput.comment}\n          onChange={e => handleFormFilter('comment', e.target.value, setFilterInput)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default Comments\n","import { handleFormFilter } from '../functions'\n\nconst Email = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <label\n        htmlFor='email'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n      >\n        Email\n      </label>\n      <div className='mt-1 relative rounded-md shadow-sm'>\n        <div className='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'>\n          <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n            <path d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z' />\n            <path d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n          </svg>\n        </div>\n        <input\n          type='email'\n          name='email'\n          required\n          id='email'\n          className='focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md text-sm sm:text-lg border-gray-300 border pl-10'\n          placeholder='you@example.com'\n          value={filterInput.email}\n          onChange={(e) => handleFormFilter('email', e.target.value, setFilterInput)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default Email\n","import { handleFormFilter } from '../functions'\n\nconst Name = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <div className='flex space-x-4'>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='first_name'\n          >\n            First Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n            type='text'\n            name='first_name'\n            required\n            id='name'\n            value={filterInput.first_name}\n            onChange={e => handleFormFilter('first_name', e.target.value, setFilterInput)}\n          />\n        </div>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='last_name'\n          >\n            Last Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n            type='text'\n            name='name'\n            required\n            id='last_name'\n            value={filterInput.last_name}\n            onChange={e => handleFormFilter('last_name', e.target.value, setFilterInput)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Name\n","import { handleFormFilter } from '../functions'\n\nconst Pronouns = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <div className='flex space-x-4'>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='first_name'\n          >\n            Pronouns\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n            type='text'\n            name='pronouns'\n            placeholder='ex. she/her/hers, they/them/their, he/him/his, she/him/they'\n            id='pronouns'\n            required\n            value={filterInput.pronouns}\n            onChange={e => handleFormFilter(e.target.name, e.target.value, setFilterInput)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Pronouns\n","import { Transition } from '@headlessui/react'\nimport Moment from 'react-moment'\nimport { useState, useEffect, useRef } from 'react'\nimport { formatSelectedSession, handleFormFilter, pageClickEvent } from '../functions'\n\nconst SessionToRegister = ({ sessions, sessionToRegister, filterInput, setFilterInput, handleSessionToEdit }) => {\n  const [showSessions, setShowSessions] = useState(false)\n  const [selectedValue, setSelectedValue] = useState([])\n  const dropdownRef = useRef(null)\n\n  // DEBUGGER STATION\n  // console.log('sessions', sessions)\n  // console.log('selectedValue', selectedValue)\n  // console.log('sessionToRegister', sessionToRegister)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showSessions, setShowSessions)\n  }, [showSessions])\n\n  // This function filters out the session that has been selected so that duplicates don't render on\n  // the options. It also filters out any session that is closed (that is, set to session_status: false).\n  const filterSessions = (sessions) => {\n    if (!selectedValue.pk) {\n      setSelectedValue(sessionToRegister)\n      handleFormFilter('session', sessionToRegister.pk, setFilterInput)\n    }\n    let options = []\n    options = sessions.filter(session => session.pk !== selectedValue.pk && session.session_status === true)\n    return options\n  }\n\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='sessions'\n      >\n        Sessions\n      </label>\n      <div className='mt-1 relative'>\n        <button\n          type='button' id='sessions' aria-haspopup='listbox' aria-expanded='true' aria-labelledby='listbox-label' className='bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n          onClick={() => setShowSessions(!showSessions)}\n        >\n          <span className='flex truncate justify-center text-sm sm:text-md'>\n\n            {selectedValue.pk\n              ? formatSelectedSession(selectedValue)\n              : formatSelectedSession(sessionToRegister)}\n\n          </span>\n          <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z' clipRule='evenodd' />\n            </svg>\n          </span>\n        </button>\n        <Transition\n          show={showSessions}\n          enter=''\n          enterFrom=''\n          enterTo=''\n          leave='transition ease-in duration-100'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div\n            className='absolute z-20 mt-1 w-full rounded-md bg-gray-50 shadow-lg'\n            ref={dropdownRef}\n          >\n            <ul tabIndex='-1' role='listbox' aria-labelledby='listbox-label' aria-activedescendant='listbox-item-3' className='max-h-40 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm'>\n              {filterSessions(sessions).map((session, idx) => (\n                <li\n                  key={`session-${idx}`}\n                  id={`session-${session}`}\n                  data-idx={idx}\n                  value={session.title}\n                  className='hover:text-white hover:bg-indigo-600 text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9'\n                  onClick={() => {\n                    setSelectedValue(session)\n                    handleFormFilter('session', session.pk, setFilterInput)\n                    setShowSessions(false)\n                  }}\n                >\n                  <span\n                    className='font-normal space-x-2 truncate flex'\n                  >\n                    <p>{session.title}</p>\n                    <span className='flex space-x-1'>\n                      <Moment format='MM/DD/YYYY'>{session.start_date}</Moment>\n                      <p>-</p>\n                      <Moment format='MM/DD/YYYY'>{session.end_date}</Moment>\n                    </span>\n                  </span>\n                </li>\n              ))}\n\n            </ul>\n          </div>\n        </Transition>\n      </div>\n    </>\n  )\n}\n\nexport default SessionToRegister\n","import { handleFormFilter } from '../functions'\n\nconst ConfirmationStatus = ({ setFilterInput, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col h-full w-full items-center justify-between space-y-4'>\n        <span className='flex space-x-2 items-center'>\n          <h1 className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'> Confirmation Status:</h1>\n          <span className={`${filterInput.confirm ? 'bg-green-300 rounded-lg' : 'bg-red-300 rounded-lg'} px-1 py-0.5 text-center`}>{filterInput.confirm ? 'Confirmed' : 'Not Confirmed'}</span>\n        </span>\n\n        <button\n          type='button'\n          className='bg-gray-200 relative inline-flex flex-shrink-0 h-6 w-72 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n          aria-pressed='false'\n          aria-labelledby='confirm-status'\n          value={filterInput.confirm}\n          onClick={e => handleFormFilter('confirm', e.target.value === 'false', setFilterInput)}\n        >\n          <span className='sr-only'>Use setting</span>\n          <span\n            aria-hidden='true'\n            className={`${filterInput.confirm ? 'translate-x-64' : 'translate-x-0'} pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-500`}\n          />\n        </button>\n\n      </div>\n    </>\n  )\n}\n\nexport default ConfirmationStatus\n","import { useReducer, useEffect, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { sessionRegister } from '../../api'\nimport Comments from './Comments'\nimport Email from './Email'\nimport Name from './Name'\nimport Pronouns from './Pronouns'\nimport SessionToRegister from './SessionToRegister'\nimport ConfirmationStatus from './ConfirmationStatus'\nimport { RefreshIcon } from '@heroicons/react/outline'\n\nconst SessionRegister = ({ token, sessions, sessionToRegister, setSessionToRegister, setRegistered, showModal, setShowModal, isEditing, setIsEditing, registrantToEdit, setIsRegistering, handleRegistrantUpdate, setRegistrantsToRender }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [filterInput, setFilterInput] = useReducer(\n    (name, value) => ({ ...name, ...value }),\n    {\n      first_name: '',\n      last_name: '',\n      pronouns: '',\n      email: '',\n      comment: '',\n      session: null,\n      confirm: false\n    }\n  )\n\n  // DEBUGGER STATION\n  // console.log('sessions in SessionRegister', sessions)\n  // console.log('sessionToRegister', sessionToRegister)\n  // console.log('registrantToEdit', registrantToEdit)\n  // console.log('filterInput', filterInput)\n\n  useEffect(() => {\n    if (isEditing === 'edit-registrant' && registrantToEdit.pk) {\n      setFilterInput({\n        first_name: registrantToEdit.first_name,\n        last_name: registrantToEdit.last_name,\n        pronouns: registrantToEdit.pronouns,\n        email: registrantToEdit.email,\n        comment: registrantToEdit.comment,\n        session: registrantToEdit.session\n      })\n    }\n  }, [isEditing, registrantToEdit])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    if (isEditing === 'edit-registrant') {\n      handleRegistrantUpdate(token, registrantToEdit.pk, filterInput)\n    } else {\n      sessionRegister(filterInput)\n        .then(data => {\n          setIsLoading(false)\n          setShowModal('')\n          setIsRegistering(false)\n          setRegistered(true)\n          setRegistered(true)\n        })\n        .catch()\n    }\n  }\n\n  return (\n    <>\n      <div className='fixed z-20 inset-0 overflow-y-auto'>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n          <Transition\n            show={showModal === 'session-registration-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n              <div className='absolute inset-0 bg-gray-500 opacity-75' />\n            </div>\n          </Transition>\n\n          <Transition\n            show={showModal === 'session-registration-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <form onSubmit={handleSubmit}>\n              <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                <div>\n                  <div className='mt-2 mb-5 text-center'>\n                    <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                      {isEditing\n                        ? 'Update Registrant Info'\n                        : 'Session Registration'}\n                    </h3>\n                  </div>\n                  <span className='space-y-4'>\n                    <div>\n                      <SessionToRegister filterInput={filterInput} setFilterInput={setFilterInput} sessions={sessions} sessionToRegister={sessionToRegister} />\n                    </div>\n                    <div>\n                      <Name filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    <div>\n                      <Pronouns filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    <div>\n                      <Email filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    <div>\n                      <Comments filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    {isEditing &&\n                      <div>\n                        <ConfirmationStatus filterInput={filterInput} setFilterInput={setFilterInput} />\n                      </div>}\n                  </span>\n                </div>\n                <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                  {isLoading\n                    ? <button type='submit' disabled className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                      Processing\n                      </button>\n                    : <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      {isEditing\n                        ? 'Update'\n                        : 'Register'}\n                      </button>}\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                    onClick={() => {\n                      setShowModal('')\n                      if (isEditing) {\n                        setIsEditing('')\n                      } else {\n                        setIsRegistering(false)\n                      }\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition>\n        </div>\n      </div>\n\n    </>\n  )\n}\n\nexport default SessionRegister\n","import Moment from 'react-moment'\nimport { useCallback, useEffect, useState } from 'react'\nimport { listSessions, deleteSession, updateSession } from '../api'\nimport DeleteAlert from './alerts/DeleteAlert'\nimport SessionRegister from './sessionForms/SessionRegister'\nimport CreateSession from './CreateSession'\nimport { sortSessions } from './functions'\n\nconst UpcomingSessions = ({ token, sessions, setSessions, isLoggedIn, showModal, setShowModal, sessionToRegister, setSessionToRegister, setFormToView, setSessionToView, setRegistered }) => {\n  const [isDeleting, setIsDeleting] = useState('')\n  const [isRegistering, setIsRegistering] = useState(false)\n  const [isEditing, setIsEditing] = useState('')\n  const [sessionToDelete, setSessionToDelete] = useState([])\n  const [sessionToEdit, setSessionToEdit] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  // DEBUGGER STATION\n  // console.log('isRegistering', isRegistering)\n  // console.log('sessions', sessions)\n\n  useEffect(() => {\n    listSessions()\n      .then(data => {\n        setSessions(data)\n      })\n  }, [setSessions])\n\n  // Had to use useCallback here because the handleEditSession without\n  // it was causing the useEffect below to run on every render\n  const handleEditSession = useCallback((token, pk, input) => {\n    updateSession(token, pk, input)\n      .then(data => {\n        listSessions()\n          .then(data => setSessions(data))\n        setIsLoading(false)\n        setIsEditing('')\n        setShowModal('')\n      })\n  }, [setSessions, setShowModal])\n\n  useEffect(() => {\n    sessions.forEach(session => {\n      if (session.session_registrants.length >= session.number_of_registrants && session.session_status === true) {\n        const input = {\n          title: session.title,\n          start_date: session.start_date,\n          end_date: session.end_date,\n          start_time: session.start_time,\n          end_time: session.end_time,\n          description: session.description,\n          session_status: 'false',\n          number_of_registrants: session.number_of_registrants\n        }\n        console.log('input', input)\n        handleEditSession(token, session.pk, input)\n      }\n    })\n  }, [sessions, handleEditSession, token])\n\n  const handleDelete = (pk) => {\n    deleteSession(token, pk)\n      .then(data => {\n        listSessions()\n          .then(data => setSessions(data))\n      })\n  }\n\n  if (isRegistering) {\n    return (\n      <SessionRegister sessions={sessions} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} setRegistered={setRegistered} showModal='session-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n    )\n  }\n\n  if (isDeleting) {\n    return (\n      <DeleteAlert isDeleting={isDeleting} setIsDeleting={setIsDeleting} handleDelete={handleDelete} dataToDelete={sessionToDelete} />\n    )\n  }\n\n  if (isEditing === 'edit-session') {\n    return (\n      <span className=''>\n        <CreateSession isEditing='edit-session' token={token} showModal='create-session-form' setShowModal={setShowModal} setIsEditing={setIsEditing} sessionToEdit={sessionToEdit} handleEditSession={handleEditSession} isLoading={isLoading} setIsLoading={setIsLoading} />\n      </span>\n    )\n  }\n\n  const renderSessionStatus = (session) => {\n    if (session.session_status) {\n      return (\n        <button\n          className='w-3/4 inline-flex justify-center rounded-md border border-transparent shadow-sm px-3 py-1 bg-lavenderBlue text-base font-medium text-coolGray-600 hover:text-ghostWhite hover:bg-bluePurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n          onClick={() => {\n            setIsRegistering(true)\n            setSessionToRegister(session)\n          }}\n        >Sign up\n        </button>\n      )\n    } else {\n      return (\n        <span className='whitespace-nowrap text-md text-center text-red-300 font-bold'>Closed</span>\n      )\n    }\n  }\n\n  return (\n    <>\n      <div className='flex flex-col pt-10 bg-green-200 w-full h-screen mt-6 relative -top-16 border-b-4 border-coolGray-500'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='py-1 align-middle inline-block min-w-full sm:px-6 lg:px-8'>\n            <span>\n              <h1 className='text-6xl text-center text-coolGray-500 mb-10 shadow-sm rounded-lg'>Upcoming Sessions</h1>\n              <div className='shadow overflow-hidden border-b border-gray-200 sm:rounded-lg mx-8'>\n                <table className='min-w-full divide-y divide-gray-200'>\n                  <thead className='bg-magnolia'>\n                    <tr>\n                      <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Title\n                      </th>\n                      <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Date\n                      </th>\n                      <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Time\n                      </th>\n                      <th scope='col' className='px-6 py-3 w-96 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Description\n                      </th>\n                      <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Status\n                      </th>\n                      {isLoggedIn &&\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Registered\n                        </th>}\n                      {isLoggedIn &&\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Edit\n                        </th>}\n                      {isLoggedIn &&\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Delete\n                        </th>}\n                    </tr>\n                  </thead>\n\n                  <tbody className='bg-ghostWhite divide-y divide-gray-200'>\n                    {sortSessions(sessions).map(session => (\n                      <tr key={`session-${session.pk}`}>\n                        <td className=' px-6 py-4 whitespace-nowrap text-sm font-medium text-coolGray-900'>\n                          {session.title}\n                        </td>\n                        <td className='px-6 py-4 whitespace-nowrap text-sm text-coolGray-500'>\n                          <span className='flex justify-between'>\n                            <span className='text-gray-700'>Start:</span>\n                            <Moment format='MMM DD, YYYY'>{session.start_date}</Moment>\n                          </span>\n                          <span className='flex justify-between'>\n                            <span className='text-gray-700'> End:</span>\n                            <Moment format='MMM DD, YYYY'>{session.end_date}</Moment>\n                          </span>\n                        </td>\n                        <td className='px-6 py-4 whitespace-nowrap text-sm text-coolGray-500 space-x-1 text-center'>\n                          <Moment format='h:mm a'>{session.start_time}</Moment>\n                          <span>-</span>\n                          <Moment format='h:mm a'>{session.end_time}</Moment>\n                        </td>\n                        <td className='px-6 py-4 break-words text-sm text-coolGray-500 space-x-1 text-center'>\n                          {session.description}\n                        </td>\n                        <td className='px-6 py-4 whitespace-nowrap text-center text-sm text-coolGray-500'>\n                          {renderSessionStatus(session)}\n                        </td>\n                        {isLoggedIn &&\n                          <>\n                            <td className='px-6 py-4 whitespace-nowrap text-center text-sm text-coolGray-500'>\n                              {session.session_registrants.length}\n                            </td>\n                            <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n                              <button\n                                className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-3 py-1 bg-lavenderBlue text-base font-medium text-coolGray-600 hover:text-ghostWhite hover:bg-bluePurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                                onClick={() => {\n                                  setSessionToEdit(session)\n                                  setIsEditing('edit-session')\n                                }}\n                              >Edit\n                              </button>\n                            </td>\n                            <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n                              <button\n                                className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-3 py-1 bg-lavenderBlue text-base font-medium text-coolGray-600 hover:text-ghostWhite hover:bg-bluePurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                                onClick={() => {\n                                  setIsDeleting('delete-session')\n                                  setSessionToDelete(session)\n                                }}\n                              >Delete\n                              </button>\n                            </td>\n                          </>}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default UpcomingSessions\n","import Divider from './Divider'\nimport RegistrationMessage from './RegistrationMessage'\nimport UpcomingSessions from './UpcomingSessions'\n\nconst Sessions = ({ token, isLoggedIn, showModal, setShowModal, sessions, setSessions, sessionToRegister, setSessionToRegister, setFormToView, setSessionToView, registered, setRegistered }) => {\n  if (registered) {\n    return (\n      <RegistrationMessage setRegistered={setRegistered} />\n    )\n  }\n\n  return (\n    <>\n      <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8 relative'>\n        <div className='bg-lavenderBlue rounded-lg shadow px-5 py-6 sm:px-6'>\n          <div className='h-96 border-4 border-bluePurple rounded-lg flex flex-col justify-center overflow-auto pl-4'>\n            <h3 className='text-xl font-bold text-center text-coolGray-700'>\n              What are white Talk Sessions?\n            </h3>\n            <br />\n            <p className='text-coolGray-700'>White talk sessions are opportunities to spend intentional time each week digging deeper into our understanding of racism and whiteness. Each session lasts 5 weeks, with a 1 hour meeting each week.</p>\n            <p>Meeting topics are:</p>\n            <li className='ml-6 text-coolGray-700'><strong>Meeting 1</strong> Let's talk about race and racism and how it works</li>\n            <li className='ml-6 text-coolGray-700'><strong>Meeting 2</strong> Community and the importance of meeting in white spaces</li>\n            <li className='ml-6 text-coolGray-700'><strong>Meeting 3</strong> Strategies to disrupt racism - calling in and calling out</li>\n            <li className='ml-6 text-coolGray-700'><strong>Meeting 4</strong> Characteristics and antidotes of white supremacy culture</li>\n            <li className='ml-6 text-coolGray-700'><strong>Meeting 5</strong> Continuing the work, both for racial justice and for the healing of racial injustices</li>\n            <p className='text-coolGray-700'>These sessions are most successful with a commitment of regular attendance and participation.</p>\n            <br />\n          </div>\n        </div>\n      </div>\n      <Divider />\n      <UpcomingSessions token={token} sessions={sessions} setSessions={setSessions} isLoggedIn={isLoggedIn} showModal={showModal} setShowModal={setShowModal} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} setFormToView={setFormToView} setSessionToView={setSessionToView} setRegistered={setRegistered} />\n    </>\n  )\n}\n\nexport default Sessions\n","\nconst Connect = () => {\n  return (\n    <div\n      className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'\n    >\n      <div\n        className='bg-mellowApricot rounded-lg shadow px-5 py-6 sm:px-6'\n\n      >\n        <div className='h-96 border-4 border-dashed border-gray-200 rounded-lg flex flex-col justify-center'>\n          Connect Page\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Connect\n","import { Transition } from '@headlessui/react'\nimport { useState, useEffect, useRef } from 'react'\n// import Moment from 'react-moment'\nimport { formatSelectedSession, pageClickEvent } from './functions'\n\nconst SelectionElement = ({ sessions, dropdownSelectorMode, setRegistrantsToRender, handleAllEmails }) => {\n  const [showSessions, setShowSessions] = useState(false)\n  const [selectedValue, setSelectedValue] = useState([])\n  const dropdownRef = useRef(null)\n\n  // DEBUGGER STATION\n  // console.log('selectedValue', selectedValue)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showSessions, setShowSessions)\n  }, [showSessions])\n\n  // const setLabel = () => {\n  //   if (dropdownSelectorMode === 'view-session-registrants') {\n  //     return 'Select Session'\n  //   }\n  // }\n\n  const setSelectDisplay = () => {\n    if (dropdownSelectorMode === 'view-session-registrants') {\n      return (\n        <>\n          {selectedValue.pk\n            ? formatSelectedSession(selectedValue)\n            : 'Select Session'}\n        </>\n      )\n    }\n  }\n\n  return (\n    <>\n      {/* <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='pronouns'\n      >\n        {setLabel()}\n      </label> */}\n      <div className='mt-1 relative'>\n        <button\n          type='button' aria-haspopup='listbox' aria-expanded='true' aria-labelledby='listbox-label' className='bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n          onClick={() => setShowSessions(!showSessions)}\n        >\n          <span className='flex truncate justify-center text-sm sm:text-md'>\n            {setSelectDisplay()}\n          </span>\n          <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z' clipRule='evenodd' />\n            </svg>\n          </span>\n        </button>\n        <Transition\n          show={showSessions}\n          enter=''\n          enterFrom=''\n          enterTo=''\n          leave='transition ease-in duration-100'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div\n            className='absolute z-20 mt-1 w-full rounded-md bg-gray-50 shadow-lg'\n            ref={dropdownRef}\n          >\n            <ul tabIndex='-1' role='listbox' aria-labelledby='listbox-label' aria-activedescendant='listbox-item-3' className='max-h-40 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm'>\n              {sessions.map((session, idx) => (\n                <li\n                  key={`session-${idx}`}\n                  id={`session-${session}`}\n                  data-idx={idx}\n                  value={session.title}\n                  className='hover:text-white hover:bg-indigo-600 text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9'\n                  onClick={() => {\n                    setSelectedValue(session)\n                    setShowSessions(false)\n                    if (dropdownSelectorMode === 'view-session-registrants') {\n                      setRegistrantsToRender(session)\n                      handleAllEmails(session)\n                    }\n                  }}\n\n                >\n                  {/* <!-- Selected: \"font-semibold\", Not Selected: \"font-normal\" --> */}\n                  <span\n                    className='font-normal space-x-2 truncate flex'\n                  >\n                    <p>{session.title}</p>\n                    {/* <span className='flex space-x-1'>\n                      <Moment format='MM/DD/YYYY'>{session.start_date}</Moment>\n                      <p>-</p>\n                      <Moment format='MM/DD/YYYY'>{session.end_date}</Moment>\n                    </span> */}\n                  </span>\n                </li>\n              ))}\n\n            </ul>\n          </div>\n        </Transition>\n      </div>\n    </>\n  )\n}\n\nexport default SelectionElement\n","import { Transition } from '@headlessui/react'\nimport { useState, useEffect, useRef } from 'react'\nimport { pageClickEvent } from '../functions'\n\nconst StaticMenu = ({ dropdownSelectorMode, setActionItem, selectedAction, setSelectedAction }) => {\n  const [showActions, setShowActions] = useState(false)\n  const dropdownRef = useRef(null)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showActions, setShowActions)\n  }, [showActions])\n\n  // const setLabel = () => {\n  //   if (dropdownSelectorMode === 'action') {\n  //     return 'Select Action'\n  //   }\n  // }\n\n  // const setSelectDisplay = () => {\n  //   if (dropdownSelectorMode === 'action') {\n  //     return (\n  //       <>\n  //         {selectedAction.pk\n  //           ? formatSelectedSession(selectedAction)\n  //           : 'Select Session'}\n  //       </>\n  //     )\n  //   }\n  // }\n\n  const ACTIONITEMS = [\n    'Email All',\n    'Email Selected',\n    'Update',\n    'Delete'\n  ]\n\n  return (\n    <>\n      {/* <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='pronouns'\n      >\n        {setLabel()} */}\n      {/* </label> */}\n      <div className='mt-0 relative'>\n        <button\n          type='button' aria-haspopup='listbox' aria-expanded='true' aria-labelledby='listbox-label' className='bg-white relative w-auto border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n          onClick={() => setShowActions(!showActions)}\n        >\n          <span className='flex justify-center text-sm sm:text-md'>\n            {selectedAction || 'Action'}\n          </span>\n          <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z' clipRule='evenodd' />\n            </svg>\n          </span>\n        </button>\n        <Transition\n          show={showActions}\n          enter=''\n          enterFrom=''\n          enterTo=''\n          leave='transition ease-in duration-100'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div\n            className='absolute z-20 mt-1 min-w-max rounded-md bg-gray-50 shadow-lg'\n            ref={dropdownRef}\n          >\n            <ul tabIndex='-1' role='listbox' aria-labelledby='listbox-label' aria-activedescendant='listbox-item-3' className='max-h-40 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm'>\n              {ACTIONITEMS.map((item, idx) => (\n                <li\n                  key={`session-${idx}`}\n                  id={`session-${item}`}\n                  data-idx={idx}\n                  value={item}\n                  className='hover:text-white hover:bg-indigo-600 text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9'\n                  onClick={() => {\n                    setSelectedAction(item)\n                    // handleSessionRegFilter('session', session.pk)\n                    setShowActions(false)\n                    if (dropdownSelectorMode === 'view-session-registrants') {\n                      setActionItem(item)\n                    }\n                  }}\n\n                >\n                  {/* <!-- Selected: \"font-semibold\", Not Selected: \"font-normal\" --> */}\n                  <span\n                    className='font-normal space-x-2 flex'\n                  >\n                    <p>{item}</p>\n                  </span>\n                </li>\n              ))}\n\n            </ul>\n          </div>\n        </Transition>\n      </div>\n    </>\n  )\n}\n\nexport default StaticMenu\n","import { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { MailIcon, PencilAltIcon, TrashIcon } from '@heroicons/react/solid'\nimport { ChevronDoubleRightSolid } from '@graywolfai/react-heroicons'\nimport Moment from 'react-moment'\nimport { listSessions, deleteRegistrant, updateRegistrant } from '../api'\nimport SelectionElement from './SelectionElement'\nimport StaticMenu from './dropdownMenus/StaticMenu'\nimport DeleteAlert from './alerts/DeleteAlert'\nimport SessionRegister from './sessionForms/SessionRegister'\n\nconst ViewSessionRegistrants = ({ token, isLoggedIn, setShowModal, dropdownSelectorMode, setDropdownSelectorMode, setSessionToRegister }) => {\n  const [sessions, setSessions] = useState([])\n  const [registrantsToRender, setRegistrantsToRender] = useState([])\n  const [allEmails, setAllEmails] = useState([])\n  const [emails, setEmails] = useState([])\n  const [selectedAction, setSelectedAction] = useState('')\n  const [isDeleting, setIsDeleting] = useState('')\n  const [isEditing, setIsEditing] = useState('')\n  const [registrantToDelete, setRegistrantToDelete] = useState([])\n  const [registrantToEdit, setRegistrantToEdit] = useState([])\n  const [sessionToUpdate, setSessionToUpdate] = useState([])\n\n  // DEBUGGER STATION\n  // console.log('allEmails', allEmails)\n  // console.log('emails', emails)\n  // console.log('isDeleting', isDeleting)\n  // console.log('isEditing', isEditing)\n  // console.log('sessions', sessions)\n  // console.log('registrantsToRender', registrantsToRender)\n  // console.log('registrantToEdit', registrantToEdit)\n  // console.log('registrantToDelete', registrantToDelete)\n  // console.log('sessions in ViewSessionReg', sessions)\n  // console.log('sessionToUpate', sessionToUpdate)\n\n  useEffect(() => {\n    listSessions()\n      .then(sessions => {\n        setSessions(sessions)\n        setDropdownSelectorMode('view-session-registrants')\n      })\n  }, [setDropdownSelectorMode])\n\n  const getConfirmationCount = () => {\n    const confirmationStatuses = registrantsToRender.session_registrants.map(reg => reg.confirm)\n    const confirmed = []\n    confirmationStatuses.forEach(status => {\n      if (status) {\n        confirmed.push(status)\n      }\n    })\n    return confirmed.length\n  }\n\n  const handleClearAllActionState = () => {\n    setSessionToUpdate([])\n    setRegistrantToEdit([])\n    setRegistrantToDelete([])\n    setEmails([])\n  }\n\n  const handleEmails = (email) => {\n    const checkEmails = [...emails]\n    if (checkEmails.includes(email)) {\n      setEmails(emails.filter(em => em !== email))\n    } else {\n      const newEmails = [...emails, email]\n      setEmails(newEmails)\n    }\n  }\n\n  const handleAllEmails = (session) => {\n    setAllEmails(session.session_registrants.map(registrants => registrants.email))\n  }\n\n  const handleDeleteState = (e, registrant) => {\n    if (!e.target.checked) {\n      setRegistrantToDelete([])\n    } else {\n      setRegistrantToDelete(registrant)\n    }\n  }\n\n  const handleEditState = (e, registrant) => {\n    if (!e.target.checked) {\n      setRegistrantToEdit([])\n    } else {\n      setRegistrantToEdit(registrant)\n    }\n  }\n\n  // This function handles how the btn text and mail functions\n  // are implemented based on the action dropdown selection\n  const handleBtnText = () => {\n    if (selectedAction === 'Email All') {\n      return (\n        <a\n          href={`mailto:${allEmails}`}\n          rel='noreferrer'\n          target='_blank'\n        >\n          <span className='flex'>\n            <MailIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n            {selectedAction}\n          </span>\n        </a>\n      )\n    } else if (selectedAction === 'Email Selected') {\n      return (\n        <a\n          href={`mailto:${emails}`}\n          rel='noreferrer'\n          target='_blank'\n        >\n          <span className='flex'>\n            <MailIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n            {selectedAction}\n          </span>\n        </a>\n      )\n    } else if (selectedAction === 'Update') {\n      return (\n        <span className='flex'>\n          <PencilAltIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n          {selectedAction}\n        </span>\n      )\n    } else if (selectedAction === 'Delete') {\n      return (\n        <span className='flex'>\n          <TrashIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n          {selectedAction}\n        </span>\n      )\n    }\n  }\n\n  // This function handles getting the session ready to\n  // be passed to SessionRegister.js. It is passed as\n  // 'sessionToRegister' because that is already\n  // working on the receiving end.\n  const handleSessionToEdit = (registrant) => {\n    sessions.forEach(session => {\n      if (session.pk === registrant.session) {\n        setSessionToUpdate(session)\n      }\n    })\n  }\n\n  const handleDelete = (pk) => {\n    deleteRegistrant(token, pk)\n      .then(data => {\n        listSessions()\n          .then(sessions => {\n            setSessions(sessions)\n            handleRefreshAfterEdit(sessions)\n            setDropdownSelectorMode('view-session-registrants')\n          })\n      })\n  }\n\n  const handleRegistrantUpdate = (token, pk, input) => {\n    updateRegistrant(token, pk, input)\n      .then(data => {\n        listSessions()\n          .then(sessions => {\n            setSessions(sessions)\n            handleRefreshAfterEdit(sessions)\n            setIsEditing('')\n            setDropdownSelectorMode('view-session-registrants')\n          })\n      })\n  }\n\n  const handleRefreshAfterEdit = (sessions) => {\n    sessions.forEach(session => {\n      if (session.pk === registrantsToRender.pk) {\n        setRegistrantsToRender(session)\n        handleAllEmails(session)\n      }\n    })\n  }\n\n  if (isDeleting) {\n    return (\n      <DeleteAlert isDeleting={isDeleting} setIsDeleting={setIsDeleting} handleDelete={handleDelete} dataToDelete={registrantToDelete} handleClearAllActionState={handleClearAllActionState} />\n    )\n  }\n\n  if (isEditing === 'edit-registrant' && registrantToEdit.pk) {\n    return (\n      <SessionRegister\n        token={token} registrantToEdit={registrantToEdit} isEditing={isEditing} sessions={sessions} setIsEditing={setIsEditing} showModal='session-registration-form' setShowModal={setShowModal} sessionToRegister={sessionToUpdate} handleRegistrantUpdate={handleRegistrantUpdate}\n      />\n    )\n  }\n\n  if (!isLoggedIn) {\n    <Redirect to='/' />\n  }\n\n  const setSessionTableTitle = () => {\n    return (\n      <span\n        className='font-normal space-x-2 truncate flex'\n      >\n        <p>{registrantsToRender.title}</p>\n        {/* <span className='flex space-x-1'>\n          <Moment format='MM/DD/YYYY'>{registrantsToRender.start_date}</Moment>\n          <p>-</p>\n          <Moment format='MM/DD/YYYY'>{registrantsToRender.end_date}</Moment>\n        </span> */}\n      </span>\n    )\n  }\n\n  return (\n    <>\n      <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'>\n        <span className='flex justify-around'>\n          <SelectionElement sessions={sessions} dropdownSelectorMode={dropdownSelectorMode} setRegistrantsToRender={setRegistrantsToRender} handleAllEmails={handleAllEmails} />\n\n          <span>\n            <h1 className='text-2xl flex justify-start shadow-sm rounded-lg'>{!registrantsToRender.pk ? 'Session' : setSessionTableTitle()}</h1>\n            {registrantsToRender.pk &&\n              <>\n                <div className='flex space-x-1'>\n                  <p className='font-bold text-coolGray-800'>Date:</p>\n                  <span className='flex space-x-1'>\n                    <Moment format='MMM DD, YYYY'>{registrantsToRender.start_date}</Moment>\n                    <p>-</p>\n                    <Moment format='MMM DD, YYYY'>{registrantsToRender.end_date}</Moment>\n                  </span>\n                </div>\n                <div className='flex space-x-1'>\n                  <p className='font-bold text-coolGray-800'>Time:</p>\n                  <span className='flex space-x-1'>\n                    <Moment format='h:mm a'>{registrantsToRender.start_time}</Moment>\n                    <p>-</p>\n                    <Moment format='h:mm a'>{registrantsToRender.end_time}</Moment>\n                  </span>\n                </div>\n                <div className='flex space-x-1'>\n                  <p className='font-bold text-coolGray-800'>Number of registrants:</p>\n                  <p>{!registrantsToRender.pk || registrantsToRender.session_registrants.length}</p>\n                </div>\n                <div className='flex space-x-1'>\n                  <p className='font-bold text-coolGray-800'>Number confirmed:</p>\n                  <p>{!registrantsToRender.pk || getConfirmationCount()}</p>\n                </div>\n              </>}\n          </span>\n        </span>\n        <div className='flex flex-col pt-20'>\n          <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n            <div className='py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8'>\n              <span>\n                <span className='flex items-start justify-end pt-10'>\n                  {/* <h1 className='text-2xl flex flex-1 justify-center mb-10 shadow-sm rounded-lg'>{!registrantsToRender.pk ? 'Session' : setSessionTableTitle()}</h1> */}\n                  {registrantsToRender.pk &&\n                    <div className='flex flex-row space-x-2 mb-2'>\n                      <div className={`flex justify-center ${selectedAction && 'transform -translate-x-2 duration-700'}`}>\n                        <StaticMenu dropdownSelectorMode='action' selectedAction={selectedAction} setSelectedAction={setSelectedAction} />\n                      </div>\n                      {selectedAction &&\n                        <div className='flex items-center'>\n                          <ChevronDoubleRightSolid className='-ml-0.5 mr-2 h-4 w-4 transition delay-1000 animate-pulse' aria-hidden='true' />\n                        </div>}\n                      {selectedAction &&\n                        <span className='flex transition-all delay-1000 duration-500 ease-in-out'>\n                          <button\n                            type='button'\n                            className='inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-coolGray-600 bg-lavenderBlue hover:bg-bluePurple hover:text-ghostWhite focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                            onClick={() => {\n                              if (selectedAction === 'Delete') {\n                                setIsEditing('')\n                                setIsDeleting('delete-registrant')\n                              } else if (selectedAction === 'Update') {\n                                setIsDeleting('')\n                                setIsEditing('edit-registrant')\n                              }\n                            }}\n                          >\n                            {handleBtnText()}\n                          </button>\n                        </span>}\n                    </div>}\n                </span>\n                <div className='shadow overflow-hidden border-b border-gray-200 sm:rounded-lg'>\n                  <table className='min-w-full divide-y divide-gray-200'>\n                    <thead className='bg-gray-50'>\n                      <tr>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Name\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Pronouns\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Email\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Comment\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Confirmed\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Action\n                        </th>\n                      </tr>\n                    </thead>\n\n                    <tbody className='bg-white divide-y divide-gray-200'>\n                      {!registrantsToRender.pk || registrantsToRender.session_registrants.map((registrant, idx) => (\n                        <tr key={`${registrant.pk}-index-${idx}`}>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 space-x-1 flex'>\n                            <p>{registrant.first_name}</p>\n                            <p>{registrant.last_name}</p>\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>\n                            {registrant.pronouns}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>\n                            {registrant.email}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>\n                            {registrant.comment}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center'>\n                            {registrant.confirm ? 'Yes' : 'No'}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-center text-sm font-medium'>\n                            <input\n                              name={idx}\n                              id={registrant.email}\n                              type='checkbox'\n                              value={registrant.email}\n                              onChange={(e) => {\n                                handleEmails(registrant.email)\n                                handleSessionToEdit(registrant)\n                                handleEditState(e, registrant)\n                                handleDeleteState(e, registrant)\n                              }}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewSessionRegistrants\n","import { EyeIcon, EyeOffIcon, RefreshIcon } from '@heroicons/react/outline'\nimport { Fragment, useRef, useState, useEffect } from 'react'\nimport { useParams, Link, useHistory } from 'react-router-dom'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { confirmChangePassword, logout } from '../api'\nimport PasswordAlert from './alerts/PasswordAlert'\nimport PasswordMatchAlert from './alerts/PasswordMatchAlert'\nimport UsePasswordValidation from './UsePasswordValidation'\nimport Errors from './Errors'\n// import { LogoutSolid } from '@graywolfai/react-heroicons'\n\nexport default function PasswordResetConfirm ({ token, setToken, setUsername }) {\n  const [open, setOpen] = useState(true)\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const { uid } = useParams()\n  const { urlToken } = useParams()\n  const history = useHistory()\n  const cancelButtonRef = useRef()\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [passwordBlur, setPasswordBlur] = useState(false)\n  const [passwordMatchBlur, setPasswordMatchBlur] = useState(false)\n  const [enableBtn, setEnableBtn] = useState(0)\n  const [errors, setErrors] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  // DEBUGGER STATION\n  console.log('token', token)\n  console.log('urlToken', urlToken)\n\n  const [validLength, hasNumber, upperCase, lowerCase, match, specialChar, falseCount] = UsePasswordValidation({\n    password: password,\n    confirmPassword: confirmPassword\n  })\n\n  console.log('match', match)\n\n  useEffect(() => {\n    setEnableBtn(falseCount)\n  }, [falseCount, setEnableBtn])\n\n  const handlePasswordAlert = () => {\n    if (passwordBlur) {\n      return (\n        <span>\n          <PasswordAlert validLength={validLength} hasNumber={hasNumber} upperCase={upperCase} lowerCase={lowerCase} specialChar={specialChar} falseCount={falseCount} setEnableBtn={setEnableBtn} />\n        </span>\n      )\n    }\n  }\n\n  const handlePasswordMatchAlert = () => {\n    if (passwordMatchBlur) {\n      return (\n        <PasswordMatchAlert match={match} />\n      )\n    }\n  }\n\n  const handleConfirmChangePassword = () => {\n    setIsLoading(true)\n    confirmChangePassword(uid, urlToken, password, confirmPassword)\n      .then(data => {\n        // logout(token)\n        //   .then(data => {\n        setIsLoading(false)\n        setOpen(false)\n        setToken(null)\n        setUsername('')\n        history.push('/')\n        // })\n      })\n      // .catch(error => {\n      //   console.log('error', error)\n      //   setErrors(error.message)\n      // })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mt-3 text-center sm:mt-3'>\n                  <Dialog.Title as='h3' className='mb-5 text-lg leading-6 font-medium text-gray-900'>\n                    Enter New Password\n                  </Dialog.Title>\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    {errors && (\n                      <div>\n                        <Errors errors={errors} setErrors={setErrors} />\n                      </div>\n                    )}\n                    <div>\n\n                      <label\n                        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n                        htmlFor='password'\n                      >\n                        Password\n                      </label>\n                      <span className='flex'>\n                        <input\n                          id='password'\n                          name='password'\n                          onBlur={e => setPasswordBlur(true)}\n                          type={`${showPassword ? 'text' : 'password'}`}\n                          autoComplete='current-password'\n                          required className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n                          placeholder='Password'\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <button\n                          type='button'\n                          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n                          onClick={() => setShowPassword(!showPassword)}\n                        >\n                          {showPassword\n                            ? <EyeOffIcon className='w-4 h-4' />\n                            : <EyeIcon className='w-4 h-4' />}\n                        </button>\n                      </span>\n\n                      {falseCount > 0 && <span>{handlePasswordAlert()}</span>}\n\n                      <label\n                        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n                        htmlFor='confirm password'\n                      >\n                        Re-type Password\n                      </label>\n                      <span className='flex'>\n                        <input\n                          id='confirm password'\n                          name='confirmPassword'\n                          onBlur={e => setPasswordMatchBlur(true)}\n                          type={`${showConfirmPassword ? 'text' : 'password'}`}\n                          required\n                          className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n                          placeholder='Confirm Password'\n                          value={confirmPassword}\n                          onChange={(e) => {\n                            setConfirmPassword(e.target.value)\n                          }}\n                        />\n                        <button\n                          type='button'\n                          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                        >\n                          {showConfirmPassword\n                            ? <EyeOffIcon className='w-4 h-4' />\n                            : <EyeIcon className='w-4 h-4' />}\n                        </button>\n                      </span>\n                      {!match && handlePasswordMatchAlert()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                {isLoading\n                  ? <button\n                      type='button'\n                      disabled\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                    >\n                    <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                    Processing\n                  </button>\n                  : <button\n                      type='button'\n                      disabled={enableBtn > 0 || !match}\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleConfirmChangePassword()\n                      }}\n                    >\n                    Submit\n                  </button>}\n\n                <Link\n                  to='/'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                  onClick={() => setOpen(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { Fragment, useRef, useState } from 'react'\nimport { useParams, Link, useHistory } from 'react-router-dom'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { confirmChangeUsername } from '../api'\nimport { RefreshIcon } from '@heroicons/react/outline'\n\nexport default function UsernameResetConfirm () {\n  const [open, setOpen] = useState(true)\n  const [username, setUsername] = useState('')\n  const { uid } = useParams()\n  const { token } = useParams()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n  const cancelButtonRef = useRef()\n\n  const handleConfirmChangeUsername = () => {\n    setIsLoading(true)\n    confirmChangeUsername(uid, token, username)\n      .then(data => {\n        setIsLoading(false)\n        history.push('/')\n      })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mt-3 text-center sm:mt-3'>\n                  <Dialog.Title as='h3' className='mb-5 text-lg leading-6 font-medium text-gray-900'>\n                    Enter New Username\n                  </Dialog.Title>\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    <div>\n                      <label htmlFor='username' className='sr-only'>Username</label>\n                      <input\n                        id='username'\n                        name='username'\n                        type='username'\n                        autoComplete='current-username'\n                        required className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                        placeholder='username'\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                {isLoading\n                  ? <button\n                      type='button'\n                      required\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                    >\n                    <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                    Processing\n                    </button>\n                  : <button\n                      type='button'\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleConfirmChangeUsername()\n                        setOpen(false)\n                      }}\n                    >\n                    Submit\n                    </button>}\n\n                <Link\n                  to='/'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                  onClick={() => setOpen(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport createPersistedState from 'use-persisted-state'\nimport './App.css'\nimport { getUser } from './api'\nimport Home from './Home'\nimport Header from './components/Header'\nimport Nav from './components/Nav'\nimport BookStudy from './components/BookStudy'\nimport Sessions from './components/Sessions'\nimport Connect from './components/Connect'\nimport ViewSessionRegistrants from './components/ViewSessionRegistrants'\nimport ViewForm from './components/ViewForm'\nimport PasswordResetConfirm from './components/PasswordResetConfirm'\nimport UsernameResetConfirm from './components/UsernameResetConfirm'\n\nconst useUsername = createPersistedState('username')\nconst useToken = createPersistedState('token')\n\nfunction App () {\n  const [username, setUsername] = useUsername(null)\n  const [loggedInName, setLoggedInName] = useState('')\n  const [token, setToken] = useToken(null)\n  const isLoggedIn = (username && token)\n  const [registered, setRegistered] = useState(false)\n  const [sessions, setSessions] = useState([])\n  const [sessionToRegister, setSessionToRegister] = useState([])\n  const [dropdownSelectorMode, setDropdownSelectorMode] = useState('')\n  const [showModal, setShowModal] = useState('')\n  const [formToView, setFormToView] = useState('')\n  const [sessionToView, setSessionToView] = useState([])\n\n  function setAuth (username, token) {\n    setUsername(username)\n    setToken(token)\n  }\n\n  useEffect(() => {\n    getUser(token)\n      .then(data => setLoggedInName(data.first_name))\n  }, [token])\n\n  // DEBUGGER STATION\n  // console.log('formToView', formToView)\n  // console.log('token', token)\n\n  return (\n    <Router>\n      <div className='min-h-screen bg-ghostWhite'>\n\n        <div className='bg-mediumPurple pb-32'>\n          <Nav token={token} setToken={setToken} username={username} setUsername={setUsername} isLoggedIn={isLoggedIn} setAuth={setAuth} showModal={showModal} setShowModal={setShowModal} loggedInName={loggedInName} setFormToView={setFormToView} setSessions={setSessions} />\n          <Header />\n        </div>\n        <main className='-mt-32'>\n          <Switch>\n            <Route path='/book-study'>\n              <BookStudy />\n            </Route>\n            <Route path='/sessions'>\n              <Sessions token={token} isLoggedIn={isLoggedIn} sessions={sessions} setSessions={setSessions} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} showModal={showModal} setShowModal={setShowModal} setFormToView={setFormToView} setSessionToView={setSessionToView} registered={registered} setRegistered={setRegistered} />\n            </Route>\n            <Route path='/connect'>\n              <Connect />\n            </Route>\n            <Route path='/view-session-registrants'>\n              <ViewSessionRegistrants token={token} isLoggedIn={isLoggedIn} dropdownSelectorMode={dropdownSelectorMode} setDropdownSelectorMode={setDropdownSelectorMode} setSessionToRegister={setSessionToRegister} setShowModal={setShowModal} sessions={sessions} />\n            </Route>\n            <Route path='/view-form'>\n              <ViewForm token={token} isLoggedIn={isLoggedIn} showModal={showModal} setShowModal={setShowModal} formToView={formToView} setFormToView={setFormToView} sessionToView={sessionToView} />\n            </Route>\n            <Route exact path='/password/reset/confirm/:uid/:urlToken'>\n              <PasswordResetConfirm token={token} setToken={setToken} setUsername={setUsername} />\n            </Route>\n            <Route exact path='/username/reset/confirm/:uid/:token' component={UsernameResetConfirm} />\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}