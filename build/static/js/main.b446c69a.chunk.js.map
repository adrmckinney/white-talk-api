{"version":3,"sources":["api.js","components/functions.js","components/NavBtns.js","components/alerts/RegSuccessfulAlert.js","components/MobileNavBtns.js","components/MobileNavMenu.js","components/Errors.js","components/ForgotPasswordRequest.js","components/LoginModal.js","components/createSessionForm.js/SessionTitle.js","components/createSessionForm.js/SessionDescription.js","components/createSessionForm.js/SessionDates.js","components/createSessionForm.js/SessionStatus.js","components/createSessionForm.js/SessionTime.js","components/createSessionForm.js/NumberOfRegistrants.js","components/createSessionForm.js/SessionFacilitator.js","components/CreateSession.js","components/registerAdminForm/AdminName.js","components/registerAdminForm/AdminEmail.js","components/registerAdminForm/AdminUsername.js","components/alerts/PasswordAlert.js","components/alerts/PasswordMatchAlert.js","components/UsePasswordValidation.js","components/registerAdminForm/AdminPassword.js","components/Register.js","components/viewForms/ViewAdminRegForm.js","components/viewForms/ViewCreateSessionForm.js","components/alerts/ResetPasswordUsernameEmailAlert.js","components/ViewForm.js","components/customComponents/useDocumentScrollThrottled.js","components/LoginOverlay.js","components/Nav.js","components/BookStudy.js","components/UpcomingSessions.js","components/MobileUpcomingSessions.js","components/alerts/DeleteAlert.js","components/sessionForms/Comments.js","components/sessionForms/Email.js","components/sessionForms/Name.js","components/sessionForms/Pronouns.js","components/sessionForms/SessionToRegister.js","components/sessionForms/ConfirmationStatus.js","components/sessionForms/SessionRegister.js","components/sessionForms/SessionRegisterOverlay.js","components/alerts/SessionsLoadingAlert.js","components/Sessions.js","components/SelectionElement.js","components/dropdownMenus/StaticMenu.js","components/RenderRegistrants.js","components/ViewSessionRegistrants.js","components/PasswordResetConfirm.js","components/UsernameResetConfirm.js","components/LandingCarousel.js","components/HomeMessage.js","components/Home.js","components/AboutMobile.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["url","axios","create","baseURL","process","login","username","password","post","then","res","data","catch","error","console","log","response","non_field_errors","Error","join","requestChangePassword","email","getUser","token","get","headers","Authorization","sessionRegister","regData","listSessions","formatSelectedSession","session","className","title","format","start_date","end_date","handleFormFilter","name","value","setFilterFunction","pageClickEvent","useRefVariable","stateVariable","setStateFunction","clickEvent","e","current","contains","target","window","addEventListener","removeEventListener","sortSessions","sessions","slice","sort","a","b","Date","NavBtns","isLoggedIn","navBtnClass","to","RegSuccessfulAlert","showRegSuccessfulAlert","setShowRegSuccessfulAlert","dropdownRef","useRef","useEffect","ref","xmlns","viewBox","fill","aria-hidden","fillRule","d","clipRule","onClick","MobileNavBtns","loggedInName","handleLogout","setShowMenu","showMenu","setIsSigningIn","role","MobileNavMenu","setToken","setUsername","setIsCreatingSession","setIsRegistering","setIsEditingAdmin","type","Errors","errors","setErrors","errorRef","ForgotPasswordRequest","setIsForgotPassword","useState","open","setOpen","setEmail","cancelButtonRef","isLoading","setIsLoading","handleForgotPassword","Root","show","as","Fragment","static","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","htmlFor","id","placeholder","onChange","disabled","LoginModal","showModal","setShowModal","setAuth","filterLogin","setFilterLogin","isForgotPassword","showPassword","setShowPassword","onSubmit","preventDefault","auth_token","message","aria-modal","aria-labelledby","autoComplete","required","tabIndex","SessionTitle","handleFilterSession","filterInput","SessionDescription","rows","description","SessionDates","selected","placeholderText","SessionStatus","session_status","aria-pressed","SessionTime","start_time","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","end_time","NumberOfRegistrants","number_of_registrants_allowed","SessionFacilitator","facilitator","CreateSession","isEditing","setIsEditing","sessionToEdit","handleEditSession","setSessions","useReducer","state","newState","setFilterInput","convertDate","date","moment","toDate","handleSubmit","pk","sessionData","createSession","AdminName","filterAdminRegister","setFilterAdminRegister","loginProfile","first_name","last_name","AdminEmail","AdminUsername","PasswordAlert","validLength","hasNumber","upperCase","lowerCase","specialChar","falseCount","setEnableBtn","match","UsePasswordValidation","confirmPassword","setValidLength","setHasNumber","setUpperCase","setLowerCase","setSpecialChar","setMatch","filter","length","toLowerCase","toUpperCase","test","AdminPassword","showConfirmPassword","setShowConfirmPassword","passwordBlur","setPasswordBlur","passwordMatchBlur","setPasswordMatchBlur","re_password","onBlur","handlePasswordAlert","handlePasswordMatchAlert","Register","enableBtn","put","updateAdmin","concat","push","register","ViewAdminRegForm","setFormToView","setLoginProfile","handleRequestChangeUsername","handleRequestChangePassword","isLoadingUsername","ViewCreateSessionForm","sessionToView","history","useHistory","goBack","ResetPasswordUsernameEmailAlert","isEmailingReset","setIsEmailingReset","ViewForm","formToView","setIsLoadingUsername","requestChangeUsername","useDocumentScrollThrottled","callback","setScrollPosition","previousScrollTop","handleDocumentScrollThrottled","throttle","currentScrollTop","document","documentElement","body","scrollTop","previousPosition","LoginOverlay","handleLoginOverlay","Nav","showLoginModal","setShowLoginModal","setShowCreateSessionModal","setShowRegistrationModal","isSigningIn","isRegistering","isEditingAdmin","isCreatingSession","showTransparentNav","setShowTransparentNav","adminBtn","setAdminBtn","callbackData","isScrolledDown","isMinimumScrolled","setTimeout","logout","aria-controls","aria-expanded","stroke","strokeLinecap","strokeLinejoin","strokeWidth","aria-haspopup","aria-orientation","BookStudy","UpcomingSessions","setIsDeleting","sessionToRegister","setSessionToRegister","setSessionToView","setRegistered","isDeleting","setSessionToDelete","sessionToDelete","setSessionToEdit","renderSessionStatus","scope","map","session_registrants","MobileUpcomingSessions","getConfirmationCount","DeleteAlert","handleDelete","dataToDelete","handleClearAllActionState","Comments","comment","Email","Name","Pronouns","pronouns","SessionToRegister","handleSessionToEdit","showSessions","setShowSessions","selectedValue","setSelectedValue","aria-activedescendant","filterSessions","idx","data-idx","ConfirmationStatus","confirm","SessionRegister","registrantToEdit","handleRegistrantUpdate","setRegistrantsToRender","SessionRegisterOverlay","SessionsLoadingAlert","Sessions","registered","sessionsAreLoading","setSessionsAreLoading","useCallback","input","updateSession","forEach","mode","confirmationStatuses","reg","confirmed","status","delete","deleteSession","preserveAspectRatio","points","href","rel","SelectionElement","dropdownSelectorMode","handleAllEmails","setSelectDisplay","StaticMenu","setActionItem","selectedAction","setSelectedAction","showActions","setShowActions","item","RenderRegistrants","setDropdownSelectorMode","registrantsToRender","allEmails","handleDeleteState","handleEditState","handleRefreshAfterEdit","emails","setEmails","registrant","includes","em","newEmails","handleEmails","ViewSessionRegistrants","setAllEmails","registrantToDelete","setRegistrantToDelete","setRegistrantToEdit","sessionToUpdate","setSessionToUpdate","registrants","deleteRegistrant","updateRegistrant","checked","PasswordResetConfirm","setPassword","setConfirmPassword","uid","useParams","urlToken","handleConfirmChangePassword","new_password","re_new_password","confirmChangePassword","UsernameResetConfirm","newUsername","setNewUsername","confirmUsername","setConfirmUsername","handleConfirmChangeUsername","new_username","re_new_username","confirmChangeUsername","LIST_ITEMS","LandingCarousel","setCurrent","goToNext","animationIn","animationInDuration","animationOut","isVisible","MESSAGES","paragraph1","paragraph2","icon","ChatAltIcon","HomeMessage","Home","AboutMobile","FACILITATORS","bio","FACILITATORS_LENGTH","About","facilitatorIndex","setFacilitatorIndex","useUsername","createPersistedState","useToken","App","setLoggedInName","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b446c69a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = axios.create({\n  baseURL: process.env.REACT_APP_DEPLOYED_API_URL\n  // baseURL: process.env.REACT_APP_LOCAL_API_URL\n})\n\nexport const register = (filterAdminRegister) => {\n  return url\n    .post('api/auth/users/', filterAdminRegister)\n    .then(res => {\n      return login(filterAdminRegister.username, filterAdminRegister.password)\n    })\n    .catch(error => {\n      let errors = []\n      if (error.response) {\n        const data = error.response.data\n        if (data.username) {\n          errors = errors.concat(data.username)\n        }\n        if (data.password) {\n          errors = errors.concat(data.password)\n        }\n      }\n\n      if (errors.length === 0) {\n        errors.push('There was a problem registering.')\n      }\n      const err = new Error(errors[0])\n      throw err\n    })\n}\n\nexport const login = (username, password) => {\n  return url\n    .post('api/auth/token/login/', {\n      username,\n      password\n    })\n    .then(res => res.data)\n    .catch(error => {\n      console.log({ error })\n      if (error.response) {\n        if (error.response.data.non_field_errors) {\n          throw new Error(error.response.data.non_field_errors.join(' '))\n        }\n      }\n      throw new Error('Something went wrong.')\n    })\n}\n\nexport const logout = (token) => {\n  return url\n    .post('api/auth/token/logout/', token,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const updateAdmin = (token, filterAdminRegister, pk) => {\n  console.log('filterAdminRegister', filterAdminRegister)\n  return url\n    .put(`api/auth/users/${pk}/`, filterAdminRegister,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => {\n      console.log('res', res)\n      return res.data\n    })\n}\n\nexport const requestChangePassword = (email) => {\n  return url\n    .post('api/auth/users/reset_password/',\n      {\n        email: email\n      }\n    )\n    .then(res => res.data)\n}\n\nexport const confirmChangePassword = (uid, urlToken, password, confirmPassword) => {\n  return url\n    .post('api/auth/users/reset_password_confirm/',\n      {\n        new_password: password,\n        re_new_password: confirmPassword,\n        uid,\n        token: urlToken\n      }\n    )\n    .then(res => res.data)\n    // .catch(error => {\n    //   let errors = []\n    //   if (error.response) {\n    //     const data = error.response.data\n    //     if (data.password) {\n    //       errors = errors.concat(data.password)\n    //     }\n    //   }\n\n  //   if (errors.length === 0) {\n  //     errors.push('There was a problem registering.')\n  //   }\n  //   const err = new Error(errors[0])\n  //   throw err\n  // })\n}\n\nexport const requestChangeUsername = (email) => {\n  return url\n    .post('api/auth/users/reset_username/',\n      {\n        email: email\n      }\n    )\n    .then(res => res.data)\n}\n\nexport const confirmChangeUsername = (uid, urlToken, newUsername, confirmUsername) => {\n  return url\n    .post('api/auth/users/reset_username_confirm/',\n      {\n        uid,\n        token: urlToken,\n        new_username: newUsername,\n        re_new_username: confirmUsername\n      }\n    )\n    .then(res => res.data)\n}\n\n// ***************************\n// *** All things SESSIONS ***\n// ***************************\n\nexport const getUser = (token) => {\n  return url\n    .get('api/users/me/',\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const sessionRegister = (regData) => {\n  return url\n    .post('api/session-register/', regData)\n    .then(res => res.data)\n    .catch(error => {\n      console.log(error.response.data)\n      if (error.response) {\n        if (error.response.data.non_field_errors) {\n          throw new Error(error.response.data.non_field_errors.join(' '))\n        }\n      }\n      throw new Error('Something went wrong.')\n    })\n}\n\nexport const listSessions = () => {\n  return url\n    .get('api/sessions/')\n    .then(res => res.data)\n}\n\nexport const createSession = (token, sessionData) => {\n  console.log('create api ran')\n  return url\n    .post('api/create-session/', sessionData,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const deleteSession = (token, pk) => {\n  return url\n    .delete(`api/delete-session/${pk}/`,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const updateSession = (token, pk, input) => {\n  console.log('update api ran')\n  return url\n    .put(`api/update-session/${pk}/`, input,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const deleteRegistrant = (token, pk) => {\n  return url\n    .delete(`api/delete-registrant/${pk}/`,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n\nexport const updateRegistrant = (token, pk, input) => {\n  return url\n    .put(`api/update-registrant/${pk}/`, input,\n      {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      })\n    .then(res => res.data)\n}\n","import Moment from 'react-moment'\n\nexport const formatSelectedSession = (session) => {\n  return (\n    <span\n      className='font-normal space-x-2 truncate flex'\n    >\n      <p>{session.title}</p>\n      <span className='flex space-x-1'>\n        <Moment format='MM/DD/YYYY'>{session.start_date}</Moment>\n        <p>-</p>\n        <Moment format='MM/DD/YYYY'>{session.end_date}</Moment>\n      </span>\n    </span>\n  )\n}\n\nexport const handleFormFilter = (name, value, setFilterFunction) => {\n  return setFilterFunction({ [name]: value })\n}\n\nexport const pageClickEvent = (useRefVariable, stateVariable, setStateFunction) => {\n  const clickEvent = (e) => {\n    if (useRefVariable.current !== null && !useRefVariable.current.contains(e.target)) {\n      setStateFunction(!stateVariable)\n    }\n  }\n\n  if (stateVariable) {\n    window.addEventListener('click', clickEvent)\n  }\n  return () => {\n    window.removeEventListener('click', clickEvent)\n  }\n}\n\nexport const sortSessions = (sessions) => {\n  return sessions.slice().sort((a, b) => new Date(b.start_date) - new Date(a.start_date))\n}\n","import { Link } from 'react-router-dom'\n\nconst NavBtns = ({ isLoggedIn, navBtnClass }) => {\n  return (\n    <div className='flex space-x-4 font-nunito'>\n      {/* <!-- Current: \"bg-indigo-700 text-white\", Default: \"text-white hover:bg-indigo-500 hover:bg-opacity-75\" --> */}\n\n      <Link to='/' className={navBtnClass()}>\n        Home\n      </Link>\n\n      <Link to='/sessions' className={navBtnClass()}>\n        Sessions\n      </Link>\n\n      <Link to='/about' className={navBtnClass()}>\n        About\n      </Link>\n\n      {/* <Link to='/book-study' className='text-isabelline hover:bg-mediumPurple hover:bg-opacity-75 rounded-md py-2 px-3 text-sm font-medium'>\n        Book Study\n      </Link> */}\n\n      {isLoggedIn &&\n        <Link to='/view-session-registrants' className={navBtnClass()}>\n          Session Registrants\n        </Link>}\n\n      {/* debugger for window size breakpoints */}\n      {/* <div className='hidden sm:block md:hidden text-red-700'>\n        small\n      </div>\n      <div className='hidden md:block lg:hidden text-red-700'>\n        medium\n      </div>\n      <div className='hidden lg:block text-red-700'>\n        large\n      </div> */}\n    </div>\n  )\n}\n\nexport default NavBtns\n","import { useRef, useEffect } from 'react'\nimport { pageClickEvent } from '../functions'\n\nconst RegSuccessfulAlert = ({ showRegSuccessfulAlert, setShowRegSuccessfulAlert }) => {\n  const dropdownRef = useRef(null)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showRegSuccessfulAlert, setShowRegSuccessfulAlert)\n  }, [showRegSuccessfulAlert, setShowRegSuccessfulAlert])\n\n  return (\n    <>\n      <div ref={dropdownRef} className='rounded-md bg-green-50 p-4'>\n        <div className='flex'>\n          <div className='flex-shrink-0'>\n            {/* <!-- Heroicon name: solid/check-circle --> */}\n            <svg className='h-5 w-5 text-green-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z' clipRule='evenodd' />\n            </svg>\n          </div>\n          <div className='ml-3'>\n            <p className='text-sm font-medium text-green-800'>\n              Registration was successful\n            </p>\n          </div>\n          <div className='ml-auto pl-3'>\n            <div className='-mx-1.5 -my-1.5'>\n              <button\n                className='inline-flex bg-green-50 rounded-md p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600'\n                onClick={() => setShowRegSuccessfulAlert(false)}\n              >\n                <span className='sr-only'>Dismiss</span>\n                {/* <!-- Heroicon name: solid/x --> */}\n                <svg className='h-5 w-5' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n                  <path fillRule='evenodd' d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z' clipRule='evenodd' />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default RegSuccessfulAlert\n","import { Link } from 'react-router-dom'\n\nconst MobileNavBtns = ({ isLoggedIn, loggedInName, handleLogout, showMenu, setShowMenu, setIsSigningIn }) => {\n  return (\n    <div className='px-2 pt-2 pb-3 space-y-1'>\n      {/* <!-- Current: \"bg-indigo-700 text-white\", Default: \"text-white hover:bg-indigo-500 hover:bg-opacity-75\" --> */}\n\n      {isLoggedIn &&\n        <div className=''>\n          <div className='block rounded-md py-2 px-3 text-lg  hover:bg-indigo-500 hover:bg-opacity-75 font-bold'>Hello {loggedInName}</div>\n        </div>}\n\n      <Link to='/' className=' hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Home\n      </Link>\n\n      <Link to='/sessions' className=' hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Sessions\n      </Link>\n\n      <Link to='/about' className='hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        About\n      </Link>\n\n      {/* <Link to='/book-study' className=' hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n        Book Study\n      </Link> */}\n\n      {isLoggedIn &&\n        <Link to='/view-session-registrants' className=' hover:bg-indigo-500 hover:bg-opacity-75 block rounded-md py-2 px-3 text-base font-medium'>\n          Session Registrants\n        </Link>}\n\n      {isLoggedIn\n        ? (\n          <Link\n            to='/'\n            className='block rounded-md py-2 px-3 text-base font-medium  hover:bg-indigo-500 hover:bg-opacity-75'\n            onClick={() => {\n              handleLogout()\n            }}\n          >\n            Sign out\n          </Link>\n          )\n        : (\n          <button\n            className='block rounded-md py-2 px-3 text-base font-medium  hover:bg-indigo-500 hover:bg-opacity-75'\n            role='menuitem'\n            onClick={() => {\n              setShowMenu(false)\n              setIsSigningIn('login-overlay')\n            }}\n          >\n            Admin Sign In\n          </button>)}\n\n    </div>\n  )\n}\n\nexport default MobileNavBtns\n","const MobileNavMenu = ({ setToken, setUsername, isLoggedIn, setShowMenu, setIsCreatingSession, setIsRegistering, setIsEditingAdmin }) => {\n  return (\n    <div className='pt-4 pb-3 border-t border-indigo-700'>\n      <div className='px-5 flex items-center'>\n        {/* <div className='flex-shrink-0'>\n          <img className='rounded-full h-10 w-10' src='https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixqx=F3sxs144tE&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80' alt='' />\n        </div> */}\n      </div>\n      <div className='mt-3 px-2 space-y-1'>\n        {isLoggedIn &&\n          <>\n            <button\n              className='block rounded-md py-2 px-3 text-base font-medium hover:bg-indigo-500 hover:bg-opacity-75'\n              role='menuitem'\n              onClick={() => {\n                setShowMenu(false)\n                setIsCreatingSession(true)\n              }}\n            >\n              Create New Session\n            </button>\n\n            <button\n              type='button'\n              className='block rounded-md py-2 px-3 text-base font-medium hover:bg-indigo-500 hover:bg-opacity-75'\n              role='menuitem'\n              onClick={() => {\n                setShowMenu(false)\n                setIsRegistering(true)\n              }}\n            >\n              Register New Admin\n            </button>\n\n            <button\n              className='block rounded-md py-2 px-3 text-base font-medium hover:bg-indigo-500 hover:bg-opacity-75'\n              role='menuitem'\n              onClick={() => {\n                setShowMenu(false)\n                setIsEditingAdmin(true)\n              }}\n            >\n              Update User Settings\n            </button>\n          </>}\n\n      </div>\n    </div>\n  )\n}\n\nexport default MobileNavMenu\n","import { useRef, useEffect } from 'react'\nimport { pageClickEvent } from './functions'\n\nconst Errors = ({ errors, setErrors }) => {\n  const errorRef = useRef(null)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(errorRef, errors, setErrors)\n  }, [errors, setErrors])\n\n  return (\n    <div ref={errorRef}>\n      <div className='rounded-md bg-red-50 p-4'>\n        <div className='flex'>\n          <div className='flex-shrink-0'>\n            {/* <!-- Heroicon name: solid/x-circle --> */}\n            <button\n              onClick={() => setErrors('')}\n            >\n              <svg className='h-5 w-5 text-red-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n                <path fillRule='evenodd' d='M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z' clipRule='evenodd' />\n              </svg>\n            </button>\n          </div>\n          <div className='ml-3'>\n            <h3 className='text-sm font-medium text-red-800'>\n              Error\n            </h3>\n            <div className='mt-2 text-sm text-red-700'>\n              <ul className='list-disc pl-5 space-y-1'>\n                <li>\n                  {errors}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Errors\n","import { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { RefreshIcon, ShieldCheckIcon } from '@heroicons/react/outline'\nimport { requestChangePassword } from '../api'\n\nexport default function ForgotPasswordRequest ({ setIsForgotPassword }) {\n  const [open, setOpen] = useState(true)\n  const [email, setEmail] = useState('')\n  const cancelButtonRef = useRef()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleForgotPassword = (email) => {\n    setIsLoading(true)\n    requestChangePassword(email)\n      .then(data => {\n        setIsForgotPassword(false)\n        setIsLoading(false)\n        setOpen(false)\n      })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100'>\n                  <ShieldCheckIcon className='h-6 w-6 text-green-600' aria-hidden='true' />\n                </div>\n                <div className='mt-3 text-center sm:mt-5'>\n                  <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n                    Change Password Request\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      To reset your password, please enter your email associated with this account. You will receive an email with a link to change your password.\n                    </p>\n                  </div>\n                </div>\n                <label\n                  htmlFor='email'\n                  className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n                >\n                  Email\n                </label>\n                <div className='mt-1 relative rounded-md shadow-sm'>\n                  <div className='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'>\n                    <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n                      <path d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z' />\n                      <path d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n                    </svg>\n                  </div>\n                  <input\n                    type='email'\n                    name='email'\n                    id='email'\n                    className='focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md text-sm sm:text-lg border-gray-300 border pl-10'\n                    placeholder='you@example.com'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                {isLoading\n                  ? <button\n                      type='button'\n                      disabled\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleForgotPassword(email)\n                      }}\n                    >\n                    <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                    Processing\n                    </button>\n                  : <button\n                      type='button'\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleForgotPassword(email)\n                      }}\n                    >\n                    Send Email\n                    </button>}\n\n                <button\n                  type='button'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                  onClick={() => {\n                    setIsForgotPassword(false)\n                    setOpen(false)\n                  }}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport Errors from './Errors'\nimport ForgotPasswordRequest from './ForgotPasswordRequest'\nimport { EyeIcon, EyeOffIcon, RefreshIcon } from '@heroicons/react/outline'\nimport { handleFormFilter } from './functions'\nimport { login } from '../api'\n\nconst LoginModal = ({ showModal, setShowModal, setAuth, setIsSigningIn, filterLogin, setFilterLogin, isLoading, setIsLoading, errors, setErrors }) => {\n  const [isForgotPassword, setIsForgotPassword] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n\n  if (isForgotPassword) {\n    return (\n      <ForgotPasswordRequest setIsForgotPassword={setIsForgotPassword} />\n    )\n  }\n\n  const handleLogin = (e) => {\n    setIsLoading(true)\n    e.preventDefault()\n    login(filterLogin.username, filterLogin.password)\n      .then(data => {\n        if (data && data.auth_token) {\n          setAuth(filterLogin.username, data.auth_token)\n          setShowModal('')\n          setIsLoading(false)\n          setIsSigningIn('')\n        }\n      })\n      .catch(error => {\n        setErrors(error.message)\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <div className='fixed z-20 inset-0 overflow-y-auto'>\n      <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n        {/* Background overlay, show/hide based on modal state. */}\n        <Transition\n          show={showModal === 'login-form'}\n          enter='ease-out duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in duration-200'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n            <div className='absolute inset-0 bg-gray-500 opacity-75' />\n          </div>\n        </Transition>\n        {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n        <span className='inline-block align-middle h-screen w-3/4 sm:w-1/2 md:w-1/3' aria-hidden='true'>&#8203;\n\n          {/* Modal panel, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'login-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <form\n              className='mt-8 space-y-6'\n              onSubmit={handleLogin}\n            >\n              <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                <div>\n                  <div className='mt-2 mb-5 text-center'>\n                    <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                      Admin Login\n                    </h3>\n                  </div>\n\n                  {errors && (\n                    <div>\n                      <Errors errors={errors} setErrors={setErrors} />\n                    </div>\n                  )}\n                  <input type='hidden' name='remember' value='true' />\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    <div>\n                      <label htmlFor='modal-username' className='sr-only'>Username</label>\n                      <input\n                        id='modal-username'\n                        name='username'\n                        type='text'\n                        autoComplete='username'\n                        required\n                        className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                        placeholder='Username'\n                        value={filterLogin.username}\n                        onChange={(e) => handleFormFilter(e.target.name, e.target.value, setFilterLogin)}\n                      />\n                    </div>\n                    <div>\n                      <label htmlFor='modal-password' className='sr-only'>Password</label>\n                      <span className='flex'>\n                        <input\n                          id='modal-password'\n                          name='password'\n                          type={`${showPassword ? 'text' : 'password'}`}\n                          autoComplete='current-password'\n                          required\n                          className='appearance-none rounded-md rounded-r-none rounded-t-none  relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n                          placeholder='Password'\n                          value={filterLogin.password}\n                          onChange={(e) => handleFormFilter(e.target.name, e.target.value, setFilterLogin)}\n                        />\n                        <button\n                          type='button'\n                          tabIndex='-1'\n                          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-t-none  rounded-l-none focus:outline-none'\n                          onClick={() => setShowPassword(!showPassword)}\n                        >\n                          {showPassword\n                            ? <EyeOffIcon className='w-4 h-4' />\n                            : <EyeIcon className='w-4 h-4' />}\n                        </button>\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className='flex items-center justify-between mt-2'>\n                    <div className='text-sm'>\n                      <button\n                        type='button'\n                        className='font-medium text-indigo-600 hover:text-indigo-500'\n                        onClick={() => setIsForgotPassword(true)}\n                      >\n                        Forgot your password?\n                      </button>\n                    </div>\n                  </div>\n\n                </div>\n                <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                  {isLoading\n                    ? <button type='submit' disabled className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                      Processing\n                      </button>\n                    : <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      Login\n                      </button>}\n\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                    onClick={() => {\n                      setIsSigningIn('')\n                      setShowModal('')\n                      setIsLoading(false)\n                      setFilterLogin({\n                        username: '',\n                        password: ''\n                      })\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginModal\n","\nconst SessionTitle = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n        htmlFor='title'\n      >\n        Title\n      </label>\n      <input\n        className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n        type='text'\n        required\n        name='title'\n        id='title'\n        value={filterInput.title}\n        onChange={(e) => handleFilterSession('title', e.target.value)}\n      />\n    </>\n  )\n}\n\nexport default SessionTitle\n","\nconst SessionDescription = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        htmlFor='description'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n      >\n        Description\n      </label>\n      <div className='mt-1'>\n        <textarea\n          className='shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md'\n          name='description'\n          id='description'\n          rows='3'\n          value={filterInput.description}\n        //   onChange={e => setDescription(e.target.value)}\n          onChange={(e) => handleFilterSession('description', e.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default SessionDescription\n","import DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst SessionDates = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col space-y-2 items-center text-sm sm:text-lg font-medium text-gray-700'>\n        <h1>Dates</h1>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='startDate'\n          >\n            Start Date\n          </label> */}\n          <DatePicker\n            selected={filterInput.start_date}\n            id='startDate'\n            autoComplete='off'\n            placeholderText='Select a Start Date'\n            onChange={e => handleFilterSession('start_date', e)}\n          />\n        </div>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='endDate'\n          >\n            End Date\n          </label> */}\n          <DatePicker\n            selected={filterInput.end_date}\n            id='endDate'\n            autoComplete='off'\n            placeholderText='Select an End Date'\n            onChange={e => handleFilterSession('end_date', e)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SessionDates\n","\nconst SessionStatus = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col h-full w-full items-center justify-between'>\n        <span className='flex space-x-2 items-center'>\n          <h1 className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'> Session Status:</h1>\n          <span className={`${filterInput.session_status ? 'bg-green-300 rounded-lg' : 'bg-red-300 rounded-lg'} px-1 py-0.5 text-center`}>{filterInput.session_status ? 'Open' : 'Closed'}</span>\n        </span>\n\n        <button\n          type='button'\n          className='bg-gray-200 relative inline-flex flex-shrink-0 h-6 w-40 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n          aria-pressed='false'\n          aria-labelledby='session-status'\n          value={filterInput.session_status}\n          onClick={e => handleFilterSession('session_status', e.target.value === 'false')}\n        >\n          <span className='sr-only'>Use setting</span>\n          <span\n            aria-hidden='true'\n            className={`${filterInput.session_status ? 'translate-x-32' : 'translate-x-0'} pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-500`}\n          />\n        </button>\n\n      </div>\n    </>\n  )\n}\n\nexport default SessionStatus\n","import DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst SessionTime = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col space-y-2 items-center text-sm sm:text-lg font-medium text-gray-700'>\n        <h1>Times</h1>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='startDate'\n          >\n            Start Time\n          </label> */}\n\n          <DatePicker\n            selected={filterInput.start_time}\n            name='start_time'\n            showTimeSelect\n            autoComplete='off'\n            showTimeSelectOnly\n            timeIntervals={15}\n            timeCaption='Time'\n            dateFormat='h:mm aa'\n            placeholderText='Select a Start Time'\n            onChange={e => handleFilterSession('start_time', e)}\n          />\n\n        </div>\n        <div>\n          {/* <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left mt-4'\n            htmlFor='endDate'\n          >\n            End Time\n          </label> */}\n          <DatePicker\n            selected={filterInput.end_time}\n            name='end_time'\n            showTimeSelect\n            autoComplete='off'\n            showTimeSelectOnly\n            timeIntervals={15}\n            timeCaption='Time'\n            dateFormat='h:mm aa'\n            placeholderText='Select an End Time'\n            onChange={e => handleFilterSession('end_time', e)}\n          />\n        </div>\n      </div>\n      <div />\n    </>\n  )\n}\n\nexport default SessionTime\n","\nconst NumberOfRegistrants = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n        htmlFor='number_of_registrants_allowed'\n      >\n        Max number of registrants\n      </label>\n      <input\n        className='appearance-none relative block w-3/4 px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n        type='number'\n        name='number_of_registrants_allowed'\n        id='number_of_registrants_allowed'\n        value={filterInput.number_of_registrants_allowed}\n        onChange={(e) => handleFilterSession('number_of_registrants_allowed', e.target.value)}\n      />\n    </>\n  )\n}\n\nexport default NumberOfRegistrants\n","\nconst SessionFacilitator = ({ handleFilterSession, filterInput }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'\n        htmlFor='facilitator'\n      >\n        Facilitator\n      </label>\n      <input\n        className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n        type='text'\n        name='facilitator'\n        required\n        id='facilitator'\n        value={filterInput.facilitator}\n        onChange={(e) => handleFilterSession('facilitator', e.target.value)}\n      />\n    </>\n  )\n}\n\nexport default SessionFacilitator\n","import { useReducer, useEffect } from 'react'\nimport { Transition } from '@headlessui/react'\nimport moment from 'moment'\nimport { createSession, listSessions } from '../api'\nimport SessionTitle from './createSessionForm.js/SessionTitle'\nimport SessionDescription from './createSessionForm.js/SessionDescription'\nimport SessionDates from './createSessionForm.js/SessionDates'\nimport SessionStatus from './createSessionForm.js/SessionStatus'\nimport SessionTime from './createSessionForm.js/SessionTime'\nimport NumberOfRegistrants from './createSessionForm.js/NumberOfRegistrants'\nimport { RefreshIcon } from '@heroicons/react/outline'\nimport SessionFacilitator from './createSessionForm.js/SessionFacilitator'\n\nconst CreateSession = ({ token, showModal, setShowModal, isEditing, setIsEditing, sessionToEdit, handleEditSession, setIsCreatingSession, setSessions, isLoading, setIsLoading }) => {\n  const [filterInput, setFilterInput] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {\n      title: '',\n      start_date: '',\n      end_date: '',\n      start_time: '',\n      end_time: '',\n      description: '',\n      session_status: false,\n      number_of_registrants_allowed: 8,\n      facilitator: ''\n    }\n  )\n\n  const handleFilterSession = (name, value) => {\n    setFilterInput({ [name]: value })\n  }\n\n  useEffect(() => {\n    if (isEditing === 'edit-session' && sessionToEdit) {\n      // for the existing dates to populate the datepicker fields that have to\n      // run through this function that formats them correctly.\n      const convertDate = (date) => {\n        return moment(date)\n      }\n\n      setFilterInput({\n        title: sessionToEdit.title,\n        start_date: convertDate(sessionToEdit.start_date).toDate(),\n        end_date: convertDate(sessionToEdit.end_date).toDate(),\n        start_time: convertDate(sessionToEdit.start_time).toDate(),\n        end_time: convertDate(sessionToEdit.end_time).toDate(),\n        description: sessionToEdit.description,\n        session_status: sessionToEdit.session_status,\n        number_of_registrants_allowed: sessionToEdit.number_of_registrants_allowed,\n        facilitator: sessionToEdit.facilitator\n      })\n    }\n  }, [isEditing, sessionToEdit])\n\n  // DEBUGGER STATION\n  // console.log('sessionToEdit', sessionToEdit.pk)\n  console.log('filterInput', filterInput)\n  // console.log('isEditing', isEditing)\n  // console.log('showModal', showModal)\n  // console.log('isLoading', isLoading)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    if (isEditing === 'edit-session') {\n      handleEditSession(token, sessionToEdit.pk, filterInput)\n    } else {\n      createSession(token, filterInput)\n        .then(data => {\n          setShowModal('')\n          setIsCreatingSession(false)\n          listSessions()\n            .then(data => setSessions(data))\n          setIsLoading(true)\n        })\n    }\n  }\n\n  return (\n    <>\n      <div className='fixed z-20 inset-0 overflow-y-auto'>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n          {/* Background overlay, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'create-session-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n              <div className='absolute inset-0 bg-gray-500 opacity-75' />\n            </div>\n          </Transition>\n          {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n          <span className='sm:inline-block sm:align-middle sm:h-screen w-1/2 sm:w-full' aria-hidden='true'>&#8203;\n\n            {/* Modal panel, show/hide based on modal state. */}\n            <Transition\n              show={showModal === 'create-session-form'}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n              enterTo='opacity-100 translate-y-0 sm:scale-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n              leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            >\n              <form onSubmit={e => {\n                e.preventDefault()\n                handleSubmit(e)\n              }}\n              >\n                <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                  <div>\n                    <div className='mt-2 mb-5 text-center'>\n                      <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                        {isEditing ? 'Update Session' : 'Create a new session'}\n                      </h3>\n                    </div>\n                    <span className='flex flex-col space-y-8'>\n                      <div>\n                        <SessionTitle handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                      </div>\n                      <div>\n                        <SessionFacilitator handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                      </div>\n                      <span className='flex flex-col space-y-4 sm:space-y-0 sm:flex-row sm:justify-between'>\n                        <div>\n                          <SessionDates handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                        <div>\n                          <SessionTime handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                      </span>\n                      <span className='flex flex-col space-y-4 sm:space-y-0 sm:flex-row sm:justify-between'>\n                        <div>\n                          <NumberOfRegistrants handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                        <div>\n                          <SessionStatus handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                        </div>\n                      </span>\n                      <div>\n                        <SessionDescription handleFilterSession={handleFilterSession} filterInput={filterInput} />\n                      </div>\n                    </span>\n                  </div>\n                  <span className=''>\n                    <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                      {isLoading\n                        ? <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                          <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                          Processing\n                        </button>\n                        : <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                          {isEditing === 'edit-session'\n                            ? 'Update'\n                            : 'Create'}\n                          </button>}\n                      <button\n                        type='button'\n                        className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                        onClick={() => {\n                          if (isEditing) {\n                            setIsEditing('')\n                          } else {\n                            setShowModal('')\n                            setIsLoading(false)\n                            setIsCreatingSession(false)\n                          }\n                        }}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </span>\n                </div>\n              </form>\n            </Transition>\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default CreateSession\n","import { handleFormFilter } from '../functions'\n\nconst AdminName = ({ filterAdminRegister, setFilterAdminRegister, loginProfile }) => {\n  return (\n    <>\n      <div className='flex space-x-4'>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='first_name'\n          >\n            First Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n            type='text'\n            name='first_name'\n            required\n            id='name'\n            placeholder='First name'\n            value={filterAdminRegister.first_name}\n            onChange={e => handleFormFilter('first_name', e.target.value, setFilterAdminRegister)}\n          />\n        </div>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='last_name'\n          >\n            Last Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n            type='text'\n            name='name'\n            placeholder='Last name'\n            id='last_name'\n            value={filterAdminRegister.last_name}\n            onChange={e => handleFormFilter('last_name', e.target.value, setFilterAdminRegister)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AdminName\n","import { handleFormFilter } from '../functions'\n\nconst AdminEmail = ({ filterAdminRegister, setFilterAdminRegister }) => {\n  return (\n    <>\n      <label\n        htmlFor='email'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n      >\n        Email\n      </label>\n      <div className='mt-1 relative rounded-md shadow-sm'>\n        <div className='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'>\n          <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n            <path d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z' />\n            <path d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n          </svg>\n        </div>\n        <input\n          type='email'\n          name='email'\n          id='email'\n          required\n          className='focus:ring-darkerPurple focus:darkerPurple flex-1 block w-full rounded-md text-sm sm:text-sm border-gray-300 border pl-10'\n          placeholder='you@example.com'\n          value={filterAdminRegister.email}\n          onChange={(e) => handleFormFilter('email', e.target.value, setFilterAdminRegister)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default AdminEmail\n","import { handleFormFilter } from '../functions'\n\nconst AdminUsername = ({ filterAdminRegister, setFilterAdminRegister }) => {\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='first_name'\n      >\n        Username\n      </label>\n      <input\n        id='username'\n        name='username'\n        type='text'\n        autoComplete='username'\n        required\n        className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n        placeholder='Username'\n        value={filterAdminRegister.username}\n        onChange={(e) => handleFormFilter('username', e.target.value, setFilterAdminRegister)}\n      />\n    </>\n  )\n}\n\nexport default AdminUsername\n","import { XCircleIcon } from '@heroicons/react/solid'\n\nexport default function PasswordAlert ({ validLength, hasNumber, upperCase, lowerCase, specialChar, falseCount, setEnableBtn }) {\n  return (\n    <div className='rounded-md bg-red-50 p-4'>\n      <div className='flex flex-col'>\n        {!validLength &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must be at least 8 characters</h3>\n            </div>\n          </span>}\n        {!hasNumber &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one number</h3>\n            </div>\n          </span>}\n        {!upperCase &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one capital letter</h3>\n            </div>\n          </span>}\n        {!lowerCase &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one lower case letter</h3>\n            </div>\n          </span>}\n        {!specialChar &&\n          <span className='flex'>\n            <div className='flex-shrink-0'>\n              <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n            </div>\n            <div className='ml-3'>\n              <h3 className='text-sm font-medium text-red-800'>Your password must include at least one special character (! @ # $ % ^ & * ( ) _ +)</h3>\n            </div>\n          </span>}\n      </div>\n    </div>\n  )\n}\n","import { XCircleIcon } from '@heroicons/react/solid'\n\nexport default function PasswordAlert ({ match }) {\n  return (\n    <div className='rounded-md bg-red-50 p-4 mt-2'>\n      <div className='flex'>\n        <div className='flex-shrink-0'>\n          <XCircleIcon className='h-5 w-5 text-red-400' aria-hidden='true' />\n        </div>\n        <div className='ml-3'>\n          <h3 className='text-sm font-medium text-red-800'>Your passwords must match</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst UsePasswordValidation = ({ password, confirmPassword }) => {\n  const [validLength, setValidLength] = useState(false)\n  const [hasNumber, setHasNumber] = useState(false)\n  const [upperCase, setUpperCase] = useState(false)\n  const [lowerCase, setLowerCase] = useState(false)\n  const [specialChar, setSpecialChar] = useState(false)\n  const [match, setMatch] = useState(false)\n  const value = [validLength, hasNumber, upperCase, lowerCase, specialChar]\n  const count = value.filter((value) => value).length\n  const falseCount = 5 - count\n  console.log('VALUE', value)\n  console.log('count', falseCount)\n\n  useEffect(() => {\n    setValidLength(password.length >= 8)\n    setUpperCase(password.toLowerCase() !== password)\n    setLowerCase(password.toUpperCase() !== password)\n    setHasNumber(/\\d/.test(password))\n    setSpecialChar(/[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(password))\n    setMatch(password && password === confirmPassword)\n  }, [password, confirmPassword])\n\n  return [validLength, hasNumber, upperCase, lowerCase, match, specialChar, falseCount]\n}\n\nexport default UsePasswordValidation\n","import { EyeIcon, EyeOffIcon } from '@heroicons/react/outline'\nimport { useState, useEffect } from 'react'\nimport PasswordAlert from '../alerts/PasswordAlert'\nimport PasswordMatchAlert from '../alerts/PasswordMatchAlert'\nimport { handleFormFilter } from '../functions'\nimport UsePasswordValidation from '../UsePasswordValidation'\n\nconst AdminPassword = ({ filterAdminRegister, setFilterAdminRegister, setEnableBtn }) => {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [passwordBlur, setPasswordBlur] = useState(false)\n  const [passwordMatchBlur, setPasswordMatchBlur] = useState(false)\n\n  const [validLength, hasNumber, upperCase, lowerCase, match, specialChar, falseCount] = UsePasswordValidation({\n    password: filterAdminRegister.password,\n    confirmPassword: filterAdminRegister.re_password\n  })\n\n  useEffect(() => {\n    setEnableBtn(falseCount)\n  }, [falseCount, setEnableBtn])\n\n  const handlePasswordAlert = () => {\n    if (passwordBlur) {\n      return (\n        <span>\n          <PasswordAlert validLength={validLength} hasNumber={hasNumber} upperCase={upperCase} lowerCase={lowerCase} specialChar={specialChar} falseCount={falseCount} setEnableBtn={setEnableBtn} />\n        </span>\n      )\n    }\n  }\n\n  const handlePasswordMatchAlert = () => {\n    if (passwordMatchBlur) {\n      return (\n        <PasswordMatchAlert match={match} />\n      )\n    }\n  }\n\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='password'\n      >\n        Password\n      </label>\n      <span className='flex'>\n        <input\n          id='password'\n          name='password'\n          onBlur={e => setPasswordBlur(true)}\n          type={`${showPassword ? 'text' : 'password'}`}\n          autoComplete='current-password'\n          required\n          className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n          placeholder='Password'\n          value={filterAdminRegister.password}\n          onChange={(e) => handleFormFilter('password', e.target.value, setFilterAdminRegister)}\n        />\n        <button\n          type='button'\n          tabIndex='-1'\n          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n          onClick={() => setShowPassword(!showPassword)}\n        >\n          {showPassword\n            ? <EyeOffIcon className='w-4 h-4' />\n            : <EyeIcon className='w-4 h-4' />}\n        </button>\n      </span>\n\n      {falseCount > 0 && <span>{handlePasswordAlert()}</span>}\n\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='confirm password'\n      >\n        Re-type Password\n      </label>\n      <span className='flex'>\n        <input\n          id='confirm password'\n          name='re_password'\n          onBlur={e => setPasswordMatchBlur(true)}\n          type={`${showConfirmPassword ? 'text' : 'password'}`}\n          required\n          className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n          placeholder='Confirm Password'\n          value={filterAdminRegister.re_password}\n          onChange={(e) => {\n            handleFormFilter(e.target.name, e.target.value, setFilterAdminRegister)\n          }}\n        />\n        <button\n          type='button'\n          tabIndex='-1'\n          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n        >\n          {showConfirmPassword\n            ? <EyeOffIcon className='w-4 h-4' />\n            : <EyeIcon className='w-4 h-4' />}\n        </button>\n      </span>\n      {!match && handlePasswordMatchAlert()}\n    </>\n  )\n}\n\nexport default AdminPassword\n","import { useEffect, useReducer, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { register, updateAdmin } from '../api'\nimport Errors from './Errors'\nimport AdminName from './registerAdminForm/AdminName'\nimport AdminEmail from './registerAdminForm/AdminEmail'\nimport AdminUsername from './registerAdminForm/AdminUsername'\nimport AdminPassword from './registerAdminForm/AdminPassword'\n\nconst Register = ({ token, isEditing, setIsEditing, showModal, setShowModal, loginProfile, setIsRegistering, setIsEditingAdmin }) => {\n  const [errors, setErrors] = useState('')\n  const [enableBtn, setEnableBtn] = useState(0)\n\n  const [filterAdminRegister, setFilterAdminRegister] = useReducer(\n    (name, value) => ({ ...name, ...value }),\n    {\n      first_name: '',\n      last_name: '',\n      username: '',\n      email: '',\n      password: '',\n      re_password: ''\n    }\n  )\n\n  useEffect(() => {\n    if (isEditing === 'register' && loginProfile.id) {\n      setFilterAdminRegister({\n        first_name: loginProfile.first_name,\n        last_name: loginProfile.last_name,\n        email: loginProfile.email\n      })\n    }\n  }, [isEditing, loginProfile])\n\n  // DEBUGGER STATION\n  // console.log('isEditing REGISTER', isEditing)\n  // console.log('showModal REGISTER', showModal)\n  // console.log('loginProfile', loginProfile)\n  // console.log('filterAdminRegister', filterAdminRegister)\n\n  console.log('enableBtn', enableBtn)\n\n  const handleRegister = (e) => {\n    e.preventDefault()\n    if (isEditing === 'register') {\n      updateAdmin(token, filterAdminRegister, loginProfile.id)\n        .then(data => {\n          console.log('data', data)\n          setShowModal('')\n          setIsEditing('')\n        })\n    } else {\n      register(filterAdminRegister)\n        .then(data => {\n          setShowModal('')\n          setIsRegistering(false)\n        })\n        .catch(error => {\n          console.log('error', error)\n          setErrors(error.message)\n        })\n    }\n  }\n\n  return (\n    <div className='fixed z-20 inset-0 overflow-y-auto'>\n      <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n        {/* Background overlay, show/hide based on modal state. */}\n        <Transition\n          show={showModal === 'admin-registration-form'}\n          enter='ease-out duration-300'\n          enterFrom='opacity-0'\n          enterTo='opacity-100'\n          leave='ease-in duration-200'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n            <div className='absolute inset-0 bg-gray-500 opacity-75' />\n          </div>\n        </Transition>\n        {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n        <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>&#8203;\n\n          {/* Modal panel, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'admin-registration-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <form\n              className='mt-8 space-y-6'\n              onSubmit={handleRegister}\n            >\n              <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                <div>\n                  <div className='mt-2 mb-5 text-center'>\n                    <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                      {isEditing === 'register'\n                        ? 'Update Admin Info'\n                        : 'Register New Admin'}\n                    </h3>\n                  </div>\n\n                  {errors && (\n                    <div>\n                      <Errors errors={errors} setErrors={setErrors} />\n                    </div>\n                  )}\n                  <input type='hidden' name='remember' value='true' />\n                  <div className='rounded-md shadow-sm space-y-4'>\n                    <div>\n                      <AdminName filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} loginProfile={loginProfile} />\n                    </div>\n                    <div>\n                      <AdminEmail filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} />\n                    </div>\n                    {isEditing !== 'register' &&\n                      <div>\n                        <AdminUsername filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} />\n                      </div>}\n                    {isEditing !== 'register' &&\n                      <div>\n                        <AdminPassword filterAdminRegister={filterAdminRegister} setFilterAdminRegister={setFilterAdminRegister} setEnableBtn={setEnableBtn} />\n                      </div>}\n                  </div>\n                </div>\n                <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                  <button\n                    type='submit'\n                    disabled={enableBtn > 0}\n                    className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-darkerPurple text-base font-medium text-white hover:bg-mediumPurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                  >\n                    {isEditing === 'register'\n                      ? 'Update'\n                      : 'Register'}\n                  </button>\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                    onClick={() => {\n                      if (isEditing) {\n                        setIsEditing('')\n                        setShowModal('')\n                        setIsEditingAdmin(false)\n                      } else {\n                        setIsRegistering(false)\n                        setShowModal('')\n                      }\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition>\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Register\n","import { RefreshIcon } from '@heroicons/react/outline'\nimport { useEffect } from 'react'\nimport { getUser } from '../../api'\n\nconst ViewAdminRegForm = ({ token, showModal, setShowModal, setFormToView, isEditing, setIsEditing, loginProfile, setLoginProfile, setIsEditingAdmin, handleRequestChangeUsername, handleRequestChangePassword, isLoading, isLoadingUsername }) => {\n  // console.log('showModal', showModal)\n\n  useEffect(() => {\n    getUser(token)\n      .then(data => setLoginProfile(data))\n  }, [token, setLoginProfile])\n\n  //   const handleEmailField = () => {\n  // if (isEditing) {\n\n  // }\n  //   }\n\n  return (\n    <>\n      <div>\n        <div className='mt-2 mb-5 text-center'>\n          <h3 className='text-lg leading-6 font-medium text-coolGray-900' id='modal-headline'>\n            View Admin Registration Profile\n          </h3>\n        </div>\n        <div className='rounded-md shadow-sm space-y-4'>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Name</div>\n              <div\n                className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >\n                <p>\n                  {loginProfile.first_name}\n                </p>\n                <p>\n                  {loginProfile.last_name}\n                </p>\n              </div>\n            </span>\n            <button\n              type='button'\n              className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n              onClick={() => setIsEditing('register')}\n            >\n              Edit Name\n            </button>\n          </div>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Email</div>\n              <div\n                required className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >{loginProfile.email}\n              </div>\n            </span>\n            <button\n              type='button'\n              className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n              onClick={() => setIsEditing('register')}\n            >\n              Edit Email\n            </button>\n          </div>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Username</div>\n              <div\n                className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >{loginProfile.username}\n              </div>\n            </span>\n            {isLoadingUsername\n              ? <button\n                  type='button'\n                  disabled\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                >\n                <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                Processing\n              </button>\n              : <button\n                  type='button'\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                  onClick={() => {\n                    handleRequestChangeUsername(loginProfile.email)\n                  }}\n                >\n                Edit Username\n              </button>}\n\n          </div>\n          <div className='flex justify-between'>\n            <span className='w-3/5'>\n              <div className='text-coolGray-800 text-xl'>Password</div>\n              <div\n                className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n              >**********\n              </div>\n            </span>\n            {isLoading\n              ? <button\n                  type='button'\n                  disabled\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                >\n                <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                Processing\n              </button>\n              : <button\n                  type='submit'\n                  className='w-1/3 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm self-end'\n                  onClick={() => {\n                    handleRequestChangePassword(loginProfile.email)\n                  }}\n                >\n                Change Password\n              </button>}\n\n          </div>\n        </div>\n      </div>\n      <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n        <button\n          type='button'\n          className='mt-3 w-full col-span-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n          onClick={() => {\n            setShowModal('')\n            setIsEditing('')\n            setFormToView('')\n            setIsEditingAdmin(false)\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default ViewAdminRegForm\n","import { useHistory } from 'react-router-dom'\nimport Moment from 'react-moment'\n\nconst ViewCreateSessionForm = ({ token, setShowModal, sessionToView, setFormToView, setIsEditing }) => {\n  console.log('sessionToView', sessionToView)\n  const history = useHistory()\n\n  return (\n    <>\n      <div>\n        <div className='mt-2 mb-5 text-center'>\n          <h3 className='text-lg leading-6 font-medium text-coolGray-900' id='modal-headline'>\n            Selected Session\n          </h3>\n        </div>\n        <div className='rounded-md shadow-sm space-y-4'>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Title</div>\n            <div\n              className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >\n              <p>\n                {sessionToView.title}\n              </p>\n            </div>\n          </div>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Dates</div>\n            <div\n              className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >\n              <span className='flex space-x-1'>\n                <Moment format='MM/DD/YYYY'>{sessionToView.start_date}</Moment>\n                <p>-</p>\n                <Moment format='MM/DD/YYYY'>{sessionToView.end_date}</Moment>\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Description</div>\n            <div\n              required className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >{sessionToView.description}\n            </div>\n          </div>\n          <div>\n            <div className='text-coolGray-800 text-xl'>Session Status</div>\n            <div\n              className='flex relative space-x-1 w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md sm:text-sm'\n            >{sessionToView.session_status\n              ? 'Open'\n              : 'Closed'}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n        <button\n          type='submit'\n          className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2\n                    sm:text-sm'\n          onClick={() => {\n            setIsEditing('create-session')\n          }}\n        >\n          Edit\n        </button>\n        <button\n          type='button'\n          className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n          onClick={() => {\n            history.goBack()\n            setShowModal('')\n            setIsEditing('')\n            setFormToView('')\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default ViewCreateSessionForm\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { CheckIcon } from '@heroicons/react/outline'\n\nexport default function ResetPasswordUsernameEmailAlert ({ isEmailingReset, setIsEmailingReset }) {\n  const [open, setOpen] = useState(true)\n\n  const cancelButtonRef = useRef()\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-40 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100'>\n                  <CheckIcon className='h-6 w-6 text-green-600' aria-hidden='true' />\n                </div>\n                <div className='mt-3 text-center sm:mt-5'>\n                  <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n                    Email Sent\n                  </Dialog.Title>\n                  <div className='mt-2'>\n                    <p className='text-sm text-gray-500'>\n                      {`Please check you inbox for an email with direction to reset your ${isEmailingReset === 'password-reset' ? 'password' : 'username'}.`}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6'>\n                <button\n                  type='button'\n                  className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                  onClick={() => {\n                    setIsEmailingReset(false)\n                    setOpen(false)\n                  }}\n                >\n                  Return to Home\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { Transition } from '@headlessui/react'\nimport { useState } from 'react'\nimport Register from './Register'\nimport ViewAdminRegForm from './viewForms/ViewAdminRegForm'\nimport ViewCreateSessionForm from './viewForms/ViewCreateSessionForm'\nimport CreateSession from './CreateSession'\nimport { requestChangePassword, requestChangeUsername } from '../api'\nimport ResetPasswordUsernameEmailAlert from './alerts/ResetPasswordUsernameEmailAlert'\n\nconst ViewForm = ({ token, showModal, setShowModal, formToView, setFormToView, sessionToView, setIsEditingAdmin }) => {\n  const [isEditing, setIsEditing] = useState('')\n  const [loginProfile, setLoginProfile] = useState([])\n  const [isEmailingReset, setIsEmailingReset] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [isLoadingUsername, setIsLoadingUsername] = useState(false)\n\n  // DEBUGGER STATION\n  console.log('showModal', showModal)\n  console.log('formToView', formToView)\n  console.log('isEditing', isEditing)\n\n  //   Function to handle which form is to be rendered inside modal ViewForm\n  const handleFormSelection = () => {\n    if (formToView === 'admin-reg-form') {\n      return (\n        <ViewAdminRegForm token={token} isEditing={isEditing} setIsEditing={setIsEditing} showModal={showModal} setShowModal={setShowModal} setFormToView={setFormToView} loginProfile={loginProfile} setLoginProfile={setLoginProfile} setIsEditingAdmin={setIsEditingAdmin} handleRequestChangeUsername={handleRequestChangeUsername} handleRequestChangePassword={handleRequestChangePassword} isLoading={isLoading} isLoadingUsername={isLoadingUsername} />\n      )\n    } else if (formToView === 'create-session-form') {\n      return (\n        <ViewCreateSessionForm token={token} setIsEditing={setIsEditing} setShowModal={setShowModal} sessionToView={sessionToView} setFormToView={setFormToView} />\n      )\n    } else if (formToView === 'register') {\n      // return (\n      //   <Register token={token} showModal='admin-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n      // )\n    }\n  }\n\n  // isEditing CONDITIONALS: I originally had this inside the view form components but\n  // the modal would not render when isEditing. Placed at this component level it works\n  if (loginProfile && isEditing === 'register') {\n    return (\n      <Register\n        token={token}\n        loginProfile={loginProfile}\n        isEditing='register'\n        setIsEditing={setIsEditing}\n        showModal='admin-registration-form'\n        setShowModal={setShowModal}\n        setIsEditingAdmin={setIsEditingAdmin}\n      />\n    )\n  }\n\n  if (sessionToView && isEditing === 'create-session') {\n    return (\n      <CreateSession\n        token={token}\n        sessionToEdit={sessionToView}\n        isEditing={isEditing}\n        setIsEditing={setIsEditing}\n        showModal='create-session-form'\n      />\n    )\n  }\n  // if (sessionToView && isEditing === 'edit-registrant') {\n  //   return (\n  //     <ViewSessionRegistrant\n  //       token={token}\n  //       sessionToEdit={sessionToView}\n  //       isEditing={isEditing}\n  //       setIsEditing={setIsEditing}\n  //       showModal='create-session-form'\n  //     />\n  //   )\n  // }\n  // ^^^^^ isEditing CONDITIONALS ^^^^^\n\n  if (isEmailingReset) {\n    return (\n      <ResetPasswordUsernameEmailAlert isEmailingReset={isEmailingReset} setIsEmailingReset={setIsEmailingReset} />\n    )\n  }\n\n  const handleRequestChangeUsername = (email) => {\n    setIsLoadingUsername(true)\n    setShowModal('')\n    setFormToView('')\n    requestChangeUsername(email)\n      .then(data => {\n        setIsLoadingUsername(false)\n        setIsEmailingReset('username-reset')\n      })\n  }\n\n  const handleRequestChangePassword = (email) => {\n    setIsLoading(true)\n    setShowModal('')\n    setFormToView('')\n    requestChangePassword(email)\n      .then(data => {\n        setIsLoading(false)\n        setIsEmailingReset('password-reset')\n      })\n  }\n\n  return (\n    <>\n      <div className='fixed z-20 inset-0 overflow-y-auto'>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n          {/* Background overlay, show/hide based on modal state. */}\n          <Transition\n            show={showModal === 'view-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n              <div className='absolute inset-0 bg-gray-500 opacity-75' />\n            </div>\n          </Transition>\n          {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen sm:w-1/2' aria-hidden='true'>&#8203;\n\n            {/* Modal panel, show/hide based on modal state. */}\n            <Transition\n              show={showModal === 'view-form'}\n              enter='ease-out duration-300'\n              enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n              enterTo='opacity-100 translate-y-0 sm:scale-100'\n              leave='ease-in duration-200'\n              leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n              leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            >\n              <div\n                className='mt-8 space-y-6'\n              >\n                <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                  {handleFormSelection()}\n                </div>\n              </div>\n            </Transition>\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ViewForm\n","import { useEffect, useState } from 'react'\nimport { throttle } from 'lodash'\n\nconst useDocumentScrollThrottled = callback => {\n  const [, setScrollPosition] = useState(0)\n  let previousScrollTop = 0\n\n  const handleDocumentScroll = () => {\n    const { scrollTop: currentScrollTop } = document.documentElement || document.body\n\n    setScrollPosition(previousPosition => {\n      previousScrollTop = 0\n      return currentScrollTop\n    })\n    callback({ previousScrollTop, currentScrollTop })\n  }\n\n  const handleDocumentScrollThrottled = throttle(handleDocumentScroll, 250)\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleDocumentScrollThrottled)\n    return () =>\n      window.removeEventListener('scroll', handleDocumentScrollThrottled)\n  }, [handleDocumentScrollThrottled])\n}\n\nexport default useDocumentScrollThrottled\n","import { Fragment, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { EyeIcon, EyeOffIcon, RefreshIcon, XIcon } from '@heroicons/react/outline'\nimport { handleFormFilter } from './functions'\nimport ForgotPasswordRequest from './ForgotPasswordRequest'\nimport Errors from './Errors'\nimport { login } from '../api'\n\nexport default function LoginOverlay ({ showModal, setShowModal, setAuth, setIsSigningIn, filterLogin, setFilterLogin, isLoading, setIsLoading, errors, setErrors }) {\n  const [open, setOpen] = useState(true)\n  const [isForgotPassword, setIsForgotPassword] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n\n  console.log('filterLogin', filterLogin)\n  console.log('isLoading', isLoading)\n\n  if (isForgotPassword) {\n    return (\n      <ForgotPasswordRequest setIsForgotPassword={setIsForgotPassword} />\n    )\n  }\n\n  const handleLoginOverlay = (e) => {\n    setIsLoading(true)\n    e.preventDefault()\n    login(filterLogin.username, filterLogin.password)\n      .then(data => {\n        if (data && data.auth_token) {\n          setAuth(filterLogin.username, data.auth_token)\n          setShowModal('')\n          setIsLoading(false)\n          setIsSigningIn('')\n        }\n      })\n      .catch(error => {\n        setErrors(error.message)\n        setIsLoading(false)\n      })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as='div' static className='fixed inset-0 overflow-hidden z-50' open={open} onClose={setOpen}>\n        <div className='absolute inset-0 overflow-hidden'>\n          <Dialog.Overlay className='absolute inset-0' />\n\n          <div className='fixed inset-y-0 right-0 pl-10 max-w-full flex'>\n            <Transition.Child\n              as={Fragment}\n              enter='transform transition ease-in-out duration-500 sm:duration-700'\n              enterFrom='translate-x-full'\n              enterTo='translate-x-0'\n              leave='transform transition ease-in-out duration-500 sm:duration-700'\n              leaveFrom='translate-x-0'\n              leaveTo='translate-x-full'\n            >\n              <div className='w-screen max-w-md'>\n                <div className='h-full flex flex-col bg-white shadow-xl overflow-y-scroll'>\n                  <div className='py-6 px-4 bg-mediumPurple sm:px-6'>\n                    <div className='flex items-center justify-between'>\n                      <Dialog.Title className='text-lg font-medium text-white'>Admin Login</Dialog.Title>\n                      <div className='ml-3 h-7 flex items-center'>\n                        <button\n                          className='bg-indigo-700 rounded-md text-indigo-200 hover:text-white focus:outline-none focus:ring-2 focus:ring-white'\n                          onClick={() => {\n                            setIsSigningIn('')\n                            setIsLoading(false)\n                            setFilterLogin({\n                              username: '',\n                              password: ''\n                            })\n                            setOpen(false)\n                          }}\n                        >\n                          <span className='sr-only'>Close panel</span>\n                          <XIcon className='h-6 w-6' aria-hidden='true' />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='relative flex-1 py-6 px-4 sm:px-6'>\n                    <div className='absolute inset-0 py-6 px-4 sm:px-6'>\n                      <form\n                        className='mt-8 space-y-6'\n                        // onSubmit={handleLoginOverlay}\n                      >\n                        {errors && (\n                          <div>\n                            <Errors errors={errors} setErrors={setErrors} />\n                          </div>\n                        )}\n                        <input type='hidden' name='remember' value='true' />\n                        <div className='rounded-md shadow-sm -space-y-px'>\n                          <div>\n                            <label htmlFor='username' className='sr-only'>Username</label>\n                            <input\n                              id='username'\n                              name='username'\n                              type='text'\n                              autoComplete='username'\n                              required\n                              className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                              placeholder='Username'\n                              value={filterLogin.username}\n                              onChange={(e) => handleFormFilter(e.target.name, e.target.value, setFilterLogin)}\n                            />\n                          </div>\n                          <div>\n                            <label htmlFor='password' className='sr-only'>Password</label>\n                            <span className='flex'>\n                              <input\n                                id='modal-password'\n                                name='password'\n                                type={`${showPassword ? 'text' : 'password'}`}\n                                autoComplete='current-password'\n                                required\n                                className='appearance-none rounded-md rounded-r-none rounded-t-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n                                placeholder='Password'\n                                value={filterLogin.password}\n                                onChange={(e) => handleFormFilter(e.target.name, e.target.value, setFilterLogin)}\n                              />\n                              <button\n                                type='button'\n                                tabIndex='-1'\n                                className='px-3 py-2 border border-gray-300 border-l-0 rounded-t-none rounded-md rounded-l-none focus:outline-none'\n                                onClick={() => setShowPassword(!showPassword)}\n                              >\n                                {showPassword\n                                  ? <EyeOffIcon className='w-4 h-4' />\n                                  : <EyeIcon className='w-4 h-4' />}\n                              </button>\n                            </span>\n                          </div>\n                        </div>\n\n                        <div className='flex items-center justify-between mt-2'>\n                          <div className='text-sm'>\n                            <button\n                              type='button'\n                              className='font-medium text-indigo-600 hover:text-indigo-500'\n                              onClick={() => setIsForgotPassword(true)}\n                            >\n                              Forgot your password?\n                            </button>\n                          </div>\n                        </div>\n                        <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                          {isLoading\n                            ? <button type='submit' disabled className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                              <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                              Processing\n                              </button>\n                            : <button\n                                type='submit'\n                                className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                                onClick={(e) => handleLoginOverlay(e)}\n                              >\n                              Login\n                              </button>}\n\n                          <button\n                            type='button'\n                            className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                            onClick={() => {\n                              setIsSigningIn('')\n                              setIsLoading(false)\n                              setFilterLogin({\n                                username: '',\n                                password: ''\n                              })\n                              setOpen(false)\n                            }}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { useEffect, useState, useRef, useReducer } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Transition } from '@headlessui/react'\nimport { pageClickEvent } from './functions'\nimport NavBtns from './NavBtns'\nimport RegSuccessfulAlert from './alerts/RegSuccessfulAlert'\nimport MobileNavBtns from './MobileNavBtns'\nimport MobileNavMenu from './MobileNavMenu'\nimport LoginModal from './LoginModal'\nimport CreateSession from './CreateSession'\nimport Register from './Register'\nimport ViewForm from './ViewForm'\nimport { logout } from '../api'\nimport useDocumentScrollThrottled from './customComponents/useDocumentScrollThrottled'\nimport LoginOverlay from './LoginOverlay'\n\nconst Nav = ({ token, setToken, username, setUsername, isLoggedIn, setAuth, showModal, setShowModal, showLoginModal, setShowLoginModal, setShowCreateSessionModal, setShowRegistrationModal, loggedInName, showRegSuccessfulAlert, setShowRegSuccessfulAlert, setFormToView, setSessions }) => {\n  const [showMenu, setShowMenu] = useState(false)\n  const [isSigningIn, setIsSigningIn] = useState('')\n  const [isRegistering, setIsRegistering] = useState(false)\n  const [isEditingAdmin, setIsEditingAdmin] = useState(false)\n  const [isCreatingSession, setIsCreatingSession] = useState(false)\n  const [showTransparentNav, setShowTransparentNav] = useState(false)\n  const [adminBtn, setAdminBtn] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState('')\n  const dropdownRef = useRef(null)\n  const history = useHistory('')\n\n  // DEBUGGER STATION\n  // console.log('isRegistering', isRegistering)\n  // console.log('isCreatingSession', isCreatingSession)\n  // console.log('isSigningIn', isSigningIn)\n  // console.log('isLoading', isLoading)\n  // console.log('username', username)\n\n  // scroll on click feature\n  const MINIMUM_SCROLL = 0\n  const TIMEOUT_DELAY = 0\n\n  useDocumentScrollThrottled(callbackData => {\n    const { previousScrollTop, currentScrollTop } = callbackData\n    const isScrolledDown = previousScrollTop < currentScrollTop\n    const isMinimumScrolled = currentScrollTop > MINIMUM_SCROLL\n\n    setShowTransparentNav(currentScrollTop > 2)\n\n    setTimeout(() => {\n      setShowTransparentNav(isScrolledDown && isMinimumScrolled)\n    }, TIMEOUT_DELAY)\n  })\n\n  // close menu on window click feature\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      if (dropdownRef.current !== null && !dropdownRef.current.contains(e.target)) {\n        setShowMenu(false)\n        setAdminBtn(false)\n      }\n    }\n    if (showMenu || adminBtn) {\n      window.addEventListener('click', pageClickEvent)\n    }\n    return () => {\n      window.removeEventListener('click', pageClickEvent)\n    }\n  }, [showMenu, adminBtn])\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showMenu, setShowMenu)\n  }, [showMenu])\n\n  // ********** LOGIN FEATURES *************\n  const [filterLogin, setFilterLogin] = useReducer(\n    (name, value) => ({ ...name, ...value }),\n    {\n      username: '',\n      password: ''\n    }\n  )\n\n  if (isSigningIn === 'login-modal') {\n    return (\n      <LoginModal setAuth={setAuth} showModal='login-form' setShowModal={setShowModal} setIsSigningIn={setIsSigningIn} filterLogin={filterLogin} setFilterLogin={setFilterLogin} isLoading={isLoading} setIsLoading={setIsLoading} errors={errors} setErrors={setErrors} />\n    )\n  }\n  if (isSigningIn === 'login-overlay') {\n    return (\n      <LoginOverlay setAuth={setAuth} showModal='login-form' setShowModal={setShowModal} setIsSigningIn={setIsSigningIn} filterLogin={filterLogin} setFilterLogin={setFilterLogin} isLoading={isLoading} setIsLoading={setIsLoading} errors={errors} setErrors={setErrors} />\n    )\n  }\n  // ********** LOGIN FEATURES *************\n\n  if (isRegistering) {\n    return (\n      <Register token={token} showModal='admin-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n    )\n  }\n\n  if (isCreatingSession) {\n    return (\n      <CreateSession token={token} showModal='create-session-form' setShowModal={setShowModal} setIsCreatingSession={setIsCreatingSession} setSessions={setSessions} isLoading={isLoading} setIsLoading={setIsLoading} />\n    )\n  }\n\n  if (isEditingAdmin) {\n    return (\n      <ViewForm token={token} isLoggedIn={isLoggedIn} showModal='view-form' setShowModal={setShowModal} formToView='admin-reg-form' setFormToView={setFormToView} setIsEditingAdmin={setIsEditingAdmin} />\n    )\n  }\n\n  const handleLogout = () => {\n    logout(token)\n      .then(data => {\n        setToken(null)\n        setUsername('')\n        setShowMenu(false)\n        setFilterLogin({\n          username: '',\n          password: ''\n        })\n        history.push('/')\n      })\n  }\n\n  const navBtnClass = () => {\n    return (\n      `${showTransparentNav ? 'text-gray-800 hover:bg-gray-700 hover:text-white' : 'text-white hover:bg-blueGray-100 hover:text-gray-800'} px-3 py-2 rounded-md text-xs lg:text-sm font-medium`\n    )\n  }\n\n  return (\n    <nav className={`${showTransparentNav ? 'sm:bg-none' : 'sm:bg-mediumPurple'} bg-ghostWhite fixed top-0 z-20 w-full`}>\n      <div className='max-w-7xl mx-auto px-2 sm:px-4 lg:px-8'>\n        <div className='relative h-16 flex items-center justify-between'>\n          <div className='px-2 flex items-center lg:px-0'>\n            {/* <div className='flex-shrink-0'>\n              <img className='block h-8 w-8' src='https://tailwindui.com/img/logos/workflow-mark-indigo-300.svg' alt='Workflow' />\n            </div> */}\n            <div className='hidden sm:block sm:ml-10'>\n              <NavBtns isLoggedIn={isLoggedIn} navBtnClass={navBtnClass} />\n            </div>\n          </div>\n          {/* <Search /> */}\n          <div className='flex sm:hidden'>\n            {/* <!-- Mobile menu button --> */}\n            <button\n              type='button'\n              className='bg-indigo-600 p-2 rounded-md inline-flex items-center justify-center text-indigo-200 hover:text-white hover:bg-indigo-500 hover:bg-opacity-75 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white'\n              aria-controls='mobile-menu'\n              aria-expanded='false'\n              onClick={() => setShowMenu(showMenu => !showMenu)}\n            >\n              <span className='sr-only'>Open main menu</span>\n\n              {/* Heroicon name: outline/menu */}\n\n              <svg className={`${showMenu ? 'hidden' : 'block'} h-6 w-6`} xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'>\n                <path strokeLinecap='round' strokeLinejoin='round' strokeWidth='2' d='M4 6h16M4 12h16M4 18h16' />\n              </svg>\n              {/* Heroicon name: outline/x */}\n              <svg className={`${showMenu ? 'block' : 'hidden'} h-6 w-6`} xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor' aria-hidden='true'>\n                <path strokeLinecap='round' strokeLinejoin='round' strokeWidth='2' d='M6 18L18 6M6 6l12 12' />\n              </svg>\n            </button>\n          </div>\n          <div className='hidden sm:block sm:ml-4'>\n            <div className='flex items-center'>\n\n              {/* <!-- Profile dropdown --> */}\n              <div className='ml-3 relative flex-shrink-0 font-nunito'>\n                <div>\n                  <button\n                    type='button'\n                    className={navBtnClass()}\n                    id='user-menu'\n                    aria-expanded='false'\n                    aria-haspopup='true'\n                    onClick={() => setShowMenu(showMenu => !showMenu)}\n                  >\n                    {isLoggedIn\n                      ? `Hello ${loggedInName}`\n                      : 'admin login'}\n\n                  </button>\n                </div>\n\n                {/* Dropdown menu, show/hide based on menu state. */}\n                <Transition\n                  show={showMenu}\n                  enter='transition ease-out duration-100'\n                  enterFrom='transform opacity-0 scale-95'\n                  enterTo='transform opacity-100 scale-100'\n                  leave='transition ease-in duration-75'\n                  leaveFrom='transform opacity-100 scale-100'\n                  leaveTo='transform opacity-0 scale-95'\n                >\n                  <div\n                    className='origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 flex flex-col font-nunito'\n                    role='menu'\n                    aria-orientation='vertical'\n                    aria-labelledby='user-menu'\n                    ref={dropdownRef}\n                  >\n                    {token &&\n                      <>\n                        <button\n                          className='block py-2 px-4 text-sm text-left text-gray-700 hover:bg-gray-100'\n                          role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsCreatingSession(true)\n                          }}\n                        >\n                          Create New Session\n                        </button>\n\n                        <button\n                          type='button'\n                          className='block py-2 px-4 text-sm text-left text-gray-700 hover:bg-gray-100'\n                          role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsRegistering(true)\n                          }}\n                        >\n                          Register New Admin\n                        </button>\n\n                        <button\n                          className='block py-2 px-4 text-sm text-left text-gray-700 hover:bg-gray-100'\n                          role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsEditingAdmin(true)\n                          }}\n                        >\n                          Update User Settings\n                        </button>\n                      </>}\n                    {isLoggedIn\n                      ? (\n                        <Link\n                          to='/'\n                          className='block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100' role='menuitem'\n                          onClick={() => {\n                            handleLogout()\n                          }}\n                        >\n                          Sign out\n                        </Link>\n                        )\n                      : (\n                        <button\n                          className='block py-2 px-4 text-sm text-gray-700 hover:bg-gray-100' role='menuitem'\n                          onClick={() => {\n                            setShowMenu(false)\n                            setIsSigningIn('login-modal')\n                          }}\n                        >\n                          Sign in\n                        </button>)}\n                  </div>\n                </Transition>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {showRegSuccessfulAlert &&\n        <RegSuccessfulAlert showRegSuccessfulAlert={showRegSuccessfulAlert} setShowRegSuccessfulAlert={setShowRegSuccessfulAlert} />}\n\n      {/* <!-- Mobile menu, show/hide based on menu state. --> */}\n      <div className='lg:hidden text-gray-800 border-b-8 border-gray-300' id='mobile-menu'>\n        {showMenu &&\n          <>\n            <MobileNavBtns isLoggedIn={isLoggedIn} loggedInName={loggedInName} handleLogout={handleLogout} showMenu={showMenu} setShowMenu={setShowMenu} setIsSigningIn={setIsSigningIn} />\n            {isLoggedIn &&\n              <MobileNavMenu setToken={setToken} showMenu={showMenu} setUsername={setUsername} setShowMenu={setShowMenu} isLoggedIn={isLoggedIn} username={username} setIsCreatingSession={setIsCreatingSession} setIsRegistering={setIsRegistering} setIsEditingAdmin={setIsEditingAdmin} loggedInName={loggedInName} handleLogout={handleLogout} />}\n          </>}\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav\n","\nconst BookStudy = () => {\n  return (\n    <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'>\n      <div className='bg-mellowApricot rounded-lg shadow px-5 py-6 sm:px-6'>\n        <div className='h-96 border-4 border-dashed border-gray-200 rounded-lg'>\n          Book Study Stuff\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BookStudy\n","import { PencilAltIcon, TrashIcon } from '@heroicons/react/outline'\nimport Moment from 'react-moment'\nimport { sortSessions } from './functions'\n\nconst UpcomingSessions = ({ token, sessions, setSessions, isLoggedIn, showModal, setShowModal, sessionToRegister, setSessionToRegister, setFormToView, setSessionToView, setRegistered, isDeleting, setIsDeleting, isRegistering, setIsRegistering, isEditing, setIsEditing, sessionToDelete, setSessionToDelete, sessionToEdit, setSessionToEdit, isLoading, setIsLoading, renderSessionStatus }) => {\n  // DEBUGGER STATION\n  // console.log('isRegistering', isRegistering)\n  // console.log('sessions', sessions)\n\n  return (\n    <>\n      <div className='flex flex-col pt-10 bg-white w-full h-screen mt-6 relative -top-16 border-b-4 border-coolGray-500'>\n        <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n          <div className='py-1 align-middle inline-block min-w-full sm:px-6 lg:px-8'>\n            <span>\n              <h1 className='text-6xl text-center text-gray-900 font-extrabold font-sans mb-10 rounded-lg'>Upcoming Sessions</h1>\n              <div className='shadow overflow-hidden border-b border-gray-200 sm:rounded-lg mx-8'>\n                <table className='min-w-full divide-y-8 divide-mediumPurple font-nunito'>\n                  <thead className='bg-magnolia'>\n                    <tr>\n                      <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Title\n                      </th>\n                      <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Facilitator\n                      </th>\n                      <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Date/Time\n                      </th>\n                      <th scope='col' className='px-6 py-3 w-96 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Description\n                      </th>\n                      <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                        Status\n                      </th>\n                      {isLoggedIn &&\n                        <>\n                          <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                            Registered\n                          </th>\n                          <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                            Edit/Delete\n                          </th>\n                        </>}\n                    </tr>\n                  </thead>\n\n                  <tbody className='bg-ghostWhite divide-y-8 divide-lavenderWebb'>\n                    {sortSessions(sessions).map(session => (\n                      <tr key={`session-${session.pk}`}>\n                        <td className=' px-6 py-4 break-words text-sm font-medium text-coolGray-900'>\n                          {session.title}\n                        </td>\n                        <td className=' px-6 py-4 break-words text-sm font-medium text-coolGray-900'>\n                          {session.facilitator}\n                        </td>\n                        <td className='px-6 py-4 whitespace-nowrap text-sm text-coolGray-500'>\n                          <span className='space-y-2'>\n                            <span className='flex justify-between'>\n                              <span className='text-gray-800'>First Mtg:</span>\n                              <Moment format='MMM DD, YYYY'>{session.start_date}</Moment>\n                            </span>\n                            <span className='flex justify-between'>\n                              <span className='text-gray-800'> Last Mtg:</span>\n                              <Moment format='MMM DD, YYYY'>{session.end_date}</Moment>\n                            </span>\n                            <span className='flex space-x-2'>\n                              <span className='text-gray-800'> From:</span>\n                              <span className='space-x-1'>\n                                <Moment format='h:mm a'>{session.start_time}</Moment>\n                                <span>-</span>\n                                <Moment format='h:mm a'>{session.end_time}</Moment>\n                              </span>\n                            </span>\n                          </span>\n                        </td>\n                        <td className={`${isLoggedIn ? 'whitespace-nowrap truncate max-w-sm' : 'break-words'} px-6 py-4 text-sm text-coolGray-500 space-x-1 text-center`}>\n                          {session.description}\n                        </td>\n                        <td className='px-6 py-4 whitespace-nowrap text-center text-sm text-coolGray-500'>\n                          {renderSessionStatus(session, 'register-modal')}\n                        </td>\n                        {isLoggedIn &&\n                          <>\n                            <td className='px-6 py-4 whitespace-nowrap text-center text-sm text-coolGray-500'>\n                              {session.session_registrants.length}\n                            </td>\n                            <td className='px-6 py-4 whitespace-nowrap text-center text-sm text-coolGray-500'>\n                              <span className='flex flex-col space-y-4'>\n                                <button\n                                  className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-3 py-1 bg-lavenderBlue text-base font-medium text-coolGray-600 hover:text-ghostWhite hover:bg-bluePurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                                  onClick={() => {\n                                    setSessionToEdit(session)\n                                    setIsEditing('edit-session')\n                                  }}\n                                >\n                                  <PencilAltIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n                                  Edit\n                                </button>\n                                <button\n                                  className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-3 py-1 bg-lavenderBlue text-base font-medium text-coolGray-600 hover:text-ghostWhite hover:bg-bluePurple focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                                  onClick={() => {\n                                    setIsDeleting('delete-session')\n                                    setSessionToDelete(session)\n                                  }}\n                                >\n                                  <TrashIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n                                  Delete\n                                </button>\n                              </span>\n                            </td>\n                          </>}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default UpcomingSessions\n","import { PencilAltIcon, TrashIcon } from '@heroicons/react/outline'\nimport Moment from 'react-moment'\nimport { sortSessions } from './functions'\n\nexport default function MobileUpcomingSessions ({ token, sessions, setSessions, isLoggedIn, showModal, setShowModal, sessionToRegister, setSessionToRegister, setFormToView, setSessionToView, setRegistered, isDeleting, setIsDeleting, isRegistering, setIsRegistering, isEditing, setIsEditing, sessionToDelete, setSessionToDelete, sessionToEdit, setSessionToEdit, isLoading, setIsLoading, renderSessionStatus, getConfirmationCount }) {\n  return (\n    <ul className='grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4 sm:px-10'>\n      <h1 className='col-span-full text-3xl text-center text-gray-900 font-extrabold font-sans my-10 rounded-lg'>Upcoming Sessions</h1>\n      {sortSessions(sessions).map((session) => (\n        <li\n          key={`session-${session.pk}`}\n          className='col-span-1 flex flex-col text-center bg-white rounded-lg shadow divide-y-2 divide-mediumPurple font-nunito mx-2 border border-mediumPurple'\n        >\n          <div className='text-2xl font-bold py-2 break-words'>\n            {session.title}\n          </div>\n          <div className='flex flex-col px-4 pt-8 pb-2 text-xl space-y-8'>\n            <span className='space-y-8'>\n              <span className=''>\n                <div className='space-x-2'>\n                  <Moment format='MMM DD, YYYY'>{session.start_date}</Moment>\n                  <span>-</span>\n                  <Moment format='MMM DD, YYYY'>{session.end_date}</Moment>\n                </div>\n                <div className='space-x-2'>\n                  <Moment format='h:mm a'>{session.start_time}</Moment>\n                  <span>-</span>\n                  <Moment format='h:mm a'>{session.end_time}</Moment>\n                </div>\n                <div className='flex justify-center space-x-2'>\n                  <h3>Facilitator:</h3>\n                  <p>{session.facilitator}</p>\n                </div>\n              </span>\n              <div className='text-base'>\n                <p>{session.description}</p>\n              </div>\n            </span>\n            <div className='flex divide-x divide-gray-200'>\n              <div className='w-0 flex-1 flex justify-center'>\n                {renderSessionStatus(session, 'register-overlay')}\n              </div>\n            </div>\n          </div>\n          {isLoggedIn &&\n            <div className='flex flex-col justify-between h-full'>\n              <span className='flex justify-around py-4'>\n                <div className='flex justify-center space-x-2'>\n                  <h3>Registered:</h3>\n                  <p>{session.session_registrants.length}</p>\n                </div>\n                <div className='flex justify-center space-x-2'>\n                  <h3>Confirmed:</h3>\n                  <p>{getConfirmationCount(session)}</p>\n                </div>\n              </span>\n              <div className='-mt-px flex divide-x divide-gray-200 border-t-2 border-darkerPurple'>\n                <div className='-ml-px w-0 flex-1 flex'>\n                  <button\n                    type='button'\n                    className='relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-br-lg hover:text-gray-500'\n                    onClick={() => {\n                      setIsDeleting('delete-session')\n                      setSessionToDelete(session)\n                    }}\n                  >\n                    <TrashIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n                    <span className='ml-3'>Delete Session</span>\n                  </button>\n                </div>\n                <div className='-ml-px w-0 flex-1 flex'>\n                  <button\n                    type='button'\n                    className='relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm table-btn-color font-medium border border-transparent rounded-br-lg'\n                    onClick={() => {\n                      setSessionToEdit(session)\n                      setIsEditing('edit-session')\n                    }}\n                  >\n                    <PencilAltIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n                    <span className='ml-3'>Edit Session</span>\n                  </button>\n                </div>\n              </div>\n            </div>}\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { Fragment, useRef, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon } from '@heroicons/react/outline'\nimport Moment from 'react-moment'\n\nexport default function DeleteAlert ({ isDeleting, setIsDeleting, handleDelete, dataToDelete, handleClearAllActionState }) {\n  const [open, setOpen] = useState(true)\n  const cancelButtonRef = useRef()\n\n  const handleMessage = () => {\n    if (dataToDelete.length === 0) {\n      return (\n        <p className='text-sm text-gray-500'>\n          There is nothing selected to delete. If a box is checked, please unckeck and check again.\n        </p>\n      )\n    } else {\n      return (\n        <p className='text-sm text-gray-500'>\n          Are you sure you want to delete <strong>{dataToDelete.first_name} {dataToDelete.last_name}</strong> from this session? This action cannot be undone.\n        </p>\n      )\n    }\n  }\n\n  const handleAlertContent = () => {\n    if (isDeleting === 'delete-session') {\n      return (\n        <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n          <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n            Delete Session\n          </Dialog.Title>\n          <div className='mt-2'>\n            <p className='text-sm text-gray-500'>\n              <p className='text-sm text-gray-500'>\n                Are you sure you want to delete the session <strong>{dataToDelete.title} <Moment format='MM/DD/YYYY'>{dataToDelete.start_date}</Moment>-<Moment format='MM/DD/YYYY'>{dataToDelete.end_date}</Moment></strong>? This action cannot be undone.\n              </p>\n            </p>\n          </div>\n        </div>\n      )\n    } else if (isDeleting === 'delete-registrant') {\n      return (\n        <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n          <Dialog.Title as='h3' className='text-lg leading-6 font-medium text-gray-900'>\n            Delete Registrant\n          </Dialog.Title>\n          <div className='mt-2'>\n            {handleMessage()}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div className='sm:flex sm:items-start'>\n                <div className='mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10'>\n                  <ExclamationIcon className='h-6 w-6 text-red-600' aria-hidden='true' />\n                </div>\n                {handleAlertContent()}\n              </div>\n              <div className='mt-5 sm:mt-4 sm:flex sm:flex-row-reverse'>\n                <button\n                  type='button'\n                  className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm'\n                  onClick={() => {\n                    handleDelete(dataToDelete.pk)\n                    setIsDeleting('')\n                    setOpen(false)\n                  }}\n                >\n                  Delete\n                </button>\n                <button\n                  type='button'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:w-auto sm:text-sm'\n                  onClick={() => {\n                    setOpen(false)\n                    if (isDeleting === 'delete-registrant') {\n                      handleClearAllActionState()\n                    }\n                    setIsDeleting('')\n                  }}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { handleFormFilter } from '../functions'\n\nconst Comments = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <label\n        htmlFor='comment'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n      >\n        Comment\n      </label>\n      <div className='mt-1'>\n        <textarea\n          className='shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md'\n          name='comment'\n          id='comment'\n          rows='3'\n          value={filterInput.comment}\n          onChange={e => handleFormFilter('comment', e.target.value, setFilterInput)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default Comments\n","import { handleFormFilter } from '../functions'\n\nconst Email = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <label\n        htmlFor='email'\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n      >\n        Email\n      </label>\n      <div className='mt-1 relative rounded-md shadow-sm'>\n        <div className='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'>\n          <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n            <path d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z' />\n            <path d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n          </svg>\n        </div>\n        <input\n          type='email'\n          name='email'\n          required\n          id='email'\n          className='focus:ring-indigo-500 focus:border-indigo-500 flex-1 block w-full rounded-none rounded-r-md text-sm sm:text-lg border-gray-300 border pl-10'\n          placeholder='you@example.com'\n          value={filterInput.email}\n          onChange={(e) => handleFormFilter('email', e.target.value, setFilterInput)}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default Email\n","import { handleFormFilter } from '../functions'\n\nconst Name = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <div className='flex space-x-4'>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='first_name'\n          >\n            First Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n            type='text'\n            name='first_name'\n            required\n            id='name'\n            value={filterInput.first_name}\n            onChange={e => handleFormFilter('first_name', e.target.value, setFilterInput)}\n          />\n        </div>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='last_name'\n          >\n            Last Name\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n            type='text'\n            name='name'\n            required\n            id='last_name'\n            value={filterInput.last_name}\n            onChange={e => handleFormFilter('last_name', e.target.value, setFilterInput)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Name\n","import { handleFormFilter } from '../functions'\n\nconst Pronouns = ({ filterInput, setFilterInput }) => {\n  return (\n    <>\n      <div className='flex space-x-4'>\n        <div className='w-full'>\n          <label\n            className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n            htmlFor='first_name'\n          >\n            Pronouns\n          </label>\n          <input\n            className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n            type='text'\n            name='pronouns'\n            placeholder='ex. she/her/hers, they/them/their, he/him/his, she/him/they'\n            id='pronouns'\n            required\n            value={filterInput.pronouns}\n            onChange={e => handleFormFilter(e.target.name, e.target.value, setFilterInput)}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Pronouns\n","import { Transition } from '@headlessui/react'\nimport Moment from 'react-moment'\nimport { useState, useEffect, useRef } from 'react'\nimport { formatSelectedSession, handleFormFilter, pageClickEvent } from '../functions'\n\nconst SessionToRegister = ({ sessions, sessionToRegister, filterInput, setFilterInput, handleSessionToEdit }) => {\n  const [showSessions, setShowSessions] = useState(false)\n  const [selectedValue, setSelectedValue] = useState([])\n  const dropdownRef = useRef(null)\n\n  // DEBUGGER STATION\n  // console.log('sessions', sessions)\n  // console.log('selectedValue', selectedValue)\n  // console.log('sessionToRegister', sessionToRegister)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showSessions, setShowSessions)\n  }, [showSessions])\n\n  // This function filters out the session that has been selected so that duplicates don't render on\n  // the options. It also filters out any session that is closed (that is, set to session_status: false).\n  const filterSessions = (sessions) => {\n    if (!selectedValue.pk) {\n      setSelectedValue(sessionToRegister)\n      handleFormFilter('session', sessionToRegister.pk, setFilterInput)\n    }\n    let options = []\n    options = sessions.filter(session => session.pk !== selectedValue.pk && session.session_status === true)\n    return options\n  }\n\n  return (\n    <>\n      <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='sessions'\n      >\n        Sessions\n      </label>\n      <div className='mt-1 relative'>\n        <button\n          type='button' id='sessions' aria-haspopup='listbox' aria-expanded='true' aria-labelledby='listbox-label' className='bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n          onClick={() => setShowSessions(!showSessions)}\n        >\n          <span className='flex truncate justify-center text-sm sm:text-md'>\n\n            {selectedValue.pk\n              ? formatSelectedSession(selectedValue)\n              : formatSelectedSession(sessionToRegister)}\n\n          </span>\n          <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z' clipRule='evenodd' />\n            </svg>\n          </span>\n        </button>\n        <Transition\n          show={showSessions}\n          enter=''\n          enterFrom=''\n          enterTo=''\n          leave='transition ease-in duration-100'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div\n            className='absolute z-20 mt-1 w-full rounded-md bg-gray-50 shadow-lg'\n            ref={dropdownRef}\n          >\n            <ul tabIndex='-1' role='listbox' aria-labelledby='listbox-label' aria-activedescendant='listbox-item-3' className='max-h-40 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm'>\n              {filterSessions(sessions).map((session, idx) => (\n                <li\n                  key={`session-${idx}`}\n                  id={`session-${session}`}\n                  data-idx={idx}\n                  value={session.title}\n                  className='hover:text-white hover:bg-indigo-600 text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9'\n                  onClick={() => {\n                    setSelectedValue(session)\n                    handleFormFilter('session', session.pk, setFilterInput)\n                    setShowSessions(false)\n                  }}\n                >\n                  <span\n                    className='font-normal space-x-2 truncate flex'\n                  >\n                    <p>{session.title}</p>\n                    <span className='flex space-x-1'>\n                      <Moment format='MM/DD/YYYY'>{session.start_date}</Moment>\n                      <p>-</p>\n                      <Moment format='MM/DD/YYYY'>{session.end_date}</Moment>\n                    </span>\n                  </span>\n                </li>\n              ))}\n\n            </ul>\n          </div>\n        </Transition>\n      </div>\n    </>\n  )\n}\n\nexport default SessionToRegister\n","import { handleFormFilter } from '../functions'\n\nconst ConfirmationStatus = ({ setFilterInput, filterInput }) => {\n  return (\n    <>\n      <div className='flex flex-col h-full w-full items-center justify-between space-y-4'>\n        <span className='flex space-x-2 items-center'>\n          <h1 className='block text-sm sm:text-lg font-medium text-gray-700 text-center sm:text-left'> Confirmation Status:</h1>\n          <span className={`${filterInput.confirm ? 'bg-green-300 rounded-lg' : 'bg-red-300 rounded-lg'} px-1 py-0.5 text-center`}>{filterInput.confirm ? 'Confirmed' : 'Not Confirmed'}</span>\n        </span>\n\n        <button\n          type='button'\n          className='bg-gray-200 relative inline-flex flex-shrink-0 h-6 w-72 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n          aria-pressed='false'\n          aria-labelledby='confirm-status'\n          value={filterInput.confirm}\n          onClick={e => handleFormFilter('confirm', e.target.value === 'false', setFilterInput)}\n        >\n          <span className='sr-only'>Use setting</span>\n          <span\n            aria-hidden='true'\n            className={`${filterInput.confirm ? 'translate-x-64' : 'translate-x-0'} pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-500`}\n          />\n        </button>\n\n      </div>\n    </>\n  )\n}\n\nexport default ConfirmationStatus\n","import { useReducer, useEffect, useState } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { sessionRegister } from '../../api'\nimport Comments from './Comments'\nimport Email from './Email'\nimport Name from './Name'\nimport Pronouns from './Pronouns'\nimport SessionToRegister from './SessionToRegister'\nimport ConfirmationStatus from './ConfirmationStatus'\nimport { RefreshIcon } from '@heroicons/react/outline'\n\nconst SessionRegister = ({ token, sessions, sessionToRegister, setSessionToRegister, setRegistered, showModal, setShowModal, isEditing, setIsEditing, registrantToEdit, setIsRegistering, handleRegistrantUpdate, setRegistrantsToRender }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [filterInput, setFilterInput] = useReducer(\n    (name, value) => ({ ...name, ...value }),\n    {\n      first_name: '',\n      last_name: '',\n      pronouns: '',\n      email: '',\n      comment: '',\n      session: null,\n      confirm: false\n    }\n  )\n\n  // DEBUGGER STATION\n  // console.log('sessions in SessionRegister', sessions)\n  // console.log('sessionToRegister', sessionToRegister)\n  // console.log('registrantToEdit', registrantToEdit)\n  // console.log('filterInput', filterInput)\n\n  useEffect(() => {\n    if (isEditing === 'edit-registrant' && registrantToEdit.pk) {\n      setFilterInput({\n        first_name: registrantToEdit.first_name,\n        last_name: registrantToEdit.last_name,\n        pronouns: registrantToEdit.pronouns,\n        email: registrantToEdit.email,\n        comment: registrantToEdit.comment,\n        session: registrantToEdit.session\n      })\n    }\n  }, [isEditing, registrantToEdit])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setIsLoading(true)\n    if (isEditing === 'edit-registrant') {\n      handleRegistrantUpdate(token, registrantToEdit.pk, filterInput)\n    } else {\n      sessionRegister(filterInput)\n        .then(data => {\n          setIsLoading(false)\n          setShowModal('')\n          setIsRegistering('')\n          setRegistered(true)\n        })\n        .catch()\n    }\n  }\n\n  return (\n    <>\n      <div className='fixed z-20 inset-0 overflow-y-auto'>\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n\n          <Transition\n            show={showModal === 'session-registration-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <div className='fixed inset-0 transition-opacity' aria-hidden='true'>\n              <div className='absolute inset-0 bg-gray-500 opacity-75' />\n            </div>\n          </Transition>\n\n          <Transition\n            show={showModal === 'session-registration-form'}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <form onSubmit={handleSubmit}>\n              <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                <div>\n                  <div className='mt-2 mb-5 text-center'>\n                    <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                      {isEditing\n                        ? 'Update Registrant Info'\n                        : 'Session Registration'}\n                    </h3>\n                  </div>\n                  <span className='space-y-4'>\n                    <div>\n                      <SessionToRegister filterInput={filterInput} setFilterInput={setFilterInput} sessions={sessions} sessionToRegister={sessionToRegister} />\n                    </div>\n                    <div>\n                      <Name filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    <div>\n                      <Pronouns filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    <div>\n                      <Email filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    <div>\n                      <Comments filterInput={filterInput} setFilterInput={setFilterInput} />\n                    </div>\n                    {isEditing &&\n                      <div>\n                        <ConfirmationStatus filterInput={filterInput} setFilterInput={setFilterInput} />\n                      </div>}\n                  </span>\n                </div>\n                <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                  {isLoading\n                    ? <button type='submit' disabled className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                      Processing\n                    </button>\n                    : <button type='submit' className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                      {isEditing\n                        ? 'Update'\n                        : 'Register'}\n                    </button>}\n                  <button\n                    type='button'\n                    className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                    onClick={() => {\n                      setShowModal('')\n                      if (isEditing) {\n                        setIsEditing('')\n                      } else {\n                        setIsRegistering('')\n                      }\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition>\n        </div>\n      </div>\n\n    </>\n  )\n}\n\nexport default SessionRegister\n","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment, useEffect, useState, useReducer } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { RefreshIcon, XIcon } from '@heroicons/react/outline'\nimport ConfirmationStatus from './ConfirmationStatus'\nimport Comments from './Comments'\nimport Email from './Email'\nimport Pronouns from './Pronouns'\nimport Name from './Name'\nimport SessionToRegister from './SessionToRegister'\nimport { sessionRegister } from '../../api'\n\nexport default function SessionRegisterOverlay ({ token, sessions, sessionToRegister, setSessionToRegister, setRegistered, showModal, setShowModal, isEditing, setIsEditing, registrantToEdit, setIsRegistering, handleRegistrantUpdate, setRegistrantsToRender }) {\n  const [open, setOpen] = useState(true)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [filterInput, setFilterInput] = useReducer(\n    (name, value) => ({ ...name, ...value }),\n    {\n      first_name: '',\n      last_name: '',\n      pronouns: '',\n      email: '',\n      comment: '',\n      session: null,\n      confirm: false\n    }\n  )\n\n  // DEBUGGER STATION\n  // console.log('sessions in SessionRegister', sessions)\n  // console.log('sessionToRegister', sessionToRegister)\n  // console.log('registrantToEdit', registrantToEdit)\n  console.log('filterInput', filterInput)\n\n  useEffect(() => {\n    if (isEditing === 'edit-registrant' && registrantToEdit.pk) {\n      setFilterInput({\n        first_name: registrantToEdit.first_name,\n        last_name: registrantToEdit.last_name,\n        pronouns: registrantToEdit.pronouns,\n        email: registrantToEdit.email,\n        comment: registrantToEdit.comment,\n        session: registrantToEdit.session\n      })\n    }\n  }, [isEditing, registrantToEdit])\n\n  const handleSubmit = () => {\n    // e.preventDefault()\n    setIsLoading(true)\n    if (isEditing === 'edit-registrant') {\n      handleRegistrantUpdate(token, registrantToEdit.pk, filterInput)\n    } else {\n      sessionRegister(filterInput)\n        .then(data => {\n          setIsLoading(false)\n          setShowModal('')\n          setIsRegistering('')\n          setRegistered(true)\n        })\n        .catch()\n    }\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as='div' static className='fixed inset-0 overflow-hidden z-50' open={open} onClose={setOpen}>\n        <div className='absolute inset-0 overflow-hidden'>\n          <Dialog.Overlay className='absolute inset-0' />\n\n          <div className='fixed inset-y-0 right-0 pl-10 max-w-full flex'>\n            <Transition.Child\n              as={Fragment}\n              enter='transform transition ease-in-out duration-500 sm:duration-700'\n              enterFrom='translate-x-full'\n              enterTo='translate-x-0'\n              leave='transform transition ease-in-out duration-500 sm:duration-700'\n              leaveFrom='translate-x-0'\n              leaveTo='translate-x-full'\n            >\n\n              <div className='w-screen max-w-md'>\n                <div className='h-full flex flex-col bg-white shadow-xl overflow-y-scroll'>\n                  <div className='py-6 px-4 bg-indigo-700 sm:px-6'>\n                    <div className='flex items-center justify-between'>\n                      <Dialog.Title className='text-lg font-medium text-white'>Session Registration</Dialog.Title>\n                      <div className='ml-3 h-7 flex items-center'>\n                        <button\n                          className='bg-indigo-700 rounded-md text-indigo-200 hover:text-white focus:outline-none focus:ring-2 focus:ring-white'\n                          onClick={() => {\n                            setOpen(false)\n                            if (isEditing) {\n                              setIsEditing('')\n                            } else {\n                              setIsRegistering('')\n                            }\n                          }}\n                        >\n                          <span className='sr-only'>Close panel</span>\n                          <XIcon className='h-6 w-6' aria-hidden='true' />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='relative flex-1 py-6 px-4 sm:px-6'>\n                    {/* Replace with your content */}\n                    <div className='absolute inset-0 py-6 px-4 sm:px-6'>\n                      {/* <form onSubmit={handleSubmit}> */}\n                      <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6' role='dialog' aria-modal='true' aria-labelledby='modal-headline'>\n                        <div>\n                          <div className='mt-2 mb-5 text-center'>\n                            <h3 className='text-lg leading-6 font-medium text-gray-900' id='modal-headline'>\n                              {isEditing\n                                ? 'Update Registrant Info'\n                                : 'Session Registration'}\n                            </h3>\n                          </div>\n                          <span className='space-y-4'>\n                            <div>\n                              <SessionToRegister filterInput={filterInput} setFilterInput={setFilterInput} sessions={sessions} sessionToRegister={sessionToRegister} />\n                            </div>\n                            <div>\n                              <Name filterInput={filterInput} setFilterInput={setFilterInput} />\n                            </div>\n                            <div>\n                              <Pronouns filterInput={filterInput} setFilterInput={setFilterInput} />\n                            </div>\n                            <div>\n                              <Email filterInput={filterInput} setFilterInput={setFilterInput} />\n                            </div>\n                            <div>\n                              <Comments filterInput={filterInput} setFilterInput={setFilterInput} />\n                            </div>\n                            {isEditing &&\n                              <div>\n                                <ConfirmationStatus filterInput={filterInput} setFilterInput={setFilterInput} />\n                              </div>}\n                          </span>\n                        </div>\n                        <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                          {isLoading\n                            ? <button type='submit' disabled className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'>\n                              <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                              Processing\n                            </button>\n                            : <button\n                                type='submit'\n                                className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                                onClick={() => handleSubmit()}\n                              >\n                              {isEditing\n                                ? 'Update'\n                                : 'Register'}\n                              </button>}\n                          <button\n                            type='button'\n                            className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                            onClick={() => {\n                              setOpen(false)\n                              if (isEditing) {\n                                setIsEditing('')\n                              } else {\n                                setIsRegistering('')\n                              }\n                            }}\n                          >\n                            Cancel\n                          </button>\n                        </div>\n                      </div>\n                      {/* </form> */}\n                    </div>\n                    {/* /End replace */}\n                  </div>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","/* This example requires Tailwind CSS v2.0+ */\nimport { ExclamationIcon } from '@heroicons/react/solid'\n\nexport default function SessionsLoadingAlert () {\n  return (\n    <div className='bg-yellow-50 border-l-4 border-yellow-400 p-4'>\n      <div className='flex'>\n        <div className='flex-shrink-0'>\n          <ExclamationIcon className='h-5 w-5 text-yellow-400' aria-hidden='true' />\n        </div>\n        <div className='ml-3'>\n          <p className='text-sm text-yellow-700'>\n            The sessions are loading. This can take some time. Thanks for your patience and sorry for the day\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { Popover } from '@headlessui/react'\nimport UpcomingSessions from './UpcomingSessions'\nimport MobileUpcomingSessions from './MobileUpcomingSessions'\nimport { listSessions, deleteSession, updateSession } from '../api'\nimport DeleteAlert from './alerts/DeleteAlert'\nimport SessionRegister from './sessionForms/SessionRegister'\nimport SessionRegisterOverlay from './sessionForms/SessionRegisterOverlay'\nimport CreateSession from './CreateSession'\nimport { PencilIcon } from '@heroicons/react/outline'\nimport SessionsLoadingAlert from './alerts/SessionsLoadingAlert'\n\nconst Sessions = ({ token, isLoggedIn, showModal, setShowModal, sessions, setSessions, sessionToRegister, setSessionToRegister, setFormToView, setSessionToView, registered, setRegistered }) => {\n  const [isDeleting, setIsDeleting] = useState('')\n  const [isRegistering, setIsRegistering] = useState('')\n  const [isEditing, setIsEditing] = useState('')\n  const [sessionToDelete, setSessionToDelete] = useState([])\n  const [sessionToEdit, setSessionToEdit] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [sessionsAreLoading, setSessionsAreLoading] = useState(false)\n\n  // DEBUGGER STATION\n  console.log('isRegistering', isRegistering)\n  console.log('sessions', sessions)\n\n  useEffect(() => {\n    setSessionsAreLoading(true)\n    listSessions()\n      .then(data => {\n        setSessionsAreLoading(false)\n        setSessions(data)\n      })\n  }, [setSessions])\n\n  // Had to use useCallback here because the handleEditSession without\n  // it was causing the useEffect below to run on every render\n  const handleEditSession = useCallback((token, pk, input) => {\n    updateSession(token, pk, input)\n      .then(data => {\n        listSessions()\n          .then(data => setSessions(data))\n        setIsLoading(false)\n        setIsEditing('')\n        setShowModal('')\n      })\n  }, [setSessions, setShowModal])\n\n  useEffect(() => {\n    sessions.forEach(session => {\n      if (session.session_registrants.length >= session.number_of_registrants_allowed && session.session_status === true) {\n        const input = {\n          title: session.title,\n          start_date: session.start_date,\n          end_date: session.end_date,\n          start_time: session.start_time,\n          end_time: session.end_time,\n          description: session.description,\n          session_status: 'false',\n          number_of_registrants_allowed: session.number_of_registrants_allowed\n        }\n        console.log('input', input)\n        handleEditSession(token, session.pk, input)\n      }\n    })\n  }, [sessions, handleEditSession, token])\n\n  const handleDelete = (pk) => {\n    deleteSession(token, pk)\n      .then(data => {\n        listSessions()\n          .then(data => setSessions(data))\n      })\n  }\n\n  const renderSessionStatus = (session, mode) => {\n    if (session.session_status) {\n      return (\n        <button\n          className='w-full sm:w-3/4 inline-flex justify-center rounded-md border border-transparent shadow-sm px-3 py-1 table-btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n          onClick={() => {\n            setIsRegistering(mode)\n            setSessionToRegister(session)\n          }}\n        >\n          <PencilIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n          Sign up\n        </button>\n      )\n    } else {\n      return (\n        <span className='whitespace-nowrap text-md text-center text-red-300 font-bold'>Closed</span>\n      )\n    }\n  }\n\n  const getConfirmationCount = (session) => {\n    const confirmationStatuses = session.session_registrants.map(reg => reg.confirm)\n    const confirmed = []\n    confirmationStatuses.forEach(status => {\n      if (status) {\n        confirmed.push(status)\n      }\n    })\n    return confirmed.length\n  }\n\n  if (isRegistering === 'register-modal') {\n    return (\n      <SessionRegister sessions={sessions} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} setRegistered={setRegistered} showModal='session-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n    )\n  }\n\n  if (isRegistering === 'register-overlay') {\n    return (\n      <SessionRegisterOverlay sessions={sessions} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} setRegistered={setRegistered} showModal='session-registration-form' setShowModal={setShowModal} setIsRegistering={setIsRegistering} />\n    )\n  }\n\n  if (isDeleting) {\n    return (\n      <DeleteAlert isDeleting={isDeleting} setIsDeleting={setIsDeleting} handleDelete={handleDelete} dataToDelete={sessionToDelete} />\n    )\n  }\n\n  if (isEditing === 'edit-session') {\n    return (\n      <span className=''>\n        <CreateSession isEditing='edit-session' token={token} showModal='create-session-form' setShowModal={setShowModal} setIsEditing={setIsEditing} sessionToEdit={sessionToEdit} handleEditSession={handleEditSession} isLoading={isLoading} setIsLoading={setIsLoading} />\n      </span>\n    )\n  }\n\n  return (\n    <>\n      <div className='relative bg-white overflow-hidden'>\n        <div className='max-w-7xl mx-auto'>\n          <div className='relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32'>\n            <svg\n              className='hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2'\n              fill='currentColor'\n              viewBox='0 0 100 100'\n              preserveAspectRatio='none'\n              aria-hidden='true'\n            >\n              <polygon points='50,0 100,0 50,100 0,100' />\n            </svg>\n\n            {/* Have to keep this for style */}\n            <Popover>\n              {({ open }) => (\n                <>\n                  <div className='relative pt-6 px-4 sm:px-6 lg:px-8' />\n                </>\n              )}\n            </Popover>\n\n            <main\n              className='mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28'\n            >\n              <div\n                className='text-center lg:text-left'\n              >\n                <h1 className='flex flex-col text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl space-y-2 lg:space-y-0 pt-10 sm:pt-4 lg:pt-0'>\n                  <span className='block xl:inline'>Get Engaged</span>{' '}\n                  <span className='block text-mediumPurple xl:inline'>Sign up for a Session</span>\n                </h1>\n                <p\n                  className='mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0'\n                >\n                  White talk sessions are opportunities to spend intentional time each week digging deeper into our understanding of racism and whiteness. Each session lasts 5 weeks, with a 1 hour meeting each week.\n                </p>\n                <p\n                  className='mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0'\n                >\n                  For more information about sessions, contact Rachael Gigliotti at&nbsp;\n                  <a\n                    href='mailto:rachgigliotti@yahoo.com'\n                    rel='noreferrer'\n                    target='_blank'\n                    className='text-blue-500'\n                  >rachgigliotti@yahoo.com\n                  </a>\n                </p>\n                {/* <div className='mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start'>\n                  <div className='rounded-md shadow'>\n                    <a\n                      href='#'\n                      className='w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10'\n                    >\n                      Get started\n                    </a>\n                  </div>\n                  <div className='mt-3 sm:mt-0 sm:ml-3'>\n                    <a\n                      href='#'\n                      className='w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10'\n                    >\n                      Live demo\n                  </a>\n                  </div> */}\n                {/* </div> */}\n              </div>\n            </main>\n          </div>\n        </div>\n        <div className='lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 bg-mediumPurple flex justify-end'>\n          <div className='flex flex-col items-center justify-end xl:justify-center w-full h-full space-y-4 xl:space-y-8 pb-2 xl:pb-0 font-nunito'>\n            <div className='bg-darkerPurple w-full lg:flex lg:flex-col lg:items-end mt-4'>\n              <h2 className='font-bold text-lg text-ghostWhite text-center lg:w-7/12 xl:w-full'>Meeting 1</h2>\n              <p className='text-white text-md text-center px-3 lg:w-7/12 xl:w-full'> Let's talk about race and racism and how it works</p>\n            </div>\n            <div className='bg-darkerPurple w-full lg:flex lg:flex-col lg:items-end'>\n              <h2 className='font-bold text-lg text-ghostWhite text-center lg:w-7/12 xl:w-full'>Meeting 2</h2>\n              <p className='text-white text-md text-center px-3 lg:w-7/12 xl:w-full'> Community and the importance of meeting as a white collective</p>\n            </div>\n            <div className='bg-darkerPurple w-full lg:flex lg:flex-col lg:items-end'>\n              <h2 className='font-bold text-lg text-ghostWhite text-center lg:w-7/12 xl:w-full'>Meeting 3</h2>\n              <p className='text-white text-md text-center px-3 lg:w-7/12 xl:w-full'> Strategies to disrupt racism</p>\n            </div>\n            <div className='bg-darkerPurple w-full lg:flex lg:flex-col lg:items-end'>\n              <h2 className='font-bold text-lg text-ghostWhite text-center lg:w-7/12 xl:w-full'>Meeting 4</h2>\n              <p className='text-white text-md text-center px-3 lg:w-7/12 xl:w-full'> Characteristics and antidotes of white supremacy culture</p>\n            </div>\n            <div className='bg-darkerPurple w-full lg:flex lg:flex-col lg:items-end'>\n              <h2 className='font-bold text-lg text-ghostWhite text-center lg:w-7/12 xl:w-full'>Meeting 5</h2>\n              <p className='text-white text-md text-center px-3 lg:w-7/12 xl:w-full'> Continuing the work for racial justice and the healing of racial injustices</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='md:mt-8 lg:mt-32 pb-20 sm:pb-10 lg:pb-0'>\n        {sessionsAreLoading\n          ? <span><SessionsLoadingAlert /></span>\n          : <>\n            <span className='hidden lg:block'>\n              <UpcomingSessions token={token} sessions={sessions} setSessions={setSessions} isLoggedIn={isLoggedIn} showModal={showModal} setShowModal={setShowModal} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} setFormToView={setFormToView} setSessionToView={setSessionToView} setRegistered={setRegistered} setIsRegistering={setIsRegistering} setSessionToEdit={setSessionToEdit} setIsEditing={setIsEditing} setSessionToDelete={setSessionToDelete} setIsDeleting={setIsDeleting} renderSessionStatus={renderSessionStatus} getConfirmationCount={getConfirmationCount} />\n            </span>\n            <span className='lg:hidden'>\n              <MobileUpcomingSessions token={token} sessions={sessions} setSessions={setSessions} isLoggedIn={isLoggedIn} showModal={showModal} setShowModal={setShowModal} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} setFormToView={setFormToView} setSessionToView={setSessionToView} setRegistered={setRegistered} setIsRegistering={setIsRegistering} setSessionToEdit={setSessionToEdit} setIsEditing={setIsEditing} setSessionToDelete={setSessionToDelete} setIsDeleting={setIsDeleting} renderSessionStatus={renderSessionStatus} getConfirmationCount={getConfirmationCount} />\n            </span>\n          </>}\n\n      </div>\n    </>\n  )\n}\n\nexport default Sessions\n","import { Transition } from '@headlessui/react'\nimport { useState, useEffect, useRef } from 'react'\n// import Moment from 'react-moment'\nimport { formatSelectedSession, pageClickEvent } from './functions'\n\nconst SelectionElement = ({ sessions, dropdownSelectorMode, setRegistrantsToRender, handleAllEmails }) => {\n  const [showSessions, setShowSessions] = useState(false)\n  const [selectedValue, setSelectedValue] = useState([])\n  const dropdownRef = useRef(null)\n\n  // DEBUGGER STATION\n  // console.log('selectedValue', selectedValue)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showSessions, setShowSessions)\n  }, [showSessions])\n\n  // const setLabel = () => {\n  //   if (dropdownSelectorMode === 'view-session-registrants') {\n  //     return 'Select Session'\n  //   }\n  // }\n\n  const setSelectDisplay = () => {\n    if (dropdownSelectorMode === 'view-session-registrants') {\n      return (\n        <>\n          {selectedValue.pk\n            ? formatSelectedSession(selectedValue)\n            : 'Select Session'}\n        </>\n      )\n    }\n  }\n\n  return (\n    <>\n      {/* <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='pronouns'\n      >\n        {setLabel()}\n      </label> */}\n      <div className='mt-8 relative'>\n        <button\n          type='button' aria-haspopup='listbox' aria-expanded='true' aria-labelledby='listbox-label' className='bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n          onClick={() => setShowSessions(!showSessions)}\n        >\n          <span className='flex truncate justify-center text-sm sm:text-md'>\n            {setSelectDisplay()}\n          </span>\n          <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z' clipRule='evenodd' />\n            </svg>\n          </span>\n        </button>\n        <Transition\n          show={showSessions}\n          enter=''\n          enterFrom=''\n          enterTo=''\n          leave='transition ease-in duration-100'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div\n            className='absolute z-20 mt-1 w-full rounded-md bg-gray-50 shadow-lg'\n            ref={dropdownRef}\n          >\n            <ul tabIndex='-1' role='listbox' aria-labelledby='listbox-label' aria-activedescendant='listbox-item-3' className='max-h-40 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm pb-8'>\n              {sessions.map((session, idx) => (\n                <li\n                  key={`session-${idx}`}\n                  id={`session-${session}`}\n                  data-idx={idx}\n                  value={session.title}\n                  className='hover:text-white hover:bg-indigo-600 text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9'\n                  onClick={() => {\n                    setSelectedValue(session)\n                    setShowSessions(false)\n                    if (dropdownSelectorMode === 'view-session-registrants') {\n                      setRegistrantsToRender(session)\n                      handleAllEmails(session)\n                    }\n                  }}\n\n                >\n                  {/* <!-- Selected: \"font-semibold\", Not Selected: \"font-normal\" --> */}\n                  <span\n                    className='font-normal space-x-2 truncate flex'\n                  >\n                    <p>{session.title}</p>\n                    {/* <span className='flex space-x-1'>\n                      <Moment format='MM/DD/YYYY'>{session.start_date}</Moment>\n                      <p>-</p>\n                      <Moment format='MM/DD/YYYY'>{session.end_date}</Moment>\n                    </span> */}\n                  </span>\n                </li>\n              ))}\n\n            </ul>\n          </div>\n        </Transition>\n      </div>\n    </>\n  )\n}\n\nexport default SelectionElement\n","import { Transition } from '@headlessui/react'\nimport { useState, useEffect, useRef } from 'react'\nimport { pageClickEvent } from '../functions'\n\nconst StaticMenu = ({ dropdownSelectorMode, setActionItem, selectedAction, setSelectedAction }) => {\n  const [showActions, setShowActions] = useState(false)\n  const dropdownRef = useRef(null)\n\n  // This useEffect calls the function (inside functions.js) that hides menues on window click.\n  // It needs the useRef Variable, menu state variable, and the menu setState function.\n  useEffect(() => {\n    pageClickEvent(dropdownRef, showActions, setShowActions)\n  }, [showActions])\n\n  // const setLabel = () => {\n  //   if (dropdownSelectorMode === 'action') {\n  //     return 'Select Action'\n  //   }\n  // }\n\n  // const setSelectDisplay = () => {\n  //   if (dropdownSelectorMode === 'action') {\n  //     return (\n  //       <>\n  //         {selectedAction.pk\n  //           ? formatSelectedSession(selectedAction)\n  //           : 'Select Session'}\n  //       </>\n  //     )\n  //   }\n  // }\n\n  const ACTIONITEMS = [\n    'Email All',\n    'Email Selected',\n    'Update',\n    'Delete'\n  ]\n\n  return (\n    <>\n      {/* <label\n        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n        htmlFor='pronouns'\n      >\n        {setLabel()} */}\n      {/* </label> */}\n      <div className='mt-0 relative'>\n        <button\n          type='button' aria-haspopup='listbox' aria-expanded='true' aria-labelledby='listbox-label' className='bg-white relative w-auto border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm'\n          onClick={() => setShowActions(!showActions)}\n        >\n          <span className='flex justify-center text-sm sm:text-md'>\n            {selectedAction || 'Action'}\n          </span>\n          <span className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <svg className='h-5 w-5 text-gray-400' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor' aria-hidden='true'>\n              <path fillRule='evenodd' d='M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z' clipRule='evenodd' />\n            </svg>\n          </span>\n        </button>\n        <Transition\n          show={showActions}\n          enter=''\n          enterFrom=''\n          enterTo=''\n          leave='transition ease-in duration-100'\n          leaveFrom='opacity-100'\n          leaveTo='opacity-0'\n        >\n          <div\n            className='absolute z-20 mt-1 min-w-max rounded-md bg-gray-50 shadow-lg'\n            ref={dropdownRef}\n          >\n            <ul tabIndex='-1' role='listbox' aria-labelledby='listbox-label' aria-activedescendant='listbox-item-3' className='max-h-40 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm'>\n              {ACTIONITEMS.map((item, idx) => (\n                <li\n                  key={`session-${idx}`}\n                  id={`session-${item}`}\n                  data-idx={idx}\n                  value={item}\n                  className='hover:text-white hover:bg-indigo-600 text-gray-900 cursor-default select-none relative py-2 pl-3 pr-9'\n                  onClick={() => {\n                    setSelectedAction(item)\n                    // handleSessionRegFilter('session', session.pk)\n                    setShowActions(false)\n                    if (dropdownSelectorMode === 'view-session-registrants') {\n                      setActionItem(item)\n                    }\n                  }}\n\n                >\n                  {/* <!-- Selected: \"font-semibold\", Not Selected: \"font-normal\" --> */}\n                  <span\n                    className='font-normal space-x-2 flex'\n                  >\n                    <p>{item}</p>\n                  </span>\n                </li>\n              ))}\n\n            </ul>\n          </div>\n        </Transition>\n      </div>\n    </>\n  )\n}\n\nexport default StaticMenu\n","import { useState } from 'react'\nimport { MailIcon, PencilAltIcon, TrashIcon } from '@heroicons/react/solid'\nimport { ChevronDoubleRightSolid } from '@graywolfai/react-heroicons'\nimport StaticMenu from './dropdownMenus/StaticMenu'\n\nconst RenderRegistrants = ({ token, sessions, isLoggedIn, setShowModal, dropdownSelectorMode, setDropdownSelectorMode, setSessionToRegister, registrantsToRender, setRegistrantsToRender, allEmails, handleAllEmails, handleDeleteState, handleEditState, handleSessionToEdit, handleDelete, handleRegistrantUpdate, handleRefreshAfterEdit, setIsDeleting, setIsEditing }) => {\n  const [emails, setEmails] = useState([])\n  const [selectedAction, setSelectedAction] = useState('')\n\n  // DEBUGGER STATION\n  // console.log('allEmails', allEmails)\n  // console.log('emails', emails)\n  // console.log('isDeleting', isDeleting)\n  // console.log('isEditing', isEditing)\n  // console.log('sessions', sessions)\n  // console.log('registrantsToRender', registrantsToRender)\n  // console.log('registrantToEdit', registrantToEdit)\n  // console.log('registrantToDelete', registrantToDelete)\n  // console.log('sessions in ViewSessionReg', sessions)\n  // console.log('sessionToUpate', sessionToUpdate)\n\n  const handleEmails = (email) => {\n    const checkEmails = [...emails]\n    if (checkEmails.includes(email)) {\n      setEmails(emails.filter(em => em !== email))\n    } else {\n      const newEmails = [...emails, email]\n      setEmails(newEmails)\n    }\n  }\n\n  // This function handles how the btn text and mail functions\n  // are implemented based on the action dropdown selection\n  const handleBtnText = () => {\n    if (selectedAction === 'Email All') {\n      return (\n        <a\n          href={`mailto:${allEmails}`}\n          rel='noreferrer'\n          target='_blank'\n        >\n          <span className='flex'>\n            <MailIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n            {selectedAction}\n          </span>\n        </a>\n      )\n    } else if (selectedAction === 'Email Selected') {\n      return (\n        <a\n          href={`mailto:${emails}`}\n          rel='noreferrer'\n          target='_blank'\n        >\n          <span className='flex'>\n            <MailIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n            {selectedAction}\n          </span>\n        </a>\n      )\n    } else if (selectedAction === 'Update') {\n      return (\n        <span className='flex'>\n          <PencilAltIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n          {selectedAction}\n        </span>\n      )\n    } else if (selectedAction === 'Delete') {\n      return (\n        <span className='flex'>\n          <TrashIcon className='-ml-0.5 mr-2 h-4 w-4' aria-hidden='true' />\n          {selectedAction}\n        </span>\n      )\n    }\n  }\n\n  return (\n    <>\n      <div className='max-w-7xl mx-auto pb-12 px-4 sm:px-6 lg:px-8'>\n        <span className='flex justify-around' />\n        <div className='flex flex-col'>\n          <div className='-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8'>\n            <div className='py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8'>\n              <span>\n                <span className='flex items-start justify-end pt-10'>\n                  {registrantsToRender.pk &&\n                    <div className='flex flex-row space-x-2 mb-2'>\n                      <div className={`flex justify-center ${selectedAction && 'transform -translate-x-2 duration-700'}`}>\n                        <StaticMenu dropdownSelectorMode='action' selectedAction={selectedAction} setSelectedAction={setSelectedAction} />\n                      </div>\n                      {selectedAction &&\n                        <div className='flex items-center'>\n                          <ChevronDoubleRightSolid className='-ml-0.5 mr-2 h-4 w-4 transition delay-1000 animate-pulse' aria-hidden='true' />\n                        </div>}\n                      {selectedAction &&\n                        <span className='flex transition-all delay-1000 duration-500 ease-in-out'>\n                          <button\n                            type='button'\n                            className='inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-coolGray-600 bg-lavenderBlue hover:bg-bluePurple hover:text-ghostWhite focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                            onClick={() => {\n                              if (selectedAction === 'Delete') {\n                                setIsEditing('')\n                                setIsDeleting('delete-registrant')\n                              } else if (selectedAction === 'Update') {\n                                setIsDeleting('')\n                                setIsEditing('edit-registrant')\n                              }\n                            }}\n                          >\n                            {handleBtnText()}\n                          </button>\n                        </span>}\n                    </div>}\n                </span>\n                <div className='shadow overflow-hidden border-b border-gray-200 sm:rounded-lg'>\n                  <table className='min-w-full divide-y-8 divide-mediumPurple font-nunito'>\n                    <thead className='bg-gray-50'>\n                      <tr>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Name\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Pronouns\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Email\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Comment\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Confirmed\n                        </th>\n                        <th scope='col' className='px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider'>\n                          Action\n                        </th>\n                      </tr>\n                    </thead>\n\n                    <tbody className='bg-white divide-y-8 divide-lavenderWebb font-nunito'>\n                      {!registrantsToRender.pk || registrantsToRender.session_registrants.map((registrant, idx) => (\n                        <tr key={`${registrant.pk}-index-${idx}`}>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 space-x-1 flex'>\n                            <p>{registrant.first_name}</p>\n                            <p>{registrant.last_name}</p>\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>\n                            {registrant.pronouns}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>\n                            {registrant.email}\n                          </td>\n                          <td className='px-6 py-4 break-words text-sm text-gray-500'>\n                            {registrant.comment}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center'>\n                            {registrant.confirm ? 'Yes' : 'No'}\n                          </td>\n                          <td className='px-6 py-4 whitespace-nowrap text-center text-sm font-medium'>\n                            <input\n                              name={idx}\n                              id={registrant.email}\n                              type='checkbox'\n                              value={registrant.email}\n                              onChange={(e) => {\n                                handleEmails(registrant.email)\n                                handleSessionToEdit(registrant)\n                                handleEditState(e, registrant)\n                                handleDeleteState(e, registrant)\n                              }}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default RenderRegistrants\n","import { Fragment, useEffect, useState } from 'react'\nimport { Popover } from '@headlessui/react'\nimport { Redirect } from 'react-router-dom'\nimport Moment from 'react-moment'\nimport { listSessions, deleteRegistrant, updateRegistrant } from '../api'\nimport SelectionElement from './SelectionElement'\nimport DeleteAlert from './alerts/DeleteAlert'\nimport SessionRegister from './sessionForms/SessionRegister'\nimport RenderRegistrants from './RenderRegistrants'\n\nconst ViewSessionRegistrants = ({ token, isLoggedIn, setShowModal, dropdownSelectorMode, setDropdownSelectorMode, setSessionToRegister }) => {\n  const [sessions, setSessions] = useState([])\n  const [registrantsToRender, setRegistrantsToRender] = useState([])\n  const [allEmails, setAllEmails] = useState([])\n  const [isDeleting, setIsDeleting] = useState('')\n  const [isEditing, setIsEditing] = useState('')\n  const [registrantToDelete, setRegistrantToDelete] = useState([])\n  const [registrantToEdit, setRegistrantToEdit] = useState([])\n  const [sessionToUpdate, setSessionToUpdate] = useState([])\n\n  // DEBUGGER STATION\n  // console.log('allEmails', allEmails)\n  // console.log('emails', emails)\n  // console.log('isDeleting', isDeleting)\n  // console.log('isEditing', isEditing)\n  // console.log('sessions', sessions)\n  // console.log('registrantsToRender', registrantsToRender)\n  // console.log('registrantToEdit', registrantToEdit)\n  // console.log('registrantToDelete', registrantToDelete)\n  // console.log('sessions in ViewSessionReg', sessions)\n  // console.log('sessionToUpate', sessionToUpdate)\n\n  useEffect(() => {\n    listSessions()\n      .then(sessions => {\n        setSessions(sessions)\n        setDropdownSelectorMode('view-session-registrants')\n      })\n  }, [setDropdownSelectorMode])\n\n  const getConfirmationCount = () => {\n    const confirmationStatuses = registrantsToRender.session_registrants.map(reg => reg.confirm)\n    const confirmed = []\n    confirmationStatuses.forEach(status => {\n      if (status) {\n        confirmed.push(status)\n      }\n    })\n    return confirmed.length\n  }\n\n  const handleClearAllActionState = () => {\n    setSessionToUpdate([])\n    setRegistrantToEdit([])\n    setRegistrantToDelete([])\n  }\n\n  const handleAllEmails = (session) => {\n    setAllEmails(session.session_registrants.map(registrants => registrants.email))\n  }\n\n  const handleDeleteState = (e, registrant) => {\n    if (!e.target.checked) {\n      setRegistrantToDelete([])\n    } else {\n      setRegistrantToDelete(registrant)\n    }\n  }\n\n  const handleEditState = (e, registrant) => {\n    if (!e.target.checked) {\n      setRegistrantToEdit([])\n    } else {\n      setRegistrantToEdit(registrant)\n    }\n  }\n\n  // This function handles getting the session ready to\n  // be passed to SessionRegister.js. It is passed as\n  // 'sessionToRegister' because that is already\n  // working on the receiving end.\n  const handleSessionToEdit = (registrant) => {\n    sessions.forEach(session => {\n      if (session.pk === registrant.session) {\n        setSessionToUpdate(session)\n      }\n    })\n  }\n\n  const handleDelete = (pk) => {\n    deleteRegistrant(token, pk)\n      .then(data => {\n        listSessions()\n          .then(sessions => {\n            setSessions(sessions)\n            handleRefreshAfterEdit(sessions)\n            setDropdownSelectorMode('view-session-registrants')\n          })\n      })\n  }\n\n  const handleRegistrantUpdate = (token, pk, input) => {\n    updateRegistrant(token, pk, input)\n      .then(data => {\n        listSessions()\n          .then(sessions => {\n            setSessions(sessions)\n            handleRefreshAfterEdit(sessions)\n            setIsEditing('')\n            setDropdownSelectorMode('view-session-registrants')\n          })\n      })\n  }\n\n  const handleRefreshAfterEdit = (sessions) => {\n    sessions.forEach(session => {\n      if (session.pk === registrantsToRender.pk) {\n        setRegistrantsToRender(session)\n        handleAllEmails(session)\n      }\n    })\n  }\n\n  if (isDeleting) {\n    return (\n      <DeleteAlert isDeleting={isDeleting} setIsDeleting={setIsDeleting} handleDelete={handleDelete} dataToDelete={registrantToDelete} handleClearAllActionState={handleClearAllActionState} />\n    )\n  }\n\n  if (isEditing === 'edit-registrant' && registrantToEdit.pk) {\n    return (\n      <SessionRegister\n        token={token} registrantToEdit={registrantToEdit} isEditing={isEditing} sessions={sessions} setIsEditing={setIsEditing} showModal='session-registration-form' setShowModal={setShowModal} sessionToRegister={sessionToUpdate} handleRegistrantUpdate={handleRegistrantUpdate}\n      />\n    )\n  }\n\n  // USE THIS WHEN MOBILE VIEW REGISTRANTS IS WORKING\n  // if (isEditing === 'edit-registrant-overlay' && registrantToEdit.pk) {\n  //   return (\n  //     <SessionRegister\n  //       token={token} registrantToEdit={registrantToEdit} isEditing={isEditing} sessions={sessions} setIsEditing={setIsEditing} showModal='session-registration-form' setShowModal={setShowModal} sessionToRegister={sessionToUpdate} handleRegistrantUpdate={handleRegistrantUpdate}\n  //     />\n  //   )\n  // }\n\n  if (!isLoggedIn) {\n    <Redirect to='/' />\n  }\n\n  const setSessionTableTitle = () => {\n    return (\n      <span\n        className='text-3xl font-bold font-nunito space-x-2 break-words flex'\n      >\n        <p>{registrantsToRender.title}</p>\n      </span>\n    )\n  }\n\n  return (\n    <>\n      <div className='relative bg-white overflow-hidden'>\n        <div className='max-w-7xl mx-auto'>\n          <div className='relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32'>\n            <svg\n              className='hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2'\n              fill='currentColor'\n              viewBox='0 0 100 100'\n              preserveAspectRatio='none'\n              aria-hidden='true'\n            >\n              <polygon points='50,0 100,0 50,100 0,100' />\n            </svg>\n\n            {/* Have to keep this for style */}\n            <Popover>\n              {({ open }) => (\n                <>\n                  <div className='relative pt-6 px-4 sm:px-6 lg:px-8' />\n                </>\n              )}\n            </Popover>\n\n            <main\n              className='mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28'\n            >\n              <div\n                className='text-center lg:text-left'\n              >\n                <h1 className='flex flex-col text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl space-y-2 lg:space-y-0 pt-4 lg:pt-0'>\n                  <span className='block xl:inline'>Admin Hub</span>{' '}\n                  <span className='block text-mediumPurple xl:inline'>See Who's Registered</span>\n                </h1>\n                <SelectionElement sessions={sessions} dropdownSelectorMode={dropdownSelectorMode} setRegistrantsToRender={setRegistrantsToRender} handleAllEmails={handleAllEmails} />\n                <div className='mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start' />\n              </div>\n            </main>\n          </div>\n        </div>\n        <div className='lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 bg-mediumPurple flex justify-center'>\n          <div className='flex flex-col items-end justify-center w-full h-72 sm:h-64 lg:h-full space-y-4 xl:space-y-8 pb-2 xl:pb-0 font-nunito'>\n            <div className='bg-darkerPurple w-full flex justify-center lg:justify-end lg:pr-8 lg:pl-14 xl:justify-center xl:pr-0'>\n              <span className='text-white font-nunito text-md xl:text-xl lg:max-w-xs xl:max-w-none'>\n                <h1 className='text-3xl font-bold flex justify-start shadow-sm rounded-lg'>{!registrantsToRender.pk ? 'Session Dashboard' : setSessionTableTitle()}</h1>\n                {registrantsToRender.pk &&\n                  <>\n                    <div className='flex space-x-2'>\n                      <p className='font-bold text-coolGray-100'>Date:</p>\n                      <span className='flex space-x-1'>\n                        <Moment format='MMM DD, YYYY'>{registrantsToRender.start_date}</Moment>\n                        <p>-</p>\n                        <Moment format='MMM DD, YYYY'>{registrantsToRender.end_date}</Moment>\n                      </span>\n                    </div>\n                    <div className='flex space-x-2'>\n                      <p className='font-bold text-coolGray-100'>Time:</p>\n                      <span className='flex space-x-1'>\n                        <Moment format='h:mm a'>{registrantsToRender.start_time}</Moment>\n                        <p>-</p>\n                        <Moment format='h:mm a'>{registrantsToRender.end_time}</Moment>\n                      </span>\n                    </div>\n                    <div className='flex space-x-2'>\n                      <p className='font-bold text-coolGray-100'>Number of registrants:</p>\n                      <p>{!registrantsToRender.pk || registrantsToRender.session_registrants.length}</p>\n                    </div>\n                    <div className='flex space-x-2'>\n                      <p className='font-bold text-coolGray-100'>Number confirmed:</p>\n                      <p>{!registrantsToRender.pk || getConfirmationCount()}</p>\n                    </div>\n                  </>}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=''>\n        <RenderRegistrants token={token} isLoggedIn={isLoggedIn} sessions={sessions} setShowModal={setShowModal} dropdownSelectorMode={dropdownSelectorMode} setDropdownSelectorMode={setDropdownSelectorMode} setSessionToRegister={setSessionToRegister} registrantsToRender={registrantsToRender} setRegistrantsToRender={setRegistrantsToRender} allEmails={allEmails} handleAllEmails={handleAllEmails} handleDeleteState={handleDeleteState} handleEditState={handleEditState} handleSessionToEdit={handleSessionToEdit} handleDelete={handleDelete} handleRegistrantUpdate={handleRegistrantUpdate} handleRefreshAfterEdit={handleRefreshAfterEdit} setIsDeleting={setIsDeleting} setIsEditing={setIsEditing} />\n      </div>\n    </>\n  )\n}\n\nexport default ViewSessionRegistrants\n","import { EyeIcon, EyeOffIcon, RefreshIcon } from '@heroicons/react/outline'\nimport { Fragment, useRef, useState, useEffect } from 'react'\nimport { useParams, Link, useHistory } from 'react-router-dom'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { confirmChangePassword } from '../api'\nimport PasswordAlert from './alerts/PasswordAlert'\nimport PasswordMatchAlert from './alerts/PasswordMatchAlert'\nimport UsePasswordValidation from './UsePasswordValidation'\nimport Errors from './Errors'\n// import { LogoutSolid } from '@graywolfai/react-heroicons'\n\nexport default function PasswordResetConfirm ({ token, setToken, setUsername }) {\n  const [open, setOpen] = useState(true)\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const { uid } = useParams()\n  const { urlToken } = useParams()\n  const history = useHistory()\n  const cancelButtonRef = useRef()\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [passwordBlur, setPasswordBlur] = useState(false)\n  const [passwordMatchBlur, setPasswordMatchBlur] = useState(false)\n  const [enableBtn, setEnableBtn] = useState(0)\n  const [errors, setErrors] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  // DEBUGGER STATION\n  console.log('token', token)\n  console.log('urlToken', urlToken)\n\n  const [validLength, hasNumber, upperCase, lowerCase, match, specialChar, falseCount] = UsePasswordValidation({\n    password: password,\n    confirmPassword: confirmPassword\n  })\n\n  console.log('match', match)\n\n  useEffect(() => {\n    setEnableBtn(falseCount)\n  }, [falseCount, setEnableBtn])\n\n  const handlePasswordAlert = () => {\n    if (passwordBlur) {\n      return (\n        <span>\n          <PasswordAlert validLength={validLength} hasNumber={hasNumber} upperCase={upperCase} lowerCase={lowerCase} specialChar={specialChar} falseCount={falseCount} setEnableBtn={setEnableBtn} />\n        </span>\n      )\n    }\n  }\n\n  const handlePasswordMatchAlert = () => {\n    if (passwordMatchBlur) {\n      return (\n        <PasswordMatchAlert match={match} />\n      )\n    }\n  }\n\n  const handleConfirmChangePassword = () => {\n    setIsLoading(true)\n    confirmChangePassword(uid, urlToken, password, confirmPassword)\n      .then(data => {\n        // logout(token)\n        //   .then(data => {\n        setIsLoading(false)\n        setOpen(false)\n        setToken(null)\n        setUsername('')\n        history.push('/')\n        // })\n      })\n      // .catch(error => {\n      //   console.log('error', error)\n      //   setErrors(error.message)\n      // })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mt-3 text-center sm:mt-3'>\n                  <Dialog.Title as='h3' className='mb-5 text-lg leading-6 font-medium text-gray-900'>\n                    Enter New Password\n                  </Dialog.Title>\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    {errors && (\n                      <div>\n                        <Errors errors={errors} setErrors={setErrors} />\n                      </div>\n                    )}\n                    <div>\n\n                      <label\n                        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n                        htmlFor='password'\n                      >\n                        Password\n                      </label>\n                      <span className='flex'>\n                        <input\n                          id='password'\n                          name='password'\n                          onBlur={e => setPasswordBlur(true)}\n                          type={`${showPassword ? 'text' : 'password'}`}\n                          autoComplete='current-password'\n                          required className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n                          placeholder='Password'\n                          value={password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <button\n                          type='button'\n                          tabIndex='-1'\n                          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n                          onClick={() => setShowPassword(!showPassword)}\n                        >\n                          {showPassword\n                            ? <EyeOffIcon className='w-4 h-4' />\n                            : <EyeIcon className='w-4 h-4' />}\n                        </button>\n                      </span>\n\n                      {falseCount > 0 && <span>{handlePasswordAlert()}</span>}\n\n                      <label\n                        className='block text-sm sm:text-lg font-medium text-gray-700 text-left mt-4'\n                        htmlFor='confirm password'\n                      >\n                        Re-type Password\n                      </label>\n                      <span className='flex'>\n                        <input\n                          id='confirm password'\n                          name='confirmPassword'\n                          onBlur={e => setPasswordMatchBlur(true)}\n                          type={`${showConfirmPassword ? 'text' : 'password'}`}\n                          required\n                          className='appearance-none rounded-md rounded-r-none relative block w-full px-3 py-2 border border-gray-300 border-r-0 placeholder-gray-500 focus:outline-none focus:ring-darkerPurple focus:darkerPurple focus:z-10 sm:text-sm'\n                          placeholder='Confirm Password'\n                          value={confirmPassword}\n                          onChange={(e) => {\n                            setConfirmPassword(e.target.value)\n                          }}\n                        />\n                        <button\n                          type='button'\n                          tabIndex='-1'\n                          className='px-3 py-2 border border-gray-300 border-l-0 rounded-md rounded-l-none focus:outline-none'\n                          onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                        >\n                          {showConfirmPassword\n                            ? <EyeOffIcon className='w-4 h-4' />\n                            : <EyeIcon className='w-4 h-4' />}\n                        </button>\n                      </span>\n                      {!match && handlePasswordMatchAlert()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                {isLoading\n                  ? <button\n                      type='button'\n                      disabled\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                    >\n                    <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                    Processing\n                  </button>\n                  : <button\n                      type='button'\n                      disabled={enableBtn > 0 || !match}\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleConfirmChangePassword()\n                      }}\n                    >\n                    Submit\n                  </button>}\n\n                <Link\n                  to='/'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                  onClick={() => setOpen(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { Fragment, useRef, useState } from 'react'\nimport { useParams, Link, useHistory } from 'react-router-dom'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { confirmChangeUsername } from '../api'\nimport { RefreshIcon } from '@heroicons/react/outline'\n\nexport default function UsernameResetConfirm ({ token, setToken, setUsername }) {\n  const [open, setOpen] = useState(true)\n  const [newUsername, setNewUsername] = useState('')\n  const [confirmUsername, setConfirmUsername] = useState('')\n  const { uid } = useParams()\n  const { urlToken } = useParams()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n  const cancelButtonRef = useRef()\n\n  console.log('urlToken', urlToken)\n  const handleConfirmChangeUsername = () => {\n    setIsLoading(true)\n    confirmChangeUsername(uid, urlToken, newUsername, confirmUsername)\n      .then(data => {\n        setOpen(false)\n        setIsLoading(false)\n        setToken(null)\n        setUsername('')\n        history.push('/')\n      })\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as='div'\n        static\n        className='fixed z-10 inset-0 overflow-y-auto'\n        initialFocus={cancelButtonRef}\n        open={open}\n        onClose={setOpen}\n      >\n        <div className='flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0'>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0'\n            enterTo='opacity-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100'\n            leaveTo='opacity-0'\n          >\n            <Dialog.Overlay className='fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity' />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className='hidden sm:inline-block sm:align-middle sm:h-screen' aria-hidden='true'>\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter='ease-out duration-300'\n            enterFrom='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n            enterTo='opacity-100 translate-y-0 sm:scale-100'\n            leave='ease-in duration-200'\n            leaveFrom='opacity-100 translate-y-0 sm:scale-100'\n            leaveTo='opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95'\n          >\n            <div className='inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6'>\n              <div>\n                <div className='mt-3 text-center sm:mt-3'>\n                  <Dialog.Title as='h3' className='mb-5 text-lg leading-6 font-medium text-gray-900'>\n                    Enter New Username\n                  </Dialog.Title>\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    <div>\n                      <label htmlFor='username' className='sr-only'>Change Username</label>\n                      <input\n                        id='username'\n                        name='username'\n                        type='username'\n                        autoComplete='current-username'\n                        required className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                        placeholder='username'\n                        value={newUsername}\n                        onChange={(e) => setNewUsername(e.target.value)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='rounded-md shadow-sm -space-y-px'>\n                    <div>\n                      <label htmlFor='confirmUsername' className='sr-only'>Confirm Username</label>\n                      <input\n                        id='confirmUsername'\n                        name='confirmUsername'\n                        type='confirmUsername'\n                        autoComplete='current-username'\n                        required className='appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm'\n                        placeholder='re-enter username'\n                        value={confirmUsername}\n                        onChange={(e) => setConfirmUsername(e.target.value)}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className='mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense'>\n                {isLoading\n                  ? <button\n                      type='button'\n                      required\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                    >\n                    <RefreshIcon className='h-4 w-4 mr-4 self-center animate-spin' />\n                    Processing\n                  </button>\n                  : <button\n                      type='button'\n                      className='w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 btn-color focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm'\n                      onClick={() => {\n                        handleConfirmChangeUsername()\n                      }}\n                    >\n                    Submit\n                  </button>}\n\n                <Link\n                  to='/'\n                  className='mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm'\n                  onClick={() => setOpen(false)}\n                  ref={cancelButtonRef}\n                >\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { Animated } from 'react-animated-css'\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nconst LIST_ITEMS = [\n  'What does it mean to live an anti-racist life?',\n  'Upcoming Event: Book Study on \"How to be an Antiracist\"',\n  'How can we do anti-racist work and mitigate white saviorism?'\n]\n\nconst LandingCarousel = () => {\n  const [current, setCurrent] = useState(0)\n  const { length } = LIST_ITEMS\n\n  const goToNext = useCallback(() => {\n    setCurrent(current === length - 1 ? 0 : current + 1)\n  }, [current, length])\n\n  useEffect(() => {\n    setTimeout(goToNext, 5000)\n  }, [goToNext])\n\n  if (!LIST_ITEMS || length <= 0) {\n    return null\n  }\n\n  return (\n    <>\n      <section className='flex items-center h-full w-full'>\n        {LIST_ITEMS.map((item, idx) => (\n          <div\n            key={idx}\n            className={`${idx === current ? 'block' : 'hidden'} text-3xl sm:text-5xl bg-darkerPurple w-full py-6 px-4 flex justify-center lg:justify-end xl:justify-center`}\n          >\n            <div className='w-full sm:w-2/3 lg:w-1/2 xl:w-3/4 font-playFair font-semibold italic'>\n              <Animated animationIn='fadeInRight' animationInDuration={2000} animationOut='fadeOutLeft' isVisible>\n                {item}\n              </Animated>\n            </div>\n          </div>\n        ))}\n      </section>\n    </>\n  )\n}\n\nexport default LandingCarousel\n","import { ChatAltIcon, ChevronDoubleDownIcon } from '@heroicons/react/outline'\n\nconst MESSAGES = [\n  {\n    title: 'A personal invitation and note from the founder - Rachael Gigliotti',\n    paragraph1: 'Privilege is a power that takes intentionality to see, and it is necessary that we see it in order to reduce harm moving forward. One thing that I have learned over the years is that to be a better anti-racist, one must make mistakes and be grounded in their own understanding as race and racism continues to evolve and change in it’s presentation. I have also witnessed that the best anti-racists do not operate in a vacuum; that it takes the strength of a community to come together and support each other on this journey.',\n    paragraph2: 'Lastly, I decided to focus my energy toward creating intentional white spaces because I have found it invaluable to be able to collectively process what it means to be white in this country, especially without harming our friends and family of color. I recognize that meeting solely in white spaces has limitations to accomplishing racial liberation but without this intentional commitment we will be unprepared and this can lead us to being counterproductive and at times cause harm in this larger fight for racial equity.  We must do our work to understand and acknowledge what it means to be white and the implicite harm we inherently inject in our society.',\n    icon: ChatAltIcon\n  }\n]\n\nexport default function HomeMessage () {\n  return (\n    <div className='py-4 sm:py-12 bg-white mb-10'>\n      <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>\n        <div className='lg:text-center'>\n          <div className='w-full flex justify-center'>\n            <ChevronDoubleDownIcon className='animate-pulse text-darkerPurple w-auto h-12' />\n          </div>\n          <p className='mt-10 max-w-2xl text-xl text-gray-500 lg:mx-auto font-nunito'>\n            A personal invitation and note from the founder - Rachael Gigliotti\n          </p>\n        </div>\n        <div className='mt-10'>\n          <dl className='space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10'>\n            <div className='relative grid col-span-full font-nunito'>\n              <dt>\n                <p className='sm:ml-16 text-base text-gray-500'>{MESSAGES[0].paragraph1}</p>\n              </dt>\n              <dd className='mt-2 sm:ml-16 text-base text-gray-500'>{MESSAGES[0].paragraph2}</dd>\n            </div>\n          </dl>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { Fragment } from 'react'\nimport { Popover } from '@headlessui/react'\nimport LandingCarousel from './LandingCarousel'\nimport { Animated } from 'react-animated-css'\nimport HomeMessage from './HomeMessage'\n\nconst Home = () => {\n  return (\n    <>\n      <div className='relative bg-white overflow-hidden'>\n        <div className='max-w-7xl mx-auto'>\n          <div className='relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32'>\n            <svg\n              className='hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2'\n              fill='currentColor'\n              viewBox='0 0 100 100'\n              preserveAspectRatio='none'\n              aria-hidden='true'\n            >\n              <polygon points='50,0 100,0 50,100 0,100' />\n            </svg>\n\n            {/* Have to keep this for style */}\n            <Popover>\n              {({ open }) => (\n                <>\n                  <div className='relative pt-6 px-4 sm:px-6 lg:px-8' />\n                </>\n              )}\n            </Popover>\n\n            <main\n              className='mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28'\n            >\n              <Animated animationIn='fadeIn' animationInDuration={3000} animationOut='fadeOutLeft' isVisible>\n                <div\n                  className='text-center lg:text-left'\n                >\n                  <h1 className='flex flex-col text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl space-y-2 lg:space-y-0 pt-10 sm:pt-4 lg:pt-0'>\n                    <span\n                      className='block xl:inline'\n                    >Welcome to\n                    </span>{' '}\n                    <span className='block text-mediumPurple xl:inline'>Racial Equity White Talk</span>\n                  </h1>\n                  <p\n                    className='mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0 font-nunito'\n                  >\n                    We invite you to join us as we explore white identity in the context of racism in the US. Through book stuides and weekly sessions we explore what it means to live an anti-racist life and to do anti-racist work as white people. We do this in a community of white people, all learning, all leaning into discomfort, all making mistakes, and all growing in this work.\n                  </p>\n                </div>\n              </Animated>\n            </main>\n          </div>\n        </div>\n        <div className='lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 bg-mediumPurple flex items-center justify-center lg:justify-end xl:justify-center h-72 sm:h-auto'>\n          <LandingCarousel />\n        </div>\n      </div>\n      <HomeMessage />\n    </>\n  )\n}\n\nexport default Home\n","import { Animated } from 'react-animated-css'\n\nconst AboutMobile = ({ FACILITATORS }) => {\n  return (\n    <>\n      <main\n        className='mt-10 mx-auto max-w-7xl px-4 sm:hidden'\n      >\n        <Animated\n          animationIn='fadeIn'\n          animationInDuration={1000}\n          animationOut='fadeOutLeft'\n          isVisible\n        >\n          {FACILITATORS.map(facilitator => (\n            <div\n              key={facilitator.name}\n              className='flex flex-col justify-between'\n            >\n              <span>\n                <h1 className='flex flex-col mt-16 text-4xl tracking-tight font-extrabold text-gray-900 space-y-2'>\n                  <span className='block'>About</span>{' '}\n                  <span className='block text-mediumPurple'>{facilitator.name}</span>\n                </h1>\n                <p\n                  className='mt-3 text-base text-gray-500 font-nunito'\n                >\n                  <span className=''>\n                    {facilitator.bio}\n                    {facilitator.email &&\n                      <span>&nbsp;Contact Rachael at&nbsp;\n                        <a\n                          href={`mailto:${facilitator.email}`}\n                          rel='noreferrer'\n                          target='_blank'\n                        >{facilitator.email}\n                        </a>\n                      </span>}\n                  </span>\n                </p>\n              </span>\n            </div>\n          ))}\n        </Animated>\n      </main>\n    </>\n  )\n}\n\nexport default AboutMobile\n","import { Fragment, useState } from 'react'\nimport { Popover } from '@headlessui/react'\nimport { Animated } from 'react-animated-css'\nimport { ChevronDoubleLeftIcon, ChevronDoubleRightIcon } from '@heroicons/react/outline'\nimport AboutMobile from './AboutMobile'\n\nconst FACILITATORS = [\n  {\n    name: 'Rachael Gigliotti',\n    bio: 'Rachael Gigliotti has been living in Durham since 2010. In 2006, she attributes volunteering in New Orleans after hurricane Katrina as opening her eyes to seeing systematic racism in the US. Once going to an Racial Equity Institutes Phase 1 and 2 workshops in 2014, she found the language to filter and express the honesty around racism that could no longer be denied. She co-founded Durham\\'s Organizing Against Racism white caucus and stayed involved until 2020. She helped facilitate discussions around systematic racism with community members through Student U in the summer of 2020. She started the Racial Equity white Talk to expand the conversation about racism and privilege with other white folks interested in being a part of a larger and supportive community around racial equity.',\n    email: 'rachgigliotti@yahoo.com'\n  },\n  {\n    name: 'Natalie Rich',\n    bio: 'Natalie Rich lives and works in Durham, North Carolina, where she currently serves as a coordinator and facilitator for the Durham Organizing Against Racism (OAR) white caucus. Natalie has been involved in antiracist organizing since January 2014, when she completed her first Racial Equity Institute Phase I training \"Undoing Racism.\" Since then, she has co-facilitated cross racial conversation circles on race and racism, interactive theater presentations on microaggressions, and white affinity groups. Natalie has completed the Racial Equity Institute Groundwater training, Phase I and Phase II trainings.'\n  }\n  // {\n  //   name: 'Dan McKinney',\n  //   bio: 'Dan has lived in Durham since 2011 and attended the Racial Equity Institutes (REI) Phase 1 workshop for the first time in 2015. Wanting to take action, he quickly got engaged with Organizing Against Racism\\'s (OAR) white caucus only to learn that the action he really needed to take was to address the internalized racial superiority inside himself. He served as a coordinator for the white caucus for 5 years and has been on OAR Durham\\'s leadership team since 2016. He has continued his learning by attending REI Phase 2 and Latinx Challenges in Racial Equity workshops. For the past 5 years, he worked with youth through local non-profits to identify and address institutional racism with their high schools. Through OAR Durham, he has organized 5 youth REI workshops. He has had speaking engagements at Duke, DPS, and in the community to discuss power, privilege, white culture, sexism, and adultism. From 2018–2020, he served on the City of Durham\\'s Racial Equity Task Force.'\n  // }\n]\n\nconst FACILITATORS_LENGTH = FACILITATORS.length\n\nconst About = () => {\n  const [facilitatorIndex, setFacilitatorIndex] = useState(0)\n\n  const increaseIndexCount = () => {\n    if (facilitatorIndex === FACILITATORS_LENGTH - 1) {\n      setFacilitatorIndex(0)\n    } else {\n      setFacilitatorIndex(facilitatorIndex + 1)\n    }\n  }\n\n  const decreaseIndexCount = () => {\n    if (facilitatorIndex === 0) {\n      setFacilitatorIndex(FACILITATORS_LENGTH - 1)\n    } else {\n      setFacilitatorIndex(facilitatorIndex - 1)\n    }\n  }\n\n  const increaseBtnName = () => {\n    if (facilitatorIndex === FACILITATORS_LENGTH - 1) {\n      return (\n        FACILITATORS[0].name\n      )\n    } else {\n      return (\n        FACILITATORS[facilitatorIndex + 1].name\n      )\n    }\n  }\n\n  const decreaseBtnName = () => {\n    if (facilitatorIndex === 0) {\n      return (\n        FACILITATORS[FACILITATORS_LENGTH - 1].name\n      )\n    } else {\n      return (\n        FACILITATORS[facilitatorIndex - 1].name\n      )\n    }\n  }\n\n  return (\n    <>\n      <div className='relative bg-white overflow-hidden mb-32 sm:hidden'>\n        <AboutMobile FACILITATORS={FACILITATORS} />\n      </div>\n      <div className='hidden sm:block sm:relative sm:bg-white sm:overflow-hidden sm:h-screen'>\n        <div className='max-w-7xl mx-auto'>\n          <div className='relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32 h-screen'>\n            <svg\n              className='hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2'\n              fill='currentColor'\n              viewBox='0 0 100 100'\n              preserveAspectRatio='none'\n              aria-hidden='true'\n            >\n              <polygon points='50,0 100,0 50,100 0,100' />\n            </svg>\n\n            {/* Have to keep this for style */}\n            <Popover>\n              {({ open }) => (\n                <>\n                  <div className='relative pt-6 px-4 sm:px-6 lg:px-8' />\n                </>\n              )}\n            </Popover>\n\n            <main\n              className='hidden sm:block sm:mx-auto sm:max-w-7xl sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28 sm:h-full'\n            >\n              <Animated\n                animationIn='fadeIn'\n                animationInDuration={1000}\n                animationOut='fadeOutLeft'\n                isVisible\n                className='h-full'\n              >\n                <div\n                  className=' lg:text-left flex flex-col justify-between h-full'\n                >\n                  <span>\n                    <h1 className='flex flex-col text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl space-y-2 lg:space-y-0 pt-10 sm:pt-4 lg:pt-0'>\n                      <span className='block xl:inline'>About Us</span>{' '}\n                      {/* <span className='block sm:hidden text-mediumPurple xl:inline'>Rachel Gigliotti</span> */}\n                    </h1>\n                    <p\n                      className='mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-2xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0 font-nunito'\n                    >\n                      <span className=''>\n                        {FACILITATORS[facilitatorIndex].bio}\n                        {FACILITATORS[facilitatorIndex].email &&\n                          <span>&nbsp;Contact Rachael at&nbsp;\n                            <a\n                              href={`mailto:${FACILITATORS[facilitatorIndex].email}`}\n                              rel='noreferrer'\n                              target='_blank'\n                            >{FACILITATORS[facilitatorIndex].email}\n                            </a>\n                          </span>}\n                      </span>\n                    </p>\n                  </span>\n\n                  <div className='hidden sm:mt-8 sm:flex sm:justify-center lg:justify-start space-x-2 mb-10'>\n                    {FACILITATORS_LENGTH > 2 &&\n                      <div className='rounded-md shadow'>\n                        <button\n                          className='w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-darkerPurple bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-md md:px-10 focus:outline-none'\n                          onClick={() => decreaseIndexCount()}\n                        >\n                          {decreaseBtnName()}\n                        </button>\n                      </div>}\n                    <div className='flex items-center space-x-2'>\n                      {FACILITATORS_LENGTH > 2 &&\n                        <span>\n                          <ChevronDoubleLeftIcon className='w-auto h-8 animate-pulse text-darkerPurple' />\n                        </span>}\n                      <span className='font-nunito text-lg'>\n                        Learn about\n                      </span>\n                      <span>\n                        <ChevronDoubleRightIcon className='w-auto h-8 animate-pulse text-darkerPurple' />\n                      </span>\n                    </div>\n                    <div className='rounded-md shadow'>\n                      <button\n                        className='w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-darkerPurple bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-md md:px-10 focus:outline-none'\n                        onClick={() => {\n                          increaseIndexCount()\n                        }}\n                      >\n                        {increaseBtnName()}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Animated>\n            </main>\n          </div>\n        </div>\n        <div className='lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2 bg-mediumPurple flex items-center justify-center lg:justify-end xl:justify-center h-72 sm:h-auto'>\n          <section className='flex items-center h-full w-full'>\n            <div\n              className='text-3xl sm:text-5xl bg-darkerPurple w-full py-6 px-4 flex justify-center lg:justify-end xl:justify-center'\n            >\n              <p className='w-full sm:w-2/3 lg:w-1/2 xl:w-3/4 font-playFair font-semibold italic'>\n                {FACILITATORS[facilitatorIndex].name}\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default About\n","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport createPersistedState from 'use-persisted-state'\nimport './App.css'\nimport { getUser } from './api'\nimport Nav from './components/Nav'\nimport BookStudy from './components/BookStudy'\nimport Sessions from './components/Sessions'\nimport ViewSessionRegistrants from './components/ViewSessionRegistrants'\nimport ViewForm from './components/ViewForm'\nimport PasswordResetConfirm from './components/PasswordResetConfirm'\nimport UsernameResetConfirm from './components/UsernameResetConfirm'\nimport Home from './components/Home'\nimport About from './components/About'\n\nconst useUsername = createPersistedState('username')\nconst useToken = createPersistedState('token')\n\nfunction App () {\n  const [username, setUsername] = useUsername(null)\n  const [loggedInName, setLoggedInName] = useState('')\n  const [token, setToken] = useToken(null)\n  const isLoggedIn = (username && token)\n  const [registered, setRegistered] = useState(false)\n  const [sessions, setSessions] = useState([])\n  const [sessionToRegister, setSessionToRegister] = useState([])\n  const [dropdownSelectorMode, setDropdownSelectorMode] = useState('')\n  const [showModal, setShowModal] = useState('')\n  const [formToView, setFormToView] = useState('')\n  const [sessionToView, setSessionToView] = useState([])\n\n  function setAuth (username, token) {\n    setUsername(username)\n    setToken(token)\n  }\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      getUser(token)\n        .then(data => setLoggedInName(data.first_name))\n    }\n  }, [token, isLoggedIn])\n\n  // DEBUGGER STATION\n  // console.log('formToView', formToView)\n  // console.log('token', token)\n\n  return (\n    <Router>\n      <div className='min-h-screen bg-ghostWhite'>\n\n        <div className='bg-mediumPurple pb-32'>\n          <Nav token={token} setToken={setToken} username={username} setUsername={setUsername} isLoggedIn={isLoggedIn} setAuth={setAuth} showModal={showModal} setShowModal={setShowModal} loggedInName={loggedInName} setFormToView={setFormToView} setSessions={setSessions} />\n        </div>\n        <main className='-mt-32'>\n          <Switch>\n            <Route path='/book-study'>\n              <BookStudy />\n            </Route>\n            <Route path='/sessions'>\n              <Sessions token={token} isLoggedIn={isLoggedIn} sessions={sessions} setSessions={setSessions} sessionToRegister={sessionToRegister} setSessionToRegister={setSessionToRegister} showModal={showModal} setShowModal={setShowModal} setFormToView={setFormToView} setSessionToView={setSessionToView} registered={registered} setRegistered={setRegistered} />\n            </Route>\n            <Route path='/about'>\n              <About />\n            </Route>\n            <Route path='/view-session-registrants'>\n              <ViewSessionRegistrants token={token} isLoggedIn={isLoggedIn} dropdownSelectorMode={dropdownSelectorMode} setDropdownSelectorMode={setDropdownSelectorMode} setSessionToRegister={setSessionToRegister} setShowModal={setShowModal} sessions={sessions} />\n            </Route>\n            <Route path='/view-form'>\n              <ViewForm token={token} isLoggedIn={isLoggedIn} showModal={showModal} setShowModal={setShowModal} formToView={formToView} setFormToView={setFormToView} sessionToView={sessionToView} />\n            </Route>\n            <Route exact path='/password/reset/confirm/:uid/:urlToken'>\n              <PasswordResetConfirm token={token} setToken={setToken} setUsername={setUsername} />\n            </Route>\n            <Route exact path='/username/reset/confirm/:uid/:urlToken'>\n              <UsernameResetConfirm token={token} setToken={setToken} setUsername={setUsername} />\n            </Route>\n\n            <Route path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}